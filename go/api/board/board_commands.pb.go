//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 Jon Evans <jon@craftyjon.com>
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: board/board_commands.proto

package board

import (
	types "github.com/kicad/proto/common/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BoardOriginType int32

const (
	BoardOriginType_BOT_UNKNOWN BoardOriginType = 0
	BoardOriginType_BOT_GRID    BoardOriginType = 1
	BoardOriginType_BOT_DRILL   BoardOriginType = 2
)

// Enum value maps for BoardOriginType.
var (
	BoardOriginType_name = map[int32]string{
		0: "BOT_UNKNOWN",
		1: "BOT_GRID",
		2: "BOT_DRILL",
	}
	BoardOriginType_value = map[string]int32{
		"BOT_UNKNOWN": 0,
		"BOT_GRID":    1,
		"BOT_DRILL":   2,
	}
)

func (x BoardOriginType) Enum() *BoardOriginType {
	p := new(BoardOriginType)
	*p = x
	return p
}

func (x BoardOriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BoardOriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[0].Descriptor()
}

func (BoardOriginType) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[0]
}

func (x BoardOriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BoardOriginType.Descriptor instead.
func (BoardOriginType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{0}
}

type PadstackPresence int32

const (
	PadstackPresence_PSP_UNKNOWN     PadstackPresence = 0
	PadstackPresence_PSP_PRESENT     PadstackPresence = 1 // The padstack has a shape on a given layer (is flashed)
	PadstackPresence_PSP_NOT_PRESENT PadstackPresence = 2 // The padstack has no shape on a given layer (is not flashed)
)

// Enum value maps for PadstackPresence.
var (
	PadstackPresence_name = map[int32]string{
		0: "PSP_UNKNOWN",
		1: "PSP_PRESENT",
		2: "PSP_NOT_PRESENT",
	}
	PadstackPresence_value = map[string]int32{
		"PSP_UNKNOWN":     0,
		"PSP_PRESENT":     1,
		"PSP_NOT_PRESENT": 2,
	}
)

func (x PadstackPresence) Enum() *PadstackPresence {
	p := new(PadstackPresence)
	*p = x
	return p
}

func (x PadstackPresence) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PadstackPresence) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[1].Descriptor()
}

func (PadstackPresence) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[1]
}

func (x PadstackPresence) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PadstackPresence.Descriptor instead.
func (PadstackPresence) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{1}
}

type InactiveLayerDisplayMode int32

const (
	InactiveLayerDisplayMode_ILDM_UNKNOWN InactiveLayerDisplayMode = 0
	// Inactive layers are shown
	InactiveLayerDisplayMode_ILDM_NORMAL InactiveLayerDisplayMode = 1
	// Inactive layers are shown with dimmed colors
	InactiveLayerDisplayMode_ILDM_DIMMED InactiveLayerDisplayMode = 2
	// Inactive layers are hidden
	InactiveLayerDisplayMode_ILDM_HIDDEN InactiveLayerDisplayMode = 3
)

// Enum value maps for InactiveLayerDisplayMode.
var (
	InactiveLayerDisplayMode_name = map[int32]string{
		0: "ILDM_UNKNOWN",
		1: "ILDM_NORMAL",
		2: "ILDM_DIMMED",
		3: "ILDM_HIDDEN",
	}
	InactiveLayerDisplayMode_value = map[string]int32{
		"ILDM_UNKNOWN": 0,
		"ILDM_NORMAL":  1,
		"ILDM_DIMMED":  2,
		"ILDM_HIDDEN":  3,
	}
)

func (x InactiveLayerDisplayMode) Enum() *InactiveLayerDisplayMode {
	p := new(InactiveLayerDisplayMode)
	*p = x
	return p
}

func (x InactiveLayerDisplayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InactiveLayerDisplayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[2].Descriptor()
}

func (InactiveLayerDisplayMode) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[2]
}

func (x InactiveLayerDisplayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InactiveLayerDisplayMode.Descriptor instead.
func (InactiveLayerDisplayMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{2}
}

type NetColorDisplayMode int32

const (
	NetColorDisplayMode_NCDM_UNKNOWN NetColorDisplayMode = 0
	// Net and netclass colors are shown in the ratsnest and on all copper items
	NetColorDisplayMode_NCDM_ALL NetColorDisplayMode = 1
	// Net and netclass colors are shown in the ratsnest only
	NetColorDisplayMode_NCDM_RATSNEST NetColorDisplayMode = 2
	// Net and netclass colors are not shown
	NetColorDisplayMode_NCDM_OFF NetColorDisplayMode = 3
)

// Enum value maps for NetColorDisplayMode.
var (
	NetColorDisplayMode_name = map[int32]string{
		0: "NCDM_UNKNOWN",
		1: "NCDM_ALL",
		2: "NCDM_RATSNEST",
		3: "NCDM_OFF",
	}
	NetColorDisplayMode_value = map[string]int32{
		"NCDM_UNKNOWN":  0,
		"NCDM_ALL":      1,
		"NCDM_RATSNEST": 2,
		"NCDM_OFF":      3,
	}
)

func (x NetColorDisplayMode) Enum() *NetColorDisplayMode {
	p := new(NetColorDisplayMode)
	*p = x
	return p
}

func (x NetColorDisplayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetColorDisplayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[3].Descriptor()
}

func (NetColorDisplayMode) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[3]
}

func (x NetColorDisplayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetColorDisplayMode.Descriptor instead.
func (NetColorDisplayMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{3}
}

type BoardFlipMode int32

const (
	BoardFlipMode_BFM_UNKNOWN BoardFlipMode = 0
	// Normal ("non-flipped") mode
	BoardFlipMode_BFM_NORMAL BoardFlipMode = 1
	// "Flipped" mode, viewed from the back and mirrored around the X axis
	BoardFlipMode_BFM_FLIPPED_X BoardFlipMode = 2
)

// Enum value maps for BoardFlipMode.
var (
	BoardFlipMode_name = map[int32]string{
		0: "BFM_UNKNOWN",
		1: "BFM_NORMAL",
		2: "BFM_FLIPPED_X",
	}
	BoardFlipMode_value = map[string]int32{
		"BFM_UNKNOWN":   0,
		"BFM_NORMAL":    1,
		"BFM_FLIPPED_X": 2,
	}
)

func (x BoardFlipMode) Enum() *BoardFlipMode {
	p := new(BoardFlipMode)
	*p = x
	return p
}

func (x BoardFlipMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BoardFlipMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[4].Descriptor()
}

func (BoardFlipMode) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[4]
}

func (x BoardFlipMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BoardFlipMode.Descriptor instead.
func (BoardFlipMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{4}
}

type RatsnestDisplayMode int32

const (
	RatsnestDisplayMode_RDM_UNKNOWN RatsnestDisplayMode = 0
	// Ratsnest lines are drawn to objects even if they are on hidden layers
	RatsnestDisplayMode_RDM_ALL_LAYERS RatsnestDisplayMode = 1
	// Ratsnest lines are hidden when at least one endpoint is an item on a hidden layer
	RatsnestDisplayMode_RDM_VISIBLE_LAYERS RatsnestDisplayMode = 2
)

// Enum value maps for RatsnestDisplayMode.
var (
	RatsnestDisplayMode_name = map[int32]string{
		0: "RDM_UNKNOWN",
		1: "RDM_ALL_LAYERS",
		2: "RDM_VISIBLE_LAYERS",
	}
	RatsnestDisplayMode_value = map[string]int32{
		"RDM_UNKNOWN":        0,
		"RDM_ALL_LAYERS":     1,
		"RDM_VISIBLE_LAYERS": 2,
	}
)

func (x RatsnestDisplayMode) Enum() *RatsnestDisplayMode {
	p := new(RatsnestDisplayMode)
	*p = x
	return p
}

func (x RatsnestDisplayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RatsnestDisplayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_commands_proto_enumTypes[5].Descriptor()
}

func (RatsnestDisplayMode) Type() protoreflect.EnumType {
	return &file_board_board_commands_proto_enumTypes[5]
}

func (x RatsnestDisplayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RatsnestDisplayMode.Descriptor instead.
func (RatsnestDisplayMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{5}
}

type GetBoardStackup struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoardStackup) Reset() {
	*x = GetBoardStackup{}
	mi := &file_board_board_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardStackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardStackup) ProtoMessage() {}

func (x *GetBoardStackup) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardStackup.ProtoReflect.Descriptor instead.
func (*GetBoardStackup) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{0}
}

func (x *GetBoardStackup) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

type BoardStackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stackup       *BoardStackup          `protobuf:"bytes,1,opt,name=stackup,proto3" json:"stackup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardStackupResponse) Reset() {
	*x = BoardStackupResponse{}
	mi := &file_board_board_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardStackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardStackupResponse) ProtoMessage() {}

func (x *BoardStackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardStackupResponse.ProtoReflect.Descriptor instead.
func (*BoardStackupResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{1}
}

func (x *BoardStackupResponse) GetStackup() *BoardStackup {
	if x != nil {
		return x.Stackup
	}
	return nil
}

type UpdateBoardStackup struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Stackup       *BoardStackup            `protobuf:"bytes,2,opt,name=stackup,proto3" json:"stackup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBoardStackup) Reset() {
	*x = UpdateBoardStackup{}
	mi := &file_board_board_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBoardStackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoardStackup) ProtoMessage() {}

func (x *UpdateBoardStackup) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoardStackup.ProtoReflect.Descriptor instead.
func (*UpdateBoardStackup) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBoardStackup) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *UpdateBoardStackup) GetStackup() *BoardStackup {
	if x != nil {
		return x.Stackup
	}
	return nil
}

type GetGraphicsDefaults struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGraphicsDefaults) Reset() {
	*x = GetGraphicsDefaults{}
	mi := &file_board_board_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGraphicsDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphicsDefaults) ProtoMessage() {}

func (x *GetGraphicsDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphicsDefaults.ProtoReflect.Descriptor instead.
func (*GetGraphicsDefaults) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{3}
}

func (x *GetGraphicsDefaults) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

type GraphicsDefaultsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Defaults      *GraphicsDefaults      `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicsDefaultsResponse) Reset() {
	*x = GraphicsDefaultsResponse{}
	mi := &file_board_board_commands_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicsDefaultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicsDefaultsResponse) ProtoMessage() {}

func (x *GraphicsDefaultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicsDefaultsResponse.ProtoReflect.Descriptor instead.
func (*GraphicsDefaultsResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{4}
}

func (x *GraphicsDefaultsResponse) GetDefaults() *GraphicsDefaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

// Returns a Vector2 with the specified origin point
type GetBoardOrigin struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Type          BoardOriginType          `protobuf:"varint,2,opt,name=type,proto3,enum=kiapi.board.commands.BoardOriginType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoardOrigin) Reset() {
	*x = GetBoardOrigin{}
	mi := &file_board_board_commands_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardOrigin) ProtoMessage() {}

func (x *GetBoardOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardOrigin.ProtoReflect.Descriptor instead.
func (*GetBoardOrigin) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{5}
}

func (x *GetBoardOrigin) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *GetBoardOrigin) GetType() BoardOriginType {
	if x != nil {
		return x.Type
	}
	return BoardOriginType_BOT_UNKNOWN
}

type SetBoardOrigin struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Type          BoardOriginType          `protobuf:"varint,2,opt,name=type,proto3,enum=kiapi.board.commands.BoardOriginType" json:"type,omitempty"`
	Origin        *types.Vector2           `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBoardOrigin) Reset() {
	*x = SetBoardOrigin{}
	mi := &file_board_board_commands_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBoardOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBoardOrigin) ProtoMessage() {}

func (x *SetBoardOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBoardOrigin.ProtoReflect.Descriptor instead.
func (*SetBoardOrigin) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{6}
}

func (x *SetBoardOrigin) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *SetBoardOrigin) GetType() BoardOriginType {
	if x != nil {
		return x.Type
	}
	return BoardOriginType_BOT_UNKNOWN
}

func (x *SetBoardOrigin) GetOrigin() *types.Vector2 {
	if x != nil {
		return x.Origin
	}
	return nil
}

type GetNets struct {
	state protoimpl.MessageState   `protogen:"open.v1"`
	Board *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	// If provided, will only return nets that belong to the given netclass.
	// If more than one netclass_filter is given, nets belonging to any of the given classes will
	// be returned.
	NetclassFilter []string `protobuf:"bytes,2,rep,name=netclass_filter,json=netclassFilter,proto3" json:"netclass_filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNets) Reset() {
	*x = GetNets{}
	mi := &file_board_board_commands_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNets) ProtoMessage() {}

func (x *GetNets) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNets.ProtoReflect.Descriptor instead.
func (*GetNets) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{7}
}

func (x *GetNets) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *GetNets) GetNetclassFilter() []string {
	if x != nil {
		return x.NetclassFilter
	}
	return nil
}

type NetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nets          []*Net                 `protobuf:"bytes,1,rep,name=nets,proto3" json:"nets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetsResponse) Reset() {
	*x = NetsResponse{}
	mi := &file_board_board_commands_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetsResponse) ProtoMessage() {}

func (x *NetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetsResponse.ProtoReflect.Descriptor instead.
func (*NetsResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{8}
}

func (x *NetsResponse) GetNets() []*Net {
	if x != nil {
		return x.Nets
	}
	return nil
}

// Retrieve all the copper items belonging to a certain net or set of nets
// returns kiapi.common.commands.GetItemsResponse
type GetItemsByNet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to query, which fields to return, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of one or more types of items to retreive
	Types []types.KiCadObjectType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=kiapi.common.types.KiCadObjectType" json:"types,omitempty"`
	// A list of net codes to filter items by
	NetCodes      []*NetCode `protobuf:"bytes,3,rep,name=net_codes,json=netCodes,proto3" json:"net_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemsByNet) Reset() {
	*x = GetItemsByNet{}
	mi := &file_board_board_commands_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemsByNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsByNet) ProtoMessage() {}

func (x *GetItemsByNet) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsByNet.ProtoReflect.Descriptor instead.
func (*GetItemsByNet) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{9}
}

func (x *GetItemsByNet) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetItemsByNet) GetTypes() []types.KiCadObjectType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *GetItemsByNet) GetNetCodes() []*NetCode {
	if x != nil {
		return x.NetCodes
	}
	return nil
}

// Retrieve all the copper items belonging to a certain net class or set of net classes
// returns kiapi.common.commands.GetItemsResponse
type GetItemsByNetClass struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to query, which fields to return, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of one or more types of items to retreive
	Types []types.KiCadObjectType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=kiapi.common.types.KiCadObjectType" json:"types,omitempty"`
	// A list of net class names to filter items by
	NetClasses    []string `protobuf:"bytes,3,rep,name=net_classes,json=netClasses,proto3" json:"net_classes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemsByNetClass) Reset() {
	*x = GetItemsByNetClass{}
	mi := &file_board_board_commands_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemsByNetClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsByNetClass) ProtoMessage() {}

func (x *GetItemsByNetClass) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsByNetClass.ProtoReflect.Descriptor instead.
func (*GetItemsByNetClass) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{10}
}

func (x *GetItemsByNetClass) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetItemsByNetClass) GetTypes() []types.KiCadObjectType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *GetItemsByNetClass) GetNetClasses() []string {
	if x != nil {
		return x.NetClasses
	}
	return nil
}

// A net may be part of multiple classes that have a priority ordering, which will result in a
// composite "effective" netclass containing the merged/overridden properties of all the constituent
// netclasses it contains.  This message retrieves this effective netclass for a net or list of
// nets.
// Returns NetClassForNetsResponse
type GetNetClassForNets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Net           []*Net                 `protobuf:"bytes,1,rep,name=net,proto3" json:"net,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetClassForNets) Reset() {
	*x = GetNetClassForNets{}
	mi := &file_board_board_commands_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetClassForNets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetClassForNets) ProtoMessage() {}

func (x *GetNetClassForNets) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetClassForNets.ProtoReflect.Descriptor instead.
func (*GetNetClassForNets) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{11}
}

func (x *GetNetClassForNets) GetNet() []*Net {
	if x != nil {
		return x.Net
	}
	return nil
}

type NetClassForNetsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map of net name to netclass info
	Classes       map[string]*types.NetClass `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetClassForNetsResponse) Reset() {
	*x = NetClassForNetsResponse{}
	mi := &file_board_board_commands_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetClassForNetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetClassForNetsResponse) ProtoMessage() {}

func (x *NetClassForNetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetClassForNetsResponse.ProtoReflect.Descriptor instead.
func (*NetClassForNetsResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{12}
}

func (x *NetClassForNetsResponse) GetClasses() map[string]*types.NetClass {
	if x != nil {
		return x.Classes
	}
	return nil
}

// Refills some or all zones on the board.
// This is a blocking operation; it will return Empty immediately, but KiCad will return
// ApiStatusCode.AS_BUSY to all future API requests until the zone fill has completed.
type RefillZones struct {
	state protoimpl.MessageState   `protogen:"open.v1"`
	Board *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	// A list of zones to refill.  If empty, all zones are refilled.
	Zones         []*types.KIID `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefillZones) Reset() {
	*x = RefillZones{}
	mi := &file_board_board_commands_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefillZones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefillZones) ProtoMessage() {}

func (x *RefillZones) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefillZones.ProtoReflect.Descriptor instead.
func (*RefillZones) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{13}
}

func (x *RefillZones) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *RefillZones) GetZones() []*types.KIID {
	if x != nil {
		return x.Zones
	}
	return nil
}

// Computes the polygon representation of a pad, merging any custom shapes together.
// This representation will approximate curves as a series of segments.
type GetPadShapeAsPolygon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The board to process
	Board *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	// A list of one or more pads to process
	Pads []*types.KIID `protobuf:"bytes,2,rep,name=pads,proto3" json:"pads,omitempty"`
	// The layer to process
	Layer         BoardLayer `protobuf:"varint,3,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPadShapeAsPolygon) Reset() {
	*x = GetPadShapeAsPolygon{}
	mi := &file_board_board_commands_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPadShapeAsPolygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPadShapeAsPolygon) ProtoMessage() {}

func (x *GetPadShapeAsPolygon) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPadShapeAsPolygon.ProtoReflect.Descriptor instead.
func (*GetPadShapeAsPolygon) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{14}
}

func (x *GetPadShapeAsPolygon) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *GetPadShapeAsPolygon) GetPads() []*types.KIID {
	if x != nil {
		return x.Pads
	}
	return nil
}

func (x *GetPadShapeAsPolygon) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

// Returned from GetPadShapeAsPolygon.  The pads and polygons repeated fields will have the same length
// and can be treated as a list of tuples.
type PadShapeAsPolygonResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pads that were processed
	Pads []*types.KIID `protobuf:"bytes,1,rep,name=pads,proto3" json:"pads,omitempty"`
	// The polygon representation of each pad
	Polygons      []*types.PolygonWithHoles `protobuf:"bytes,2,rep,name=polygons,proto3" json:"polygons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PadShapeAsPolygonResponse) Reset() {
	*x = PadShapeAsPolygonResponse{}
	mi := &file_board_board_commands_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadShapeAsPolygonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadShapeAsPolygonResponse) ProtoMessage() {}

func (x *PadShapeAsPolygonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadShapeAsPolygonResponse.ProtoReflect.Descriptor instead.
func (*PadShapeAsPolygonResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{15}
}

func (x *PadShapeAsPolygonResponse) GetPads() []*types.KIID {
	if x != nil {
		return x.Pads
	}
	return nil
}

func (x *PadShapeAsPolygonResponse) GetPolygons() []*types.PolygonWithHoles {
	if x != nil {
		return x.Polygons
	}
	return nil
}

// Tests if the given set of items with padstacks (pads or vias) has content on the given set of layers.
// This is a dynamic call rather than a property of the padstack because pads and vias can be set to only include
// shapes on connected copper layers, and whether or not the pad is connected can't be determined in isolation.
// To optimize API call performance, multiple items and multiple layers to test may be passed in with this
// command message.  The return will include the results for each valid item on each valid layer.
// Note that not all layers make sense for a given item (for example, testing against BL_UNDEFINED never makes
// sense).  In general, the internal KiCad APIs will not return an error when testing non-sensical layers for a given
// item, and instead will return a default of "true" for any such layers.
type CheckPadstackPresenceOnLayers struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Items         []*types.KIID            `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Layers        []BoardLayer             `protobuf:"varint,3,rep,packed,name=layers,proto3,enum=kiapi.board.types.BoardLayer" json:"layers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPadstackPresenceOnLayers) Reset() {
	*x = CheckPadstackPresenceOnLayers{}
	mi := &file_board_board_commands_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPadstackPresenceOnLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPadstackPresenceOnLayers) ProtoMessage() {}

func (x *CheckPadstackPresenceOnLayers) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPadstackPresenceOnLayers.ProtoReflect.Descriptor instead.
func (*CheckPadstackPresenceOnLayers) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{16}
}

func (x *CheckPadstackPresenceOnLayers) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *CheckPadstackPresenceOnLayers) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CheckPadstackPresenceOnLayers) GetLayers() []BoardLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type PadstackPresenceEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *types.KIID            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,2,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Presence      PadstackPresence       `protobuf:"varint,3,opt,name=presence,proto3,enum=kiapi.board.commands.PadstackPresence" json:"presence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PadstackPresenceEntry) Reset() {
	*x = PadstackPresenceEntry{}
	mi := &file_board_board_commands_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadstackPresenceEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadstackPresenceEntry) ProtoMessage() {}

func (x *PadstackPresenceEntry) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadstackPresenceEntry.ProtoReflect.Descriptor instead.
func (*PadstackPresenceEntry) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{17}
}

func (x *PadstackPresenceEntry) GetItem() *types.KIID {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PadstackPresenceEntry) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *PadstackPresenceEntry) GetPresence() PadstackPresence {
	if x != nil {
		return x.Presence
	}
	return PadstackPresence_PSP_UNKNOWN
}

type PadstackPresenceResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Entries       []*PadstackPresenceEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PadstackPresenceResponse) Reset() {
	*x = PadstackPresenceResponse{}
	mi := &file_board_board_commands_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadstackPresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadstackPresenceResponse) ProtoMessage() {}

func (x *PadstackPresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadstackPresenceResponse.ProtoReflect.Descriptor instead.
func (*PadstackPresenceResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{18}
}

func (x *PadstackPresenceResponse) GetEntries() []*PadstackPresenceEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// returns BoardLayers
type GetVisibleLayers struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVisibleLayers) Reset() {
	*x = GetVisibleLayers{}
	mi := &file_board_board_commands_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVisibleLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisibleLayers) ProtoMessage() {}

func (x *GetVisibleLayers) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisibleLayers.ProtoReflect.Descriptor instead.
func (*GetVisibleLayers) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{19}
}

func (x *GetVisibleLayers) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

type BoardLayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layer         BoardLayer             `protobuf:"varint,1,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardLayerResponse) Reset() {
	*x = BoardLayerResponse{}
	mi := &file_board_board_commands_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardLayerResponse) ProtoMessage() {}

func (x *BoardLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardLayerResponse.ProtoReflect.Descriptor instead.
func (*BoardLayerResponse) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{20}
}

func (x *BoardLayerResponse) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

type BoardLayers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layers        []BoardLayer           `protobuf:"varint,1,rep,packed,name=layers,proto3,enum=kiapi.board.types.BoardLayer" json:"layers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardLayers) Reset() {
	*x = BoardLayers{}
	mi := &file_board_board_commands_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardLayers) ProtoMessage() {}

func (x *BoardLayers) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardLayers.ProtoReflect.Descriptor instead.
func (*BoardLayers) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{21}
}

func (x *BoardLayers) GetLayers() []BoardLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type SetVisibleLayers struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Layers        []BoardLayer             `protobuf:"varint,2,rep,packed,name=layers,proto3,enum=kiapi.board.types.BoardLayer" json:"layers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetVisibleLayers) Reset() {
	*x = SetVisibleLayers{}
	mi := &file_board_board_commands_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVisibleLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVisibleLayers) ProtoMessage() {}

func (x *SetVisibleLayers) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVisibleLayers.ProtoReflect.Descriptor instead.
func (*SetVisibleLayers) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{22}
}

func (x *SetVisibleLayers) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *SetVisibleLayers) GetLayers() []BoardLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

// returns BoardLayerResponse
type GetActiveLayer struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveLayer) Reset() {
	*x = GetActiveLayer{}
	mi := &file_board_board_commands_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveLayer) ProtoMessage() {}

func (x *GetActiveLayer) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveLayer.ProtoReflect.Descriptor instead.
func (*GetActiveLayer) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{23}
}

func (x *GetActiveLayer) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

type SetActiveLayer struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Layer         BoardLayer               `protobuf:"varint,2,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActiveLayer) Reset() {
	*x = SetActiveLayer{}
	mi := &file_board_board_commands_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActiveLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActiveLayer) ProtoMessage() {}

func (x *SetActiveLayer) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActiveLayer.ProtoReflect.Descriptor instead.
func (*SetActiveLayer) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{24}
}

func (x *SetActiveLayer) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *SetActiveLayer) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

type BoardEditorAppearanceSettings struct {
	state                protoimpl.MessageState   `protogen:"open.v1"`
	InactiveLayerDisplay InactiveLayerDisplayMode `protobuf:"varint,1,opt,name=inactive_layer_display,json=inactiveLayerDisplay,proto3,enum=kiapi.board.commands.InactiveLayerDisplayMode" json:"inactive_layer_display,omitempty"`
	NetColorDisplay      NetColorDisplayMode      `protobuf:"varint,2,opt,name=net_color_display,json=netColorDisplay,proto3,enum=kiapi.board.commands.NetColorDisplayMode" json:"net_color_display,omitempty"`
	BoardFlip            BoardFlipMode            `protobuf:"varint,3,opt,name=board_flip,json=boardFlip,proto3,enum=kiapi.board.commands.BoardFlipMode" json:"board_flip,omitempty"`
	RatsnestDisplay      RatsnestDisplayMode      `protobuf:"varint,4,opt,name=ratsnest_display,json=ratsnestDisplay,proto3,enum=kiapi.board.commands.RatsnestDisplayMode" json:"ratsnest_display,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BoardEditorAppearanceSettings) Reset() {
	*x = BoardEditorAppearanceSettings{}
	mi := &file_board_board_commands_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardEditorAppearanceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardEditorAppearanceSettings) ProtoMessage() {}

func (x *BoardEditorAppearanceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardEditorAppearanceSettings.ProtoReflect.Descriptor instead.
func (*BoardEditorAppearanceSettings) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{25}
}

func (x *BoardEditorAppearanceSettings) GetInactiveLayerDisplay() InactiveLayerDisplayMode {
	if x != nil {
		return x.InactiveLayerDisplay
	}
	return InactiveLayerDisplayMode_ILDM_UNKNOWN
}

func (x *BoardEditorAppearanceSettings) GetNetColorDisplay() NetColorDisplayMode {
	if x != nil {
		return x.NetColorDisplay
	}
	return NetColorDisplayMode_NCDM_UNKNOWN
}

func (x *BoardEditorAppearanceSettings) GetBoardFlip() BoardFlipMode {
	if x != nil {
		return x.BoardFlip
	}
	return BoardFlipMode_BFM_UNKNOWN
}

func (x *BoardEditorAppearanceSettings) GetRatsnestDisplay() RatsnestDisplayMode {
	if x != nil {
		return x.RatsnestDisplay
	}
	return RatsnestDisplayMode_RDM_UNKNOWN
}

// Returns BoardEditorAppearanceSettings
type GetBoardEditorAppearanceSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoardEditorAppearanceSettings) Reset() {
	*x = GetBoardEditorAppearanceSettings{}
	mi := &file_board_board_commands_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardEditorAppearanceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardEditorAppearanceSettings) ProtoMessage() {}

func (x *GetBoardEditorAppearanceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardEditorAppearanceSettings.ProtoReflect.Descriptor instead.
func (*GetBoardEditorAppearanceSettings) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{26}
}

type SetBoardEditorAppearanceSettings struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Settings      *BoardEditorAppearanceSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBoardEditorAppearanceSettings) Reset() {
	*x = SetBoardEditorAppearanceSettings{}
	mi := &file_board_board_commands_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBoardEditorAppearanceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBoardEditorAppearanceSettings) ProtoMessage() {}

func (x *SetBoardEditorAppearanceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBoardEditorAppearanceSettings.ProtoReflect.Descriptor instead.
func (*SetBoardEditorAppearanceSettings) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{27}
}

func (x *SetBoardEditorAppearanceSettings) GetSettings() *BoardEditorAppearanceSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// Selects and begins an interactive move of the given item(s).
// NOTE: Takes ownership of the active commit, if one exists:
//
//	the move tool will push the commit when the user confirms the move,
//	or roll back the commit if the user cancels the move.  Keep this in
//	mind if using this command in combination with commands that create
//	or modify items using an explicit commit.
type InteractiveMoveItems struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Board         *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Items         []*types.KIID            `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractiveMoveItems) Reset() {
	*x = InteractiveMoveItems{}
	mi := &file_board_board_commands_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractiveMoveItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveMoveItems) ProtoMessage() {}

func (x *InteractiveMoveItems) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_commands_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveMoveItems.ProtoReflect.Descriptor instead.
func (*InteractiveMoveItems) Descriptor() ([]byte, []int) {
	return file_board_board_commands_proto_rawDescGZIP(), []int{28}
}

func (x *InteractiveMoveItems) GetBoard() *types.DocumentSpecifier {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *InteractiveMoveItems) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_board_board_commands_proto protoreflect.FileDescriptor

const file_board_board_commands_proto_rawDesc = "" +
	"\n" +
	"\x1aboard/board_commands.proto\x12\x14kiapi.board.commands\x1a\x1dcommon/types/base_types.proto\x1a\x18common/types/enums.proto\x1a#common/types/project_settings.proto\x1a\x11board/board.proto\x1a\x17board/board_types.proto\"N\n" +
	"\x0fGetBoardStackup\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\"K\n" +
	"\x14BoardStackupResponse\x123\n" +
	"\astackup\x18\x01 \x01(\v2\x19.kiapi.board.BoardStackupR\astackup\"\x86\x01\n" +
	"\x12UpdateBoardStackup\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x123\n" +
	"\astackup\x18\x02 \x01(\v2\x19.kiapi.board.BoardStackupR\astackup\"R\n" +
	"\x13GetGraphicsDefaults\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\"U\n" +
	"\x18GraphicsDefaultsResponse\x129\n" +
	"\bdefaults\x18\x01 \x01(\v2\x1d.kiapi.board.GraphicsDefaultsR\bdefaults\"\x88\x01\n" +
	"\x0eGetBoardOrigin\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x129\n" +
	"\x04type\x18\x02 \x01(\x0e2%.kiapi.board.commands.BoardOriginTypeR\x04type\"\xbd\x01\n" +
	"\x0eSetBoardOrigin\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x129\n" +
	"\x04type\x18\x02 \x01(\x0e2%.kiapi.board.commands.BoardOriginTypeR\x04type\x123\n" +
	"\x06origin\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x06origin\"o\n" +
	"\aGetNets\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x12'\n" +
	"\x0fnetclass_filter\x18\x02 \x03(\tR\x0enetclassFilter\":\n" +
	"\fNetsResponse\x12*\n" +
	"\x04nets\x18\x01 \x03(\v2\x16.kiapi.board.types.NetR\x04nets\"\xbb\x01\n" +
	"\rGetItemsByNet\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x129\n" +
	"\x05types\x18\x02 \x03(\x0e2#.kiapi.common.types.KiCadObjectTypeR\x05types\x127\n" +
	"\tnet_codes\x18\x03 \x03(\v2\x1a.kiapi.board.types.NetCodeR\bnetCodes\"\xa8\x01\n" +
	"\x12GetItemsByNetClass\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x129\n" +
	"\x05types\x18\x02 \x03(\x0e2#.kiapi.common.types.KiCadObjectTypeR\x05types\x12\x1f\n" +
	"\vnet_classes\x18\x03 \x03(\tR\n" +
	"netClasses\">\n" +
	"\x12GetNetClassForNets\x12(\n" +
	"\x03net\x18\x01 \x03(\v2\x16.kiapi.board.types.NetR\x03net\"\xcb\x01\n" +
	"\x17NetClassForNetsResponse\x12T\n" +
	"\aclasses\x18\x01 \x03(\v2:.kiapi.board.commands.NetClassForNetsResponse.ClassesEntryR\aclasses\x1aZ\n" +
	"\fClassesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.kiapi.common.project.NetClassR\x05value:\x028\x01\"z\n" +
	"\vRefillZones\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x12.\n" +
	"\x05zones\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05zones\"\xb6\x01\n" +
	"\x14GetPadShapeAsPolygon\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x12,\n" +
	"\x04pads\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x04pads\x123\n" +
	"\x05layer\x18\x03 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\"\x8b\x01\n" +
	"\x19PadShapeAsPolygonResponse\x12,\n" +
	"\x04pads\x18\x01 \x03(\v2\x18.kiapi.common.types.KIIDR\x04pads\x12@\n" +
	"\bpolygons\x18\x02 \x03(\v2$.kiapi.common.types.PolygonWithHolesR\bpolygons\"\xc3\x01\n" +
	"\x1dCheckPadstackPresenceOnLayers\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items\x125\n" +
	"\x06layers\x18\x03 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\x06layers\"\xbe\x01\n" +
	"\x15PadstackPresenceEntry\x12,\n" +
	"\x04item\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x04item\x123\n" +
	"\x05layer\x18\x02 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12B\n" +
	"\bpresence\x18\x03 \x01(\x0e2&.kiapi.board.commands.PadstackPresenceR\bpresence\"a\n" +
	"\x18PadstackPresenceResponse\x12E\n" +
	"\aentries\x18\x01 \x03(\v2+.kiapi.board.commands.PadstackPresenceEntryR\aentries\"O\n" +
	"\x10GetVisibleLayers\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\"I\n" +
	"\x12BoardLayerResponse\x123\n" +
	"\x05layer\x18\x01 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\"D\n" +
	"\vBoardLayers\x125\n" +
	"\x06layers\x18\x01 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\x06layers\"\x86\x01\n" +
	"\x10SetVisibleLayers\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x125\n" +
	"\x06layers\x18\x02 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\x06layers\"M\n" +
	"\x0eGetActiveLayer\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\"\x82\x01\n" +
	"\x0eSetActiveLayer\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x123\n" +
	"\x05layer\x18\x02 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\"\xf6\x02\n" +
	"\x1dBoardEditorAppearanceSettings\x12d\n" +
	"\x16inactive_layer_display\x18\x01 \x01(\x0e2..kiapi.board.commands.InactiveLayerDisplayModeR\x14inactiveLayerDisplay\x12U\n" +
	"\x11net_color_display\x18\x02 \x01(\x0e2).kiapi.board.commands.NetColorDisplayModeR\x0fnetColorDisplay\x12B\n" +
	"\n" +
	"board_flip\x18\x03 \x01(\x0e2#.kiapi.board.commands.BoardFlipModeR\tboardFlip\x12T\n" +
	"\x10ratsnest_display\x18\x04 \x01(\x0e2).kiapi.board.commands.RatsnestDisplayModeR\x0fratsnestDisplay\"\"\n" +
	" GetBoardEditorAppearanceSettings\"s\n" +
	" SetBoardEditorAppearanceSettings\x12O\n" +
	"\bsettings\x18\x01 \x01(\v23.kiapi.board.commands.BoardEditorAppearanceSettingsR\bsettings\"\x83\x01\n" +
	"\x14InteractiveMoveItems\x12;\n" +
	"\x05board\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\x05board\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items*?\n" +
	"\x0fBoardOriginType\x12\x0f\n" +
	"\vBOT_UNKNOWN\x10\x00\x12\f\n" +
	"\bBOT_GRID\x10\x01\x12\r\n" +
	"\tBOT_DRILL\x10\x02*I\n" +
	"\x10PadstackPresence\x12\x0f\n" +
	"\vPSP_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vPSP_PRESENT\x10\x01\x12\x13\n" +
	"\x0fPSP_NOT_PRESENT\x10\x02*_\n" +
	"\x18InactiveLayerDisplayMode\x12\x10\n" +
	"\fILDM_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vILDM_NORMAL\x10\x01\x12\x0f\n" +
	"\vILDM_DIMMED\x10\x02\x12\x0f\n" +
	"\vILDM_HIDDEN\x10\x03*V\n" +
	"\x13NetColorDisplayMode\x12\x10\n" +
	"\fNCDM_UNKNOWN\x10\x00\x12\f\n" +
	"\bNCDM_ALL\x10\x01\x12\x11\n" +
	"\rNCDM_RATSNEST\x10\x02\x12\f\n" +
	"\bNCDM_OFF\x10\x03*C\n" +
	"\rBoardFlipMode\x12\x0f\n" +
	"\vBFM_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"BFM_NORMAL\x10\x01\x12\x11\n" +
	"\rBFM_FLIPPED_X\x10\x02*R\n" +
	"\x13RatsnestDisplayMode\x12\x0f\n" +
	"\vRDM_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eRDM_ALL_LAYERS\x10\x01\x12\x16\n" +
	"\x12RDM_VISIBLE_LAYERS\x10\x02B\x1eZ\x1cgithub.com/kicad/proto/boardb\x06proto3"

var (
	file_board_board_commands_proto_rawDescOnce sync.Once
	file_board_board_commands_proto_rawDescData []byte
)

func file_board_board_commands_proto_rawDescGZIP() []byte {
	file_board_board_commands_proto_rawDescOnce.Do(func() {
		file_board_board_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_board_board_commands_proto_rawDesc), len(file_board_board_commands_proto_rawDesc)))
	})
	return file_board_board_commands_proto_rawDescData
}

var file_board_board_commands_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_board_board_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_board_board_commands_proto_goTypes = []any{
	(BoardOriginType)(0),                     // 0: kiapi.board.commands.BoardOriginType
	(PadstackPresence)(0),                    // 1: kiapi.board.commands.PadstackPresence
	(InactiveLayerDisplayMode)(0),            // 2: kiapi.board.commands.InactiveLayerDisplayMode
	(NetColorDisplayMode)(0),                 // 3: kiapi.board.commands.NetColorDisplayMode
	(BoardFlipMode)(0),                       // 4: kiapi.board.commands.BoardFlipMode
	(RatsnestDisplayMode)(0),                 // 5: kiapi.board.commands.RatsnestDisplayMode
	(*GetBoardStackup)(nil),                  // 6: kiapi.board.commands.GetBoardStackup
	(*BoardStackupResponse)(nil),             // 7: kiapi.board.commands.BoardStackupResponse
	(*UpdateBoardStackup)(nil),               // 8: kiapi.board.commands.UpdateBoardStackup
	(*GetGraphicsDefaults)(nil),              // 9: kiapi.board.commands.GetGraphicsDefaults
	(*GraphicsDefaultsResponse)(nil),         // 10: kiapi.board.commands.GraphicsDefaultsResponse
	(*GetBoardOrigin)(nil),                   // 11: kiapi.board.commands.GetBoardOrigin
	(*SetBoardOrigin)(nil),                   // 12: kiapi.board.commands.SetBoardOrigin
	(*GetNets)(nil),                          // 13: kiapi.board.commands.GetNets
	(*NetsResponse)(nil),                     // 14: kiapi.board.commands.NetsResponse
	(*GetItemsByNet)(nil),                    // 15: kiapi.board.commands.GetItemsByNet
	(*GetItemsByNetClass)(nil),               // 16: kiapi.board.commands.GetItemsByNetClass
	(*GetNetClassForNets)(nil),               // 17: kiapi.board.commands.GetNetClassForNets
	(*NetClassForNetsResponse)(nil),          // 18: kiapi.board.commands.NetClassForNetsResponse
	(*RefillZones)(nil),                      // 19: kiapi.board.commands.RefillZones
	(*GetPadShapeAsPolygon)(nil),             // 20: kiapi.board.commands.GetPadShapeAsPolygon
	(*PadShapeAsPolygonResponse)(nil),        // 21: kiapi.board.commands.PadShapeAsPolygonResponse
	(*CheckPadstackPresenceOnLayers)(nil),    // 22: kiapi.board.commands.CheckPadstackPresenceOnLayers
	(*PadstackPresenceEntry)(nil),            // 23: kiapi.board.commands.PadstackPresenceEntry
	(*PadstackPresenceResponse)(nil),         // 24: kiapi.board.commands.PadstackPresenceResponse
	(*GetVisibleLayers)(nil),                 // 25: kiapi.board.commands.GetVisibleLayers
	(*BoardLayerResponse)(nil),               // 26: kiapi.board.commands.BoardLayerResponse
	(*BoardLayers)(nil),                      // 27: kiapi.board.commands.BoardLayers
	(*SetVisibleLayers)(nil),                 // 28: kiapi.board.commands.SetVisibleLayers
	(*GetActiveLayer)(nil),                   // 29: kiapi.board.commands.GetActiveLayer
	(*SetActiveLayer)(nil),                   // 30: kiapi.board.commands.SetActiveLayer
	(*BoardEditorAppearanceSettings)(nil),    // 31: kiapi.board.commands.BoardEditorAppearanceSettings
	(*GetBoardEditorAppearanceSettings)(nil), // 32: kiapi.board.commands.GetBoardEditorAppearanceSettings
	(*SetBoardEditorAppearanceSettings)(nil), // 33: kiapi.board.commands.SetBoardEditorAppearanceSettings
	(*InteractiveMoveItems)(nil),             // 34: kiapi.board.commands.InteractiveMoveItems
	nil,                                      // 35: kiapi.board.commands.NetClassForNetsResponse.ClassesEntry
	(*types.DocumentSpecifier)(nil),          // 36: kiapi.common.types.DocumentSpecifier
	(*BoardStackup)(nil),                     // 37: kiapi.board.BoardStackup
	(*GraphicsDefaults)(nil),                 // 38: kiapi.board.GraphicsDefaults
	(*types.Vector2)(nil),                    // 39: kiapi.common.types.Vector2
	(*Net)(nil),                              // 40: kiapi.board.types.Net
	(*types.ItemHeader)(nil),                 // 41: kiapi.common.types.ItemHeader
	(types.KiCadObjectType)(0),               // 42: kiapi.common.types.KiCadObjectType
	(*NetCode)(nil),                          // 43: kiapi.board.types.NetCode
	(*types.KIID)(nil),                       // 44: kiapi.common.types.KIID
	(BoardLayer)(0),                          // 45: kiapi.board.types.BoardLayer
	(*types.PolygonWithHoles)(nil),           // 46: kiapi.common.types.PolygonWithHoles
	(*types.NetClass)(nil),                   // 47: kiapi.common.project.NetClass
}
var file_board_board_commands_proto_depIdxs = []int32{
	36, // 0: kiapi.board.commands.GetBoardStackup.board:type_name -> kiapi.common.types.DocumentSpecifier
	37, // 1: kiapi.board.commands.BoardStackupResponse.stackup:type_name -> kiapi.board.BoardStackup
	36, // 2: kiapi.board.commands.UpdateBoardStackup.board:type_name -> kiapi.common.types.DocumentSpecifier
	37, // 3: kiapi.board.commands.UpdateBoardStackup.stackup:type_name -> kiapi.board.BoardStackup
	36, // 4: kiapi.board.commands.GetGraphicsDefaults.board:type_name -> kiapi.common.types.DocumentSpecifier
	38, // 5: kiapi.board.commands.GraphicsDefaultsResponse.defaults:type_name -> kiapi.board.GraphicsDefaults
	36, // 6: kiapi.board.commands.GetBoardOrigin.board:type_name -> kiapi.common.types.DocumentSpecifier
	0,  // 7: kiapi.board.commands.GetBoardOrigin.type:type_name -> kiapi.board.commands.BoardOriginType
	36, // 8: kiapi.board.commands.SetBoardOrigin.board:type_name -> kiapi.common.types.DocumentSpecifier
	0,  // 9: kiapi.board.commands.SetBoardOrigin.type:type_name -> kiapi.board.commands.BoardOriginType
	39, // 10: kiapi.board.commands.SetBoardOrigin.origin:type_name -> kiapi.common.types.Vector2
	36, // 11: kiapi.board.commands.GetNets.board:type_name -> kiapi.common.types.DocumentSpecifier
	40, // 12: kiapi.board.commands.NetsResponse.nets:type_name -> kiapi.board.types.Net
	41, // 13: kiapi.board.commands.GetItemsByNet.header:type_name -> kiapi.common.types.ItemHeader
	42, // 14: kiapi.board.commands.GetItemsByNet.types:type_name -> kiapi.common.types.KiCadObjectType
	43, // 15: kiapi.board.commands.GetItemsByNet.net_codes:type_name -> kiapi.board.types.NetCode
	41, // 16: kiapi.board.commands.GetItemsByNetClass.header:type_name -> kiapi.common.types.ItemHeader
	42, // 17: kiapi.board.commands.GetItemsByNetClass.types:type_name -> kiapi.common.types.KiCadObjectType
	40, // 18: kiapi.board.commands.GetNetClassForNets.net:type_name -> kiapi.board.types.Net
	35, // 19: kiapi.board.commands.NetClassForNetsResponse.classes:type_name -> kiapi.board.commands.NetClassForNetsResponse.ClassesEntry
	36, // 20: kiapi.board.commands.RefillZones.board:type_name -> kiapi.common.types.DocumentSpecifier
	44, // 21: kiapi.board.commands.RefillZones.zones:type_name -> kiapi.common.types.KIID
	36, // 22: kiapi.board.commands.GetPadShapeAsPolygon.board:type_name -> kiapi.common.types.DocumentSpecifier
	44, // 23: kiapi.board.commands.GetPadShapeAsPolygon.pads:type_name -> kiapi.common.types.KIID
	45, // 24: kiapi.board.commands.GetPadShapeAsPolygon.layer:type_name -> kiapi.board.types.BoardLayer
	44, // 25: kiapi.board.commands.PadShapeAsPolygonResponse.pads:type_name -> kiapi.common.types.KIID
	46, // 26: kiapi.board.commands.PadShapeAsPolygonResponse.polygons:type_name -> kiapi.common.types.PolygonWithHoles
	36, // 27: kiapi.board.commands.CheckPadstackPresenceOnLayers.board:type_name -> kiapi.common.types.DocumentSpecifier
	44, // 28: kiapi.board.commands.CheckPadstackPresenceOnLayers.items:type_name -> kiapi.common.types.KIID
	45, // 29: kiapi.board.commands.CheckPadstackPresenceOnLayers.layers:type_name -> kiapi.board.types.BoardLayer
	44, // 30: kiapi.board.commands.PadstackPresenceEntry.item:type_name -> kiapi.common.types.KIID
	45, // 31: kiapi.board.commands.PadstackPresenceEntry.layer:type_name -> kiapi.board.types.BoardLayer
	1,  // 32: kiapi.board.commands.PadstackPresenceEntry.presence:type_name -> kiapi.board.commands.PadstackPresence
	23, // 33: kiapi.board.commands.PadstackPresenceResponse.entries:type_name -> kiapi.board.commands.PadstackPresenceEntry
	36, // 34: kiapi.board.commands.GetVisibleLayers.board:type_name -> kiapi.common.types.DocumentSpecifier
	45, // 35: kiapi.board.commands.BoardLayerResponse.layer:type_name -> kiapi.board.types.BoardLayer
	45, // 36: kiapi.board.commands.BoardLayers.layers:type_name -> kiapi.board.types.BoardLayer
	36, // 37: kiapi.board.commands.SetVisibleLayers.board:type_name -> kiapi.common.types.DocumentSpecifier
	45, // 38: kiapi.board.commands.SetVisibleLayers.layers:type_name -> kiapi.board.types.BoardLayer
	36, // 39: kiapi.board.commands.GetActiveLayer.board:type_name -> kiapi.common.types.DocumentSpecifier
	36, // 40: kiapi.board.commands.SetActiveLayer.board:type_name -> kiapi.common.types.DocumentSpecifier
	45, // 41: kiapi.board.commands.SetActiveLayer.layer:type_name -> kiapi.board.types.BoardLayer
	2,  // 42: kiapi.board.commands.BoardEditorAppearanceSettings.inactive_layer_display:type_name -> kiapi.board.commands.InactiveLayerDisplayMode
	3,  // 43: kiapi.board.commands.BoardEditorAppearanceSettings.net_color_display:type_name -> kiapi.board.commands.NetColorDisplayMode
	4,  // 44: kiapi.board.commands.BoardEditorAppearanceSettings.board_flip:type_name -> kiapi.board.commands.BoardFlipMode
	5,  // 45: kiapi.board.commands.BoardEditorAppearanceSettings.ratsnest_display:type_name -> kiapi.board.commands.RatsnestDisplayMode
	31, // 46: kiapi.board.commands.SetBoardEditorAppearanceSettings.settings:type_name -> kiapi.board.commands.BoardEditorAppearanceSettings
	36, // 47: kiapi.board.commands.InteractiveMoveItems.board:type_name -> kiapi.common.types.DocumentSpecifier
	44, // 48: kiapi.board.commands.InteractiveMoveItems.items:type_name -> kiapi.common.types.KIID
	47, // 49: kiapi.board.commands.NetClassForNetsResponse.ClassesEntry.value:type_name -> kiapi.common.project.NetClass
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_board_board_commands_proto_init() }
func file_board_board_commands_proto_init() {
	if File_board_board_commands_proto != nil {
		return
	}
	file_board_board_proto_init()
	file_board_board_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_board_board_commands_proto_rawDesc), len(file_board_board_commands_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_board_board_commands_proto_goTypes,
		DependencyIndexes: file_board_board_commands_proto_depIdxs,
		EnumInfos:         file_board_board_commands_proto_enumTypes,
		MessageInfos:      file_board_board_commands_proto_msgTypes,
	}.Build()
	File_board_board_commands_proto = out.File
	file_board_board_commands_proto_goTypes = nil
	file_board_board_commands_proto_depIdxs = nil
}
