//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: board/board_types.proto

package board

import (
	types "github.com/kicad/proto/common/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BoardLayer int32

const (
	BoardLayer_BL_UNKNOWN    BoardLayer = 0
	BoardLayer_BL_UNDEFINED  BoardLayer = 1
	BoardLayer_BL_UNSELECTED BoardLayer = 2
	BoardLayer_BL_F_Cu       BoardLayer = 3
	BoardLayer_BL_In1_Cu     BoardLayer = 4
	BoardLayer_BL_In2_Cu     BoardLayer = 5
	BoardLayer_BL_In3_Cu     BoardLayer = 6
	BoardLayer_BL_In4_Cu     BoardLayer = 7
	BoardLayer_BL_In5_Cu     BoardLayer = 8
	BoardLayer_BL_In6_Cu     BoardLayer = 9
	BoardLayer_BL_In7_Cu     BoardLayer = 10
	BoardLayer_BL_In8_Cu     BoardLayer = 11
	BoardLayer_BL_In9_Cu     BoardLayer = 12
	BoardLayer_BL_In10_Cu    BoardLayer = 13
	BoardLayer_BL_In11_Cu    BoardLayer = 14
	BoardLayer_BL_In12_Cu    BoardLayer = 15
	BoardLayer_BL_In13_Cu    BoardLayer = 16
	BoardLayer_BL_In14_Cu    BoardLayer = 17
	BoardLayer_BL_In15_Cu    BoardLayer = 18
	BoardLayer_BL_In16_Cu    BoardLayer = 19
	BoardLayer_BL_In17_Cu    BoardLayer = 20
	BoardLayer_BL_In18_Cu    BoardLayer = 21
	BoardLayer_BL_In19_Cu    BoardLayer = 22
	BoardLayer_BL_In20_Cu    BoardLayer = 23
	BoardLayer_BL_In21_Cu    BoardLayer = 24
	BoardLayer_BL_In22_Cu    BoardLayer = 25
	BoardLayer_BL_In23_Cu    BoardLayer = 26
	BoardLayer_BL_In24_Cu    BoardLayer = 27
	BoardLayer_BL_In25_Cu    BoardLayer = 28
	BoardLayer_BL_In26_Cu    BoardLayer = 29
	BoardLayer_BL_In27_Cu    BoardLayer = 30
	BoardLayer_BL_In28_Cu    BoardLayer = 31
	BoardLayer_BL_In29_Cu    BoardLayer = 32
	BoardLayer_BL_In30_Cu    BoardLayer = 33
	BoardLayer_BL_B_Cu       BoardLayer = 34
	BoardLayer_BL_B_Adhes    BoardLayer = 35
	BoardLayer_BL_F_Adhes    BoardLayer = 36
	BoardLayer_BL_B_Paste    BoardLayer = 37
	BoardLayer_BL_F_Paste    BoardLayer = 38
	BoardLayer_BL_B_SilkS    BoardLayer = 39
	BoardLayer_BL_F_SilkS    BoardLayer = 40
	BoardLayer_BL_B_Mask     BoardLayer = 41
	BoardLayer_BL_F_Mask     BoardLayer = 42
	BoardLayer_BL_Dwgs_User  BoardLayer = 43
	BoardLayer_BL_Cmts_User  BoardLayer = 44
	BoardLayer_BL_Eco1_User  BoardLayer = 45
	BoardLayer_BL_Eco2_User  BoardLayer = 46
	BoardLayer_BL_Edge_Cuts  BoardLayer = 47
	BoardLayer_BL_Margin     BoardLayer = 48
	BoardLayer_BL_B_CrtYd    BoardLayer = 49
	BoardLayer_BL_F_CrtYd    BoardLayer = 50
	BoardLayer_BL_B_Fab      BoardLayer = 51
	BoardLayer_BL_F_Fab      BoardLayer = 52
	BoardLayer_BL_User_1     BoardLayer = 53
	BoardLayer_BL_User_2     BoardLayer = 54
	BoardLayer_BL_User_3     BoardLayer = 55
	BoardLayer_BL_User_4     BoardLayer = 56
	BoardLayer_BL_User_5     BoardLayer = 57
	BoardLayer_BL_User_6     BoardLayer = 58
	BoardLayer_BL_User_7     BoardLayer = 59
	BoardLayer_BL_User_8     BoardLayer = 60
	BoardLayer_BL_User_9     BoardLayer = 61
	BoardLayer_BL_Rescue     BoardLayer = 62
	BoardLayer_BL_User_10    BoardLayer = 63
	BoardLayer_BL_User_11    BoardLayer = 64
	BoardLayer_BL_User_12    BoardLayer = 65
	BoardLayer_BL_User_13    BoardLayer = 66
	BoardLayer_BL_User_14    BoardLayer = 67
	BoardLayer_BL_User_15    BoardLayer = 68
	BoardLayer_BL_User_16    BoardLayer = 69
	BoardLayer_BL_User_17    BoardLayer = 70
	BoardLayer_BL_User_18    BoardLayer = 71
	BoardLayer_BL_User_19    BoardLayer = 72
	BoardLayer_BL_User_20    BoardLayer = 73
	BoardLayer_BL_User_21    BoardLayer = 74
	BoardLayer_BL_User_22    BoardLayer = 75
	BoardLayer_BL_User_23    BoardLayer = 76
	BoardLayer_BL_User_24    BoardLayer = 77
	BoardLayer_BL_User_25    BoardLayer = 78
	BoardLayer_BL_User_26    BoardLayer = 79
	BoardLayer_BL_User_27    BoardLayer = 80
	BoardLayer_BL_User_28    BoardLayer = 81
	BoardLayer_BL_User_29    BoardLayer = 82
	BoardLayer_BL_User_30    BoardLayer = 83
	BoardLayer_BL_User_31    BoardLayer = 84
	BoardLayer_BL_User_32    BoardLayer = 85
	BoardLayer_BL_User_33    BoardLayer = 86
	BoardLayer_BL_User_34    BoardLayer = 87
	BoardLayer_BL_User_35    BoardLayer = 88
	BoardLayer_BL_User_36    BoardLayer = 89
	BoardLayer_BL_User_37    BoardLayer = 90
	BoardLayer_BL_User_38    BoardLayer = 91
	BoardLayer_BL_User_39    BoardLayer = 92
	BoardLayer_BL_User_40    BoardLayer = 93
	BoardLayer_BL_User_41    BoardLayer = 94
	BoardLayer_BL_User_42    BoardLayer = 95
	BoardLayer_BL_User_43    BoardLayer = 96
	BoardLayer_BL_User_44    BoardLayer = 97
	BoardLayer_BL_User_45    BoardLayer = 98
)

// Enum value maps for BoardLayer.
var (
	BoardLayer_name = map[int32]string{
		0:  "BL_UNKNOWN",
		1:  "BL_UNDEFINED",
		2:  "BL_UNSELECTED",
		3:  "BL_F_Cu",
		4:  "BL_In1_Cu",
		5:  "BL_In2_Cu",
		6:  "BL_In3_Cu",
		7:  "BL_In4_Cu",
		8:  "BL_In5_Cu",
		9:  "BL_In6_Cu",
		10: "BL_In7_Cu",
		11: "BL_In8_Cu",
		12: "BL_In9_Cu",
		13: "BL_In10_Cu",
		14: "BL_In11_Cu",
		15: "BL_In12_Cu",
		16: "BL_In13_Cu",
		17: "BL_In14_Cu",
		18: "BL_In15_Cu",
		19: "BL_In16_Cu",
		20: "BL_In17_Cu",
		21: "BL_In18_Cu",
		22: "BL_In19_Cu",
		23: "BL_In20_Cu",
		24: "BL_In21_Cu",
		25: "BL_In22_Cu",
		26: "BL_In23_Cu",
		27: "BL_In24_Cu",
		28: "BL_In25_Cu",
		29: "BL_In26_Cu",
		30: "BL_In27_Cu",
		31: "BL_In28_Cu",
		32: "BL_In29_Cu",
		33: "BL_In30_Cu",
		34: "BL_B_Cu",
		35: "BL_B_Adhes",
		36: "BL_F_Adhes",
		37: "BL_B_Paste",
		38: "BL_F_Paste",
		39: "BL_B_SilkS",
		40: "BL_F_SilkS",
		41: "BL_B_Mask",
		42: "BL_F_Mask",
		43: "BL_Dwgs_User",
		44: "BL_Cmts_User",
		45: "BL_Eco1_User",
		46: "BL_Eco2_User",
		47: "BL_Edge_Cuts",
		48: "BL_Margin",
		49: "BL_B_CrtYd",
		50: "BL_F_CrtYd",
		51: "BL_B_Fab",
		52: "BL_F_Fab",
		53: "BL_User_1",
		54: "BL_User_2",
		55: "BL_User_3",
		56: "BL_User_4",
		57: "BL_User_5",
		58: "BL_User_6",
		59: "BL_User_7",
		60: "BL_User_8",
		61: "BL_User_9",
		62: "BL_Rescue",
		63: "BL_User_10",
		64: "BL_User_11",
		65: "BL_User_12",
		66: "BL_User_13",
		67: "BL_User_14",
		68: "BL_User_15",
		69: "BL_User_16",
		70: "BL_User_17",
		71: "BL_User_18",
		72: "BL_User_19",
		73: "BL_User_20",
		74: "BL_User_21",
		75: "BL_User_22",
		76: "BL_User_23",
		77: "BL_User_24",
		78: "BL_User_25",
		79: "BL_User_26",
		80: "BL_User_27",
		81: "BL_User_28",
		82: "BL_User_29",
		83: "BL_User_30",
		84: "BL_User_31",
		85: "BL_User_32",
		86: "BL_User_33",
		87: "BL_User_34",
		88: "BL_User_35",
		89: "BL_User_36",
		90: "BL_User_37",
		91: "BL_User_38",
		92: "BL_User_39",
		93: "BL_User_40",
		94: "BL_User_41",
		95: "BL_User_42",
		96: "BL_User_43",
		97: "BL_User_44",
		98: "BL_User_45",
	}
	BoardLayer_value = map[string]int32{
		"BL_UNKNOWN":    0,
		"BL_UNDEFINED":  1,
		"BL_UNSELECTED": 2,
		"BL_F_Cu":       3,
		"BL_In1_Cu":     4,
		"BL_In2_Cu":     5,
		"BL_In3_Cu":     6,
		"BL_In4_Cu":     7,
		"BL_In5_Cu":     8,
		"BL_In6_Cu":     9,
		"BL_In7_Cu":     10,
		"BL_In8_Cu":     11,
		"BL_In9_Cu":     12,
		"BL_In10_Cu":    13,
		"BL_In11_Cu":    14,
		"BL_In12_Cu":    15,
		"BL_In13_Cu":    16,
		"BL_In14_Cu":    17,
		"BL_In15_Cu":    18,
		"BL_In16_Cu":    19,
		"BL_In17_Cu":    20,
		"BL_In18_Cu":    21,
		"BL_In19_Cu":    22,
		"BL_In20_Cu":    23,
		"BL_In21_Cu":    24,
		"BL_In22_Cu":    25,
		"BL_In23_Cu":    26,
		"BL_In24_Cu":    27,
		"BL_In25_Cu":    28,
		"BL_In26_Cu":    29,
		"BL_In27_Cu":    30,
		"BL_In28_Cu":    31,
		"BL_In29_Cu":    32,
		"BL_In30_Cu":    33,
		"BL_B_Cu":       34,
		"BL_B_Adhes":    35,
		"BL_F_Adhes":    36,
		"BL_B_Paste":    37,
		"BL_F_Paste":    38,
		"BL_B_SilkS":    39,
		"BL_F_SilkS":    40,
		"BL_B_Mask":     41,
		"BL_F_Mask":     42,
		"BL_Dwgs_User":  43,
		"BL_Cmts_User":  44,
		"BL_Eco1_User":  45,
		"BL_Eco2_User":  46,
		"BL_Edge_Cuts":  47,
		"BL_Margin":     48,
		"BL_B_CrtYd":    49,
		"BL_F_CrtYd":    50,
		"BL_B_Fab":      51,
		"BL_F_Fab":      52,
		"BL_User_1":     53,
		"BL_User_2":     54,
		"BL_User_3":     55,
		"BL_User_4":     56,
		"BL_User_5":     57,
		"BL_User_6":     58,
		"BL_User_7":     59,
		"BL_User_8":     60,
		"BL_User_9":     61,
		"BL_Rescue":     62,
		"BL_User_10":    63,
		"BL_User_11":    64,
		"BL_User_12":    65,
		"BL_User_13":    66,
		"BL_User_14":    67,
		"BL_User_15":    68,
		"BL_User_16":    69,
		"BL_User_17":    70,
		"BL_User_18":    71,
		"BL_User_19":    72,
		"BL_User_20":    73,
		"BL_User_21":    74,
		"BL_User_22":    75,
		"BL_User_23":    76,
		"BL_User_24":    77,
		"BL_User_25":    78,
		"BL_User_26":    79,
		"BL_User_27":    80,
		"BL_User_28":    81,
		"BL_User_29":    82,
		"BL_User_30":    83,
		"BL_User_31":    84,
		"BL_User_32":    85,
		"BL_User_33":    86,
		"BL_User_34":    87,
		"BL_User_35":    88,
		"BL_User_36":    89,
		"BL_User_37":    90,
		"BL_User_38":    91,
		"BL_User_39":    92,
		"BL_User_40":    93,
		"BL_User_41":    94,
		"BL_User_42":    95,
		"BL_User_43":    96,
		"BL_User_44":    97,
		"BL_User_45":    98,
	}
)

func (x BoardLayer) Enum() *BoardLayer {
	p := new(BoardLayer)
	*p = x
	return p
}

func (x BoardLayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BoardLayer) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[0].Descriptor()
}

func (BoardLayer) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[0]
}

func (x BoardLayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BoardLayer.Descriptor instead.
func (BoardLayer) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{0}
}

// What copper layer shape mode the padstack uses
type PadStackType int32

const (
	PadStackType_PST_UNKNOWN PadStackType = 0
	// The same shape is used on all copper layers
	PadStackType_PST_NORMAL PadStackType = 1
	// The padstack uses up to three different shapes (F_Cu, inner layers, B_Cu)
	PadStackType_PST_FRONT_INNER_BACK PadStackType = 2
	// The padstack's shape may differ on arbitrary copper layers
	PadStackType_PST_CUSTOM PadStackType = 3
)

// Enum value maps for PadStackType.
var (
	PadStackType_name = map[int32]string{
		0: "PST_UNKNOWN",
		1: "PST_NORMAL",
		2: "PST_FRONT_INNER_BACK",
		3: "PST_CUSTOM",
	}
	PadStackType_value = map[string]int32{
		"PST_UNKNOWN":          0,
		"PST_NORMAL":           1,
		"PST_FRONT_INNER_BACK": 2,
		"PST_CUSTOM":           3,
	}
)

func (x PadStackType) Enum() *PadStackType {
	p := new(PadStackType)
	*p = x
	return p
}

func (x PadStackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PadStackType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[1].Descriptor()
}

func (PadStackType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[1]
}

func (x PadStackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PadStackType.Descriptor instead.
func (PadStackType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{1}
}

type UnconnectedLayerRemoval int32

const (
	UnconnectedLayerRemoval_ULR_UNKNOWN UnconnectedLayerRemoval = 0
	// Keep annular rings on all layers
	UnconnectedLayerRemoval_ULR_KEEP UnconnectedLayerRemoval = 1
	// Remove annular rings on unconnected layers, including start and end layers.
	UnconnectedLayerRemoval_ULR_REMOVE UnconnectedLayerRemoval = 2
	// Remove annular rings on unconnected layers, but preserve start and end layers even if unconnected.
	UnconnectedLayerRemoval_ULR_REMOVE_EXCEPT_START_AND_END UnconnectedLayerRemoval = 3
)

// Enum value maps for UnconnectedLayerRemoval.
var (
	UnconnectedLayerRemoval_name = map[int32]string{
		0: "ULR_UNKNOWN",
		1: "ULR_KEEP",
		2: "ULR_REMOVE",
		3: "ULR_REMOVE_EXCEPT_START_AND_END",
	}
	UnconnectedLayerRemoval_value = map[string]int32{
		"ULR_UNKNOWN":                     0,
		"ULR_KEEP":                        1,
		"ULR_REMOVE":                      2,
		"ULR_REMOVE_EXCEPT_START_AND_END": 3,
	}
)

func (x UnconnectedLayerRemoval) Enum() *UnconnectedLayerRemoval {
	p := new(UnconnectedLayerRemoval)
	*p = x
	return p
}

func (x UnconnectedLayerRemoval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnconnectedLayerRemoval) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[2].Descriptor()
}

func (UnconnectedLayerRemoval) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[2]
}

func (x UnconnectedLayerRemoval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnconnectedLayerRemoval.Descriptor instead.
func (UnconnectedLayerRemoval) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{2}
}

// The shape of a pad on a given layer
type PadStackShape int32

const (
	PadStackShape_PSS_UNKNOWN       PadStackShape = 0
	PadStackShape_PSS_CIRCLE        PadStackShape = 1
	PadStackShape_PSS_RECTANGLE     PadStackShape = 2
	PadStackShape_PSS_OVAL          PadStackShape = 3
	PadStackShape_PSS_TRAPEZOID     PadStackShape = 4
	PadStackShape_PSS_ROUNDRECT     PadStackShape = 5
	PadStackShape_PSS_CHAMFEREDRECT PadStackShape = 6
	PadStackShape_PSS_CUSTOM        PadStackShape = 7
)

// Enum value maps for PadStackShape.
var (
	PadStackShape_name = map[int32]string{
		0: "PSS_UNKNOWN",
		1: "PSS_CIRCLE",
		2: "PSS_RECTANGLE",
		3: "PSS_OVAL",
		4: "PSS_TRAPEZOID",
		5: "PSS_ROUNDRECT",
		6: "PSS_CHAMFEREDRECT",
		7: "PSS_CUSTOM",
	}
	PadStackShape_value = map[string]int32{
		"PSS_UNKNOWN":       0,
		"PSS_CIRCLE":        1,
		"PSS_RECTANGLE":     2,
		"PSS_OVAL":          3,
		"PSS_TRAPEZOID":     4,
		"PSS_ROUNDRECT":     5,
		"PSS_CHAMFEREDRECT": 6,
		"PSS_CUSTOM":        7,
	}
)

func (x PadStackShape) Enum() *PadStackShape {
	p := new(PadStackShape)
	*p = x
	return p
}

func (x PadStackShape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PadStackShape) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[3].Descriptor()
}

func (PadStackShape) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[3]
}

func (x PadStackShape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PadStackShape.Descriptor instead.
func (PadStackShape) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{3}
}

// enum class ZONE_CONNECTION
type ZoneConnectionStyle int32

const (
	ZoneConnectionStyle_ZCS_UNKNOWN     ZoneConnectionStyle = 0
	ZoneConnectionStyle_ZCS_INHERITED   ZoneConnectionStyle = 1
	ZoneConnectionStyle_ZCS_NONE        ZoneConnectionStyle = 2
	ZoneConnectionStyle_ZCS_THERMAL     ZoneConnectionStyle = 3
	ZoneConnectionStyle_ZCS_FULL        ZoneConnectionStyle = 4
	ZoneConnectionStyle_ZCS_PTH_THERMAL ZoneConnectionStyle = 5 // Thermal reliefs for plated through holes, solid for SMD pads
)

// Enum value maps for ZoneConnectionStyle.
var (
	ZoneConnectionStyle_name = map[int32]string{
		0: "ZCS_UNKNOWN",
		1: "ZCS_INHERITED",
		2: "ZCS_NONE",
		3: "ZCS_THERMAL",
		4: "ZCS_FULL",
		5: "ZCS_PTH_THERMAL",
	}
	ZoneConnectionStyle_value = map[string]int32{
		"ZCS_UNKNOWN":     0,
		"ZCS_INHERITED":   1,
		"ZCS_NONE":        2,
		"ZCS_THERMAL":     3,
		"ZCS_FULL":        4,
		"ZCS_PTH_THERMAL": 5,
	}
)

func (x ZoneConnectionStyle) Enum() *ZoneConnectionStyle {
	p := new(ZoneConnectionStyle)
	*p = x
	return p
}

func (x ZoneConnectionStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneConnectionStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[4].Descriptor()
}

func (ZoneConnectionStyle) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[4]
}

func (x ZoneConnectionStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneConnectionStyle.Descriptor instead.
func (ZoneConnectionStyle) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{4}
}

type SolderMaskMode int32

const (
	SolderMaskMode_SMM_UNKNOWN           SolderMaskMode = 0
	SolderMaskMode_SMM_MASKED            SolderMaskMode = 1
	SolderMaskMode_SMM_UNMASKED          SolderMaskMode = 2
	SolderMaskMode_SMM_FROM_DESIGN_RULES SolderMaskMode = 3
)

// Enum value maps for SolderMaskMode.
var (
	SolderMaskMode_name = map[int32]string{
		0: "SMM_UNKNOWN",
		1: "SMM_MASKED",
		2: "SMM_UNMASKED",
		3: "SMM_FROM_DESIGN_RULES",
	}
	SolderMaskMode_value = map[string]int32{
		"SMM_UNKNOWN":           0,
		"SMM_MASKED":            1,
		"SMM_UNMASKED":          2,
		"SMM_FROM_DESIGN_RULES": 3,
	}
)

func (x SolderMaskMode) Enum() *SolderMaskMode {
	p := new(SolderMaskMode)
	*p = x
	return p
}

func (x SolderMaskMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SolderMaskMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[5].Descriptor()
}

func (SolderMaskMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[5]
}

func (x SolderMaskMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SolderMaskMode.Descriptor instead.
func (SolderMaskMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{5}
}

type ViaCoveringMode int32

const (
	ViaCoveringMode_VCM_UNKNOWN           ViaCoveringMode = 0
	ViaCoveringMode_VCM_COVERED           ViaCoveringMode = 1
	ViaCoveringMode_VCM_UNCOVERED         ViaCoveringMode = 2
	ViaCoveringMode_VCM_FROM_DESIGN_RULES ViaCoveringMode = 3
)

// Enum value maps for ViaCoveringMode.
var (
	ViaCoveringMode_name = map[int32]string{
		0: "VCM_UNKNOWN",
		1: "VCM_COVERED",
		2: "VCM_UNCOVERED",
		3: "VCM_FROM_DESIGN_RULES",
	}
	ViaCoveringMode_value = map[string]int32{
		"VCM_UNKNOWN":           0,
		"VCM_COVERED":           1,
		"VCM_UNCOVERED":         2,
		"VCM_FROM_DESIGN_RULES": 3,
	}
)

func (x ViaCoveringMode) Enum() *ViaCoveringMode {
	p := new(ViaCoveringMode)
	*p = x
	return p
}

func (x ViaCoveringMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViaCoveringMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[6].Descriptor()
}

func (ViaCoveringMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[6]
}

func (x ViaCoveringMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViaCoveringMode.Descriptor instead.
func (ViaCoveringMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{6}
}

type ViaPluggingMode int32

const (
	ViaPluggingMode_VPM_UNKNOWN           ViaPluggingMode = 0
	ViaPluggingMode_VPM_PLUGGED           ViaPluggingMode = 1
	ViaPluggingMode_VPM_UNPLUGGED         ViaPluggingMode = 2
	ViaPluggingMode_VPM_FROM_DESIGN_RULES ViaPluggingMode = 3
)

// Enum value maps for ViaPluggingMode.
var (
	ViaPluggingMode_name = map[int32]string{
		0: "VPM_UNKNOWN",
		1: "VPM_PLUGGED",
		2: "VPM_UNPLUGGED",
		3: "VPM_FROM_DESIGN_RULES",
	}
	ViaPluggingMode_value = map[string]int32{
		"VPM_UNKNOWN":           0,
		"VPM_PLUGGED":           1,
		"VPM_UNPLUGGED":         2,
		"VPM_FROM_DESIGN_RULES": 3,
	}
)

func (x ViaPluggingMode) Enum() *ViaPluggingMode {
	p := new(ViaPluggingMode)
	*p = x
	return p
}

func (x ViaPluggingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViaPluggingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[7].Descriptor()
}

func (ViaPluggingMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[7]
}

func (x ViaPluggingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViaPluggingMode.Descriptor instead.
func (ViaPluggingMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{7}
}

type SolderPasteMode int32

const (
	SolderPasteMode_SPM_UNKNOWN           SolderPasteMode = 0
	SolderPasteMode_SPM_PASTE             SolderPasteMode = 1
	SolderPasteMode_SPM_NO_PASTE          SolderPasteMode = 2
	SolderPasteMode_SPM_FROM_DESIGN_RULES SolderPasteMode = 3
)

// Enum value maps for SolderPasteMode.
var (
	SolderPasteMode_name = map[int32]string{
		0: "SPM_UNKNOWN",
		1: "SPM_PASTE",
		2: "SPM_NO_PASTE",
		3: "SPM_FROM_DESIGN_RULES",
	}
	SolderPasteMode_value = map[string]int32{
		"SPM_UNKNOWN":           0,
		"SPM_PASTE":             1,
		"SPM_NO_PASTE":          2,
		"SPM_FROM_DESIGN_RULES": 3,
	}
)

func (x SolderPasteMode) Enum() *SolderPasteMode {
	p := new(SolderPasteMode)
	*p = x
	return p
}

func (x SolderPasteMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SolderPasteMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[8].Descriptor()
}

func (SolderPasteMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[8]
}

func (x SolderPasteMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SolderPasteMode.Descriptor instead.
func (SolderPasteMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{8}
}

type DrillShape int32

const (
	DrillShape_DS_UNKNOWN   DrillShape = 0
	DrillShape_DS_CIRCLE    DrillShape = 1
	DrillShape_DS_OBLONG    DrillShape = 2
	DrillShape_DS_UNDEFINED DrillShape = 3
)

// Enum value maps for DrillShape.
var (
	DrillShape_name = map[int32]string{
		0: "DS_UNKNOWN",
		1: "DS_CIRCLE",
		2: "DS_OBLONG",
		3: "DS_UNDEFINED",
	}
	DrillShape_value = map[string]int32{
		"DS_UNKNOWN":   0,
		"DS_CIRCLE":    1,
		"DS_OBLONG":    2,
		"DS_UNDEFINED": 3,
	}
)

func (x DrillShape) Enum() *DrillShape {
	p := new(DrillShape)
	*p = x
	return p
}

func (x DrillShape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrillShape) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[9].Descriptor()
}

func (DrillShape) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[9]
}

func (x DrillShape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DrillShape.Descriptor instead.
func (DrillShape) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{9}
}

type ViaDrillCappingMode int32

const (
	ViaDrillCappingMode_VDCM_UNKNOWN           ViaDrillCappingMode = 0
	ViaDrillCappingMode_VDCM_CAPPED            ViaDrillCappingMode = 1
	ViaDrillCappingMode_VDCM_UNCAPPED          ViaDrillCappingMode = 2
	ViaDrillCappingMode_VDCM_FROM_DESIGN_RULES ViaDrillCappingMode = 3
)

// Enum value maps for ViaDrillCappingMode.
var (
	ViaDrillCappingMode_name = map[int32]string{
		0: "VDCM_UNKNOWN",
		1: "VDCM_CAPPED",
		2: "VDCM_UNCAPPED",
		3: "VDCM_FROM_DESIGN_RULES",
	}
	ViaDrillCappingMode_value = map[string]int32{
		"VDCM_UNKNOWN":           0,
		"VDCM_CAPPED":            1,
		"VDCM_UNCAPPED":          2,
		"VDCM_FROM_DESIGN_RULES": 3,
	}
)

func (x ViaDrillCappingMode) Enum() *ViaDrillCappingMode {
	p := new(ViaDrillCappingMode)
	*p = x
	return p
}

func (x ViaDrillCappingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViaDrillCappingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[10].Descriptor()
}

func (ViaDrillCappingMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[10]
}

func (x ViaDrillCappingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViaDrillCappingMode.Descriptor instead.
func (ViaDrillCappingMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{10}
}

type ViaDrillFillingMode int32

const (
	ViaDrillFillingMode_VDFM_UNKNOWN           ViaDrillFillingMode = 0
	ViaDrillFillingMode_VDFM_FILLED            ViaDrillFillingMode = 1
	ViaDrillFillingMode_VDFM_UNFILLED          ViaDrillFillingMode = 2
	ViaDrillFillingMode_VDFM_FROM_DESIGN_RULES ViaDrillFillingMode = 3
)

// Enum value maps for ViaDrillFillingMode.
var (
	ViaDrillFillingMode_name = map[int32]string{
		0: "VDFM_UNKNOWN",
		1: "VDFM_FILLED",
		2: "VDFM_UNFILLED",
		3: "VDFM_FROM_DESIGN_RULES",
	}
	ViaDrillFillingMode_value = map[string]int32{
		"VDFM_UNKNOWN":           0,
		"VDFM_FILLED":            1,
		"VDFM_UNFILLED":          2,
		"VDFM_FROM_DESIGN_RULES": 3,
	}
)

func (x ViaDrillFillingMode) Enum() *ViaDrillFillingMode {
	p := new(ViaDrillFillingMode)
	*p = x
	return p
}

func (x ViaDrillFillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViaDrillFillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[11].Descriptor()
}

func (ViaDrillFillingMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[11]
}

func (x ViaDrillFillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViaDrillFillingMode.Descriptor instead.
func (ViaDrillFillingMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{11}
}

type ViaType int32

const (
	ViaType_VT_UNKNOWN ViaType = 0
	// Through vias always start on F_Cu and end on B_Cu
	ViaType_VT_THROUGH ViaType = 1
	// Blind/buried vias can have arbitrary start and end layers
	ViaType_VT_BLIND_BURIED ViaType = 2
	// Microvias, blind/buried vias, can have arbitrary start and end layers, but also have different
	// size defaults and design rules
	ViaType_VT_MICRO ViaType = 3
)

// Enum value maps for ViaType.
var (
	ViaType_name = map[int32]string{
		0: "VT_UNKNOWN",
		1: "VT_THROUGH",
		2: "VT_BLIND_BURIED",
		3: "VT_MICRO",
	}
	ViaType_value = map[string]int32{
		"VT_UNKNOWN":      0,
		"VT_THROUGH":      1,
		"VT_BLIND_BURIED": 2,
		"VT_MICRO":        3,
	}
)

func (x ViaType) Enum() *ViaType {
	p := new(ViaType)
	*p = x
	return p
}

func (x ViaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViaType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[12].Descriptor()
}

func (ViaType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[12]
}

func (x ViaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViaType.Descriptor instead.
func (ViaType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{12}
}

// NOTE: There has been some discussion about what to do with pad attributes and properties.
// This may be considered somewhat unstable until we decide what to do with the KiCad side.
// It is not clear what the set of mutually-exclusive pad types will be at the end of the day,
// versus what will be non-exclusive attributes/properties.
// For now, this maps to PAD_ATTRIB in KiCad.
type PadType int32

const (
	PadType_PT_UNKNOWN        PadType = 0
	PadType_PT_PTH            PadType = 1
	PadType_PT_SMD            PadType = 2
	PadType_PT_EDGE_CONNECTOR PadType = 3
	PadType_PT_NPTH           PadType = 4
)

// Enum value maps for PadType.
var (
	PadType_name = map[int32]string{
		0: "PT_UNKNOWN",
		1: "PT_PTH",
		2: "PT_SMD",
		3: "PT_EDGE_CONNECTOR",
		4: "PT_NPTH",
	}
	PadType_value = map[string]int32{
		"PT_UNKNOWN":        0,
		"PT_PTH":            1,
		"PT_SMD":            2,
		"PT_EDGE_CONNECTOR": 3,
		"PT_NPTH":           4,
	}
)

func (x PadType) Enum() *PadType {
	p := new(PadType)
	*p = x
	return p
}

func (x PadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PadType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[13].Descriptor()
}

func (PadType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[13]
}

func (x PadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PadType.Descriptor instead.
func (PadType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{13}
}

type CustomPadShapeZoneFillStrategy int32

const (
	CustomPadShapeZoneFillStrategy_CPSZ_UNKNOWN    CustomPadShapeZoneFillStrategy = 0
	CustomPadShapeZoneFillStrategy_CPSZ_OUTLINE    CustomPadShapeZoneFillStrategy = 1
	CustomPadShapeZoneFillStrategy_CPSZ_CONVEXHULL CustomPadShapeZoneFillStrategy = 2
)

// Enum value maps for CustomPadShapeZoneFillStrategy.
var (
	CustomPadShapeZoneFillStrategy_name = map[int32]string{
		0: "CPSZ_UNKNOWN",
		1: "CPSZ_OUTLINE",
		2: "CPSZ_CONVEXHULL",
	}
	CustomPadShapeZoneFillStrategy_value = map[string]int32{
		"CPSZ_UNKNOWN":    0,
		"CPSZ_OUTLINE":    1,
		"CPSZ_CONVEXHULL": 2,
	}
)

func (x CustomPadShapeZoneFillStrategy) Enum() *CustomPadShapeZoneFillStrategy {
	p := new(CustomPadShapeZoneFillStrategy)
	*p = x
	return p
}

func (x CustomPadShapeZoneFillStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomPadShapeZoneFillStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[14].Descriptor()
}

func (CustomPadShapeZoneFillStrategy) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[14]
}

func (x CustomPadShapeZoneFillStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomPadShapeZoneFillStrategy.Descriptor instead.
func (CustomPadShapeZoneFillStrategy) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{14}
}

type ZoneType int32

const (
	ZoneType_ZT_UNKNOWN   ZoneType = 0
	ZoneType_ZT_COPPER    ZoneType = 1
	ZoneType_ZT_GRAPHICAL ZoneType = 2
	ZoneType_ZT_RULE_AREA ZoneType = 3
	ZoneType_ZT_TEARDROP  ZoneType = 4
)

// Enum value maps for ZoneType.
var (
	ZoneType_name = map[int32]string{
		0: "ZT_UNKNOWN",
		1: "ZT_COPPER",
		2: "ZT_GRAPHICAL",
		3: "ZT_RULE_AREA",
		4: "ZT_TEARDROP",
	}
	ZoneType_value = map[string]int32{
		"ZT_UNKNOWN":   0,
		"ZT_COPPER":    1,
		"ZT_GRAPHICAL": 2,
		"ZT_RULE_AREA": 3,
		"ZT_TEARDROP":  4,
	}
)

func (x ZoneType) Enum() *ZoneType {
	p := new(ZoneType)
	*p = x
	return p
}

func (x ZoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[15].Descriptor()
}

func (ZoneType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[15]
}

func (x ZoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneType.Descriptor instead.
func (ZoneType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{15}
}

type TeardropType int32

const (
	TeardropType_TDT_UNKNOWN     TeardropType = 0
	TeardropType_TDT_NONE        TeardropType = 1
	TeardropType_TDT_UNSPECIFIED TeardropType = 2
	TeardropType_TDT_VIA_PAD     TeardropType = 3
	TeardropType_TDT_TRACK_END   TeardropType = 4
)

// Enum value maps for TeardropType.
var (
	TeardropType_name = map[int32]string{
		0: "TDT_UNKNOWN",
		1: "TDT_NONE",
		2: "TDT_UNSPECIFIED",
		3: "TDT_VIA_PAD",
		4: "TDT_TRACK_END",
	}
	TeardropType_value = map[string]int32{
		"TDT_UNKNOWN":     0,
		"TDT_NONE":        1,
		"TDT_UNSPECIFIED": 2,
		"TDT_VIA_PAD":     3,
		"TDT_TRACK_END":   4,
	}
)

func (x TeardropType) Enum() *TeardropType {
	p := new(TeardropType)
	*p = x
	return p
}

func (x TeardropType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeardropType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[16].Descriptor()
}

func (TeardropType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[16]
}

func (x TeardropType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeardropType.Descriptor instead.
func (TeardropType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{16}
}

type IslandRemovalMode int32

const (
	IslandRemovalMode_IRM_UNKNOWN IslandRemovalMode = 0
	IslandRemovalMode_IRM_ALWAYS  IslandRemovalMode = 1
	IslandRemovalMode_IRM_NEVER   IslandRemovalMode = 2
	IslandRemovalMode_IRM_AREA    IslandRemovalMode = 3
)

// Enum value maps for IslandRemovalMode.
var (
	IslandRemovalMode_name = map[int32]string{
		0: "IRM_UNKNOWN",
		1: "IRM_ALWAYS",
		2: "IRM_NEVER",
		3: "IRM_AREA",
	}
	IslandRemovalMode_value = map[string]int32{
		"IRM_UNKNOWN": 0,
		"IRM_ALWAYS":  1,
		"IRM_NEVER":   2,
		"IRM_AREA":    3,
	}
)

func (x IslandRemovalMode) Enum() *IslandRemovalMode {
	p := new(IslandRemovalMode)
	*p = x
	return p
}

func (x IslandRemovalMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IslandRemovalMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[17].Descriptor()
}

func (IslandRemovalMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[17]
}

func (x IslandRemovalMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IslandRemovalMode.Descriptor instead.
func (IslandRemovalMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{17}
}

type ZoneFillMode int32

const (
	ZoneFillMode_ZFM_UNKNOWN ZoneFillMode = 0
	ZoneFillMode_ZFM_SOLID   ZoneFillMode = 1
	ZoneFillMode_ZFM_HATCHED ZoneFillMode = 2
)

// Enum value maps for ZoneFillMode.
var (
	ZoneFillMode_name = map[int32]string{
		0: "ZFM_UNKNOWN",
		1: "ZFM_SOLID",
		2: "ZFM_HATCHED",
	}
	ZoneFillMode_value = map[string]int32{
		"ZFM_UNKNOWN": 0,
		"ZFM_SOLID":   1,
		"ZFM_HATCHED": 2,
	}
)

func (x ZoneFillMode) Enum() *ZoneFillMode {
	p := new(ZoneFillMode)
	*p = x
	return p
}

func (x ZoneFillMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneFillMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[18].Descriptor()
}

func (ZoneFillMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[18]
}

func (x ZoneFillMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneFillMode.Descriptor instead.
func (ZoneFillMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{18}
}

type ZoneHatchSmoothing int32

const (
	ZoneHatchSmoothing_ZHS_UNKNOWN      ZoneHatchSmoothing = 0
	ZoneHatchSmoothing_ZHS_NONE         ZoneHatchSmoothing = 1
	ZoneHatchSmoothing_ZHS_FILLET       ZoneHatchSmoothing = 2
	ZoneHatchSmoothing_ZHS_ARC_LOW_DEF  ZoneHatchSmoothing = 3
	ZoneHatchSmoothing_ZHS_ARC_HIGH_DEF ZoneHatchSmoothing = 4
)

// Enum value maps for ZoneHatchSmoothing.
var (
	ZoneHatchSmoothing_name = map[int32]string{
		0: "ZHS_UNKNOWN",
		1: "ZHS_NONE",
		2: "ZHS_FILLET",
		3: "ZHS_ARC_LOW_DEF",
		4: "ZHS_ARC_HIGH_DEF",
	}
	ZoneHatchSmoothing_value = map[string]int32{
		"ZHS_UNKNOWN":      0,
		"ZHS_NONE":         1,
		"ZHS_FILLET":       2,
		"ZHS_ARC_LOW_DEF":  3,
		"ZHS_ARC_HIGH_DEF": 4,
	}
)

func (x ZoneHatchSmoothing) Enum() *ZoneHatchSmoothing {
	p := new(ZoneHatchSmoothing)
	*p = x
	return p
}

func (x ZoneHatchSmoothing) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneHatchSmoothing) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[19].Descriptor()
}

func (ZoneHatchSmoothing) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[19]
}

func (x ZoneHatchSmoothing) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneHatchSmoothing.Descriptor instead.
func (ZoneHatchSmoothing) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{19}
}

type ZoneHatchFillBorderMode int32

const (
	ZoneHatchFillBorderMode_ZHFBM_UNKNOWN                ZoneHatchFillBorderMode = 0
	ZoneHatchFillBorderMode_ZHFBM_USE_MIN_ZONE_THICKNESS ZoneHatchFillBorderMode = 1
	ZoneHatchFillBorderMode_ZHFBM_USE_HATCH_THICKNESS    ZoneHatchFillBorderMode = 2
)

// Enum value maps for ZoneHatchFillBorderMode.
var (
	ZoneHatchFillBorderMode_name = map[int32]string{
		0: "ZHFBM_UNKNOWN",
		1: "ZHFBM_USE_MIN_ZONE_THICKNESS",
		2: "ZHFBM_USE_HATCH_THICKNESS",
	}
	ZoneHatchFillBorderMode_value = map[string]int32{
		"ZHFBM_UNKNOWN":                0,
		"ZHFBM_USE_MIN_ZONE_THICKNESS": 1,
		"ZHFBM_USE_HATCH_THICKNESS":    2,
	}
)

func (x ZoneHatchFillBorderMode) Enum() *ZoneHatchFillBorderMode {
	p := new(ZoneHatchFillBorderMode)
	*p = x
	return p
}

func (x ZoneHatchFillBorderMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneHatchFillBorderMode) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[20].Descriptor()
}

func (ZoneHatchFillBorderMode) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[20]
}

func (x ZoneHatchFillBorderMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneHatchFillBorderMode.Descriptor instead.
func (ZoneHatchFillBorderMode) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{20}
}

type PlacementRuleSourceType int32

const (
	PlacementRuleSourceType_PRST_UNKNOWN         PlacementRuleSourceType = 0
	PlacementRuleSourceType_PRST_SHEET_NAME      PlacementRuleSourceType = 1
	PlacementRuleSourceType_PRST_COMPONENT_CLASS PlacementRuleSourceType = 2
	PlacementRuleSourceType_PRST_GROUP           PlacementRuleSourceType = 3
)

// Enum value maps for PlacementRuleSourceType.
var (
	PlacementRuleSourceType_name = map[int32]string{
		0: "PRST_UNKNOWN",
		1: "PRST_SHEET_NAME",
		2: "PRST_COMPONENT_CLASS",
		3: "PRST_GROUP",
	}
	PlacementRuleSourceType_value = map[string]int32{
		"PRST_UNKNOWN":         0,
		"PRST_SHEET_NAME":      1,
		"PRST_COMPONENT_CLASS": 2,
		"PRST_GROUP":           3,
	}
)

func (x PlacementRuleSourceType) Enum() *PlacementRuleSourceType {
	p := new(PlacementRuleSourceType)
	*p = x
	return p
}

func (x PlacementRuleSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlacementRuleSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[21].Descriptor()
}

func (PlacementRuleSourceType) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[21]
}

func (x PlacementRuleSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlacementRuleSourceType.Descriptor instead.
func (PlacementRuleSourceType) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{21}
}

type ZoneBorderStyle int32

const (
	ZoneBorderStyle_ZBS_UNKNOWN       ZoneBorderStyle = 0
	ZoneBorderStyle_ZBS_SOLID         ZoneBorderStyle = 1
	ZoneBorderStyle_ZBS_DIAGONAL_FULL ZoneBorderStyle = 2
	ZoneBorderStyle_ZBS_DIAGONAL_EDGE ZoneBorderStyle = 3
	ZoneBorderStyle_ZBS_INVISIBLE     ZoneBorderStyle = 4
)

// Enum value maps for ZoneBorderStyle.
var (
	ZoneBorderStyle_name = map[int32]string{
		0: "ZBS_UNKNOWN",
		1: "ZBS_SOLID",
		2: "ZBS_DIAGONAL_FULL",
		3: "ZBS_DIAGONAL_EDGE",
		4: "ZBS_INVISIBLE",
	}
	ZoneBorderStyle_value = map[string]int32{
		"ZBS_UNKNOWN":       0,
		"ZBS_SOLID":         1,
		"ZBS_DIAGONAL_FULL": 2,
		"ZBS_DIAGONAL_EDGE": 3,
		"ZBS_INVISIBLE":     4,
	}
)

func (x ZoneBorderStyle) Enum() *ZoneBorderStyle {
	p := new(ZoneBorderStyle)
	*p = x
	return p
}

func (x ZoneBorderStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneBorderStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[22].Descriptor()
}

func (ZoneBorderStyle) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[22]
}

func (x ZoneBorderStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneBorderStyle.Descriptor instead.
func (ZoneBorderStyle) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{22}
}

// The style of the optional frame applied to dimension text
type DimensionTextBorderStyle int32

const (
	DimensionTextBorderStyle_DTBS_UNKNOWN   DimensionTextBorderStyle = 0
	DimensionTextBorderStyle_DTBS_NONE      DimensionTextBorderStyle = 1
	DimensionTextBorderStyle_DTBS_RECTANGLE DimensionTextBorderStyle = 2
	DimensionTextBorderStyle_DTBS_CIRCLE    DimensionTextBorderStyle = 3
	DimensionTextBorderStyle_DTBS_ROUNDRECT DimensionTextBorderStyle = 4
)

// Enum value maps for DimensionTextBorderStyle.
var (
	DimensionTextBorderStyle_name = map[int32]string{
		0: "DTBS_UNKNOWN",
		1: "DTBS_NONE",
		2: "DTBS_RECTANGLE",
		3: "DTBS_CIRCLE",
		4: "DTBS_ROUNDRECT",
	}
	DimensionTextBorderStyle_value = map[string]int32{
		"DTBS_UNKNOWN":   0,
		"DTBS_NONE":      1,
		"DTBS_RECTANGLE": 2,
		"DTBS_CIRCLE":    3,
		"DTBS_ROUNDRECT": 4,
	}
)

func (x DimensionTextBorderStyle) Enum() *DimensionTextBorderStyle {
	p := new(DimensionTextBorderStyle)
	*p = x
	return p
}

func (x DimensionTextBorderStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionTextBorderStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[23].Descriptor()
}

func (DimensionTextBorderStyle) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[23]
}

func (x DimensionTextBorderStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionTextBorderStyle.Descriptor instead.
func (DimensionTextBorderStyle) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{23}
}

type DimensionUnitFormat int32

const (
	DimensionUnitFormat_DUF_UNKNOWN      DimensionUnitFormat = 0
	DimensionUnitFormat_DUF_NO_SUFFIX    DimensionUnitFormat = 1
	DimensionUnitFormat_DUF_BARE_SUFFIX  DimensionUnitFormat = 2
	DimensionUnitFormat_DUF_PAREN_SUFFIX DimensionUnitFormat = 3
)

// Enum value maps for DimensionUnitFormat.
var (
	DimensionUnitFormat_name = map[int32]string{
		0: "DUF_UNKNOWN",
		1: "DUF_NO_SUFFIX",
		2: "DUF_BARE_SUFFIX",
		3: "DUF_PAREN_SUFFIX",
	}
	DimensionUnitFormat_value = map[string]int32{
		"DUF_UNKNOWN":      0,
		"DUF_NO_SUFFIX":    1,
		"DUF_BARE_SUFFIX":  2,
		"DUF_PAREN_SUFFIX": 3,
	}
)

func (x DimensionUnitFormat) Enum() *DimensionUnitFormat {
	p := new(DimensionUnitFormat)
	*p = x
	return p
}

func (x DimensionUnitFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionUnitFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[24].Descriptor()
}

func (DimensionUnitFormat) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[24]
}

func (x DimensionUnitFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionUnitFormat.Descriptor instead.
func (DimensionUnitFormat) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{24}
}

type DimensionArrowDirection int32

const (
	DimensionArrowDirection_DAD_UNKNOWN DimensionArrowDirection = 0
	DimensionArrowDirection_DAD_INWARD  DimensionArrowDirection = 1
	DimensionArrowDirection_DAD_OUTWARD DimensionArrowDirection = 2
)

// Enum value maps for DimensionArrowDirection.
var (
	DimensionArrowDirection_name = map[int32]string{
		0: "DAD_UNKNOWN",
		1: "DAD_INWARD",
		2: "DAD_OUTWARD",
	}
	DimensionArrowDirection_value = map[string]int32{
		"DAD_UNKNOWN": 0,
		"DAD_INWARD":  1,
		"DAD_OUTWARD": 2,
	}
)

func (x DimensionArrowDirection) Enum() *DimensionArrowDirection {
	p := new(DimensionArrowDirection)
	*p = x
	return p
}

func (x DimensionArrowDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionArrowDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[25].Descriptor()
}

func (DimensionArrowDirection) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[25]
}

func (x DimensionArrowDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionArrowDirection.Descriptor instead.
func (DimensionArrowDirection) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{25}
}

type DimensionPrecision int32

const (
	DimensionPrecision_DP_UNKNOWN     DimensionPrecision = 0
	DimensionPrecision_DP_FIXED_0     DimensionPrecision = 1  // No digits after decimal point
	DimensionPrecision_DP_FIXED_1     DimensionPrecision = 2  // 1 digit after decimal point
	DimensionPrecision_DP_FIXED_2     DimensionPrecision = 3  // 2 digits after decimal point
	DimensionPrecision_DP_FIXED_3     DimensionPrecision = 4  // 3 digits after decimal point
	DimensionPrecision_DP_FIXED_4     DimensionPrecision = 5  // 4 digits after decimal point
	DimensionPrecision_DP_FIXED_5     DimensionPrecision = 6  // 5 digits after decimal point
	DimensionPrecision_DP_SCALED_IN_2 DimensionPrecision = 7  // Precision depends on unit selection; 2 digits for inches, 0 for mils, 1 for mm
	DimensionPrecision_DP_SCALED_IN_3 DimensionPrecision = 8  // Precision depends on unit selection; 3 digits for inches, 0 for mils, 2 for mm
	DimensionPrecision_DP_SCALED_IN_4 DimensionPrecision = 9  // Precision depends on unit selection; 4 digits for inches, 1 for mils, 3 for mm
	DimensionPrecision_DP_SCALED_IN_5 DimensionPrecision = 10 // Precision depends on unit selection; 5 digits for inches, 2 for mils, 4 for mm
)

// Enum value maps for DimensionPrecision.
var (
	DimensionPrecision_name = map[int32]string{
		0:  "DP_UNKNOWN",
		1:  "DP_FIXED_0",
		2:  "DP_FIXED_1",
		3:  "DP_FIXED_2",
		4:  "DP_FIXED_3",
		5:  "DP_FIXED_4",
		6:  "DP_FIXED_5",
		7:  "DP_SCALED_IN_2",
		8:  "DP_SCALED_IN_3",
		9:  "DP_SCALED_IN_4",
		10: "DP_SCALED_IN_5",
	}
	DimensionPrecision_value = map[string]int32{
		"DP_UNKNOWN":     0,
		"DP_FIXED_0":     1,
		"DP_FIXED_1":     2,
		"DP_FIXED_2":     3,
		"DP_FIXED_3":     4,
		"DP_FIXED_4":     5,
		"DP_FIXED_5":     6,
		"DP_SCALED_IN_2": 7,
		"DP_SCALED_IN_3": 8,
		"DP_SCALED_IN_4": 9,
		"DP_SCALED_IN_5": 10,
	}
)

func (x DimensionPrecision) Enum() *DimensionPrecision {
	p := new(DimensionPrecision)
	*p = x
	return p
}

func (x DimensionPrecision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionPrecision) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[26].Descriptor()
}

func (DimensionPrecision) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[26]
}

func (x DimensionPrecision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionPrecision.Descriptor instead.
func (DimensionPrecision) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{26}
}

type DimensionTextPosition int32

const (
	DimensionTextPosition_DTP_UNKNOWN DimensionTextPosition = 0
	DimensionTextPosition_DTP_OUTSIDE DimensionTextPosition = 1
	DimensionTextPosition_DTP_INLINE  DimensionTextPosition = 2
	DimensionTextPosition_DTP_MANUAL  DimensionTextPosition = 3
)

// Enum value maps for DimensionTextPosition.
var (
	DimensionTextPosition_name = map[int32]string{
		0: "DTP_UNKNOWN",
		1: "DTP_OUTSIDE",
		2: "DTP_INLINE",
		3: "DTP_MANUAL",
	}
	DimensionTextPosition_value = map[string]int32{
		"DTP_UNKNOWN": 0,
		"DTP_OUTSIDE": 1,
		"DTP_INLINE":  2,
		"DTP_MANUAL":  3,
	}
)

func (x DimensionTextPosition) Enum() *DimensionTextPosition {
	p := new(DimensionTextPosition)
	*p = x
	return p
}

func (x DimensionTextPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionTextPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[27].Descriptor()
}

func (DimensionTextPosition) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[27]
}

func (x DimensionTextPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionTextPosition.Descriptor instead.
func (DimensionTextPosition) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{27}
}

type DimensionUnit int32

const (
	DimensionUnit_DU_UNKNOWN     DimensionUnit = 0
	DimensionUnit_DU_INCHES      DimensionUnit = 1
	DimensionUnit_DU_MILS        DimensionUnit = 2
	DimensionUnit_DU_MILLIMETERS DimensionUnit = 3
	DimensionUnit_DU_AUTOMATIC   DimensionUnit = 4
)

// Enum value maps for DimensionUnit.
var (
	DimensionUnit_name = map[int32]string{
		0: "DU_UNKNOWN",
		1: "DU_INCHES",
		2: "DU_MILS",
		3: "DU_MILLIMETERS",
		4: "DU_AUTOMATIC",
	}
	DimensionUnit_value = map[string]int32{
		"DU_UNKNOWN":     0,
		"DU_INCHES":      1,
		"DU_MILS":        2,
		"DU_MILLIMETERS": 3,
		"DU_AUTOMATIC":   4,
	}
)

func (x DimensionUnit) Enum() *DimensionUnit {
	p := new(DimensionUnit)
	*p = x
	return p
}

func (x DimensionUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[28].Descriptor()
}

func (DimensionUnit) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[28]
}

func (x DimensionUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionUnit.Descriptor instead.
func (DimensionUnit) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{28}
}

type FootprintMountingStyle int32

const (
	FootprintMountingStyle_FMS_UNKNOWN      FootprintMountingStyle = 0
	FootprintMountingStyle_FMS_THROUGH_HOLE FootprintMountingStyle = 1
	FootprintMountingStyle_FMS_SMD          FootprintMountingStyle = 2
	FootprintMountingStyle_FMS_UNSPECIFIED  FootprintMountingStyle = 3
)

// Enum value maps for FootprintMountingStyle.
var (
	FootprintMountingStyle_name = map[int32]string{
		0: "FMS_UNKNOWN",
		1: "FMS_THROUGH_HOLE",
		2: "FMS_SMD",
		3: "FMS_UNSPECIFIED",
	}
	FootprintMountingStyle_value = map[string]int32{
		"FMS_UNKNOWN":      0,
		"FMS_THROUGH_HOLE": 1,
		"FMS_SMD":          2,
		"FMS_UNSPECIFIED":  3,
	}
)

func (x FootprintMountingStyle) Enum() *FootprintMountingStyle {
	p := new(FootprintMountingStyle)
	*p = x
	return p
}

func (x FootprintMountingStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FootprintMountingStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_board_board_types_proto_enumTypes[29].Descriptor()
}

func (FootprintMountingStyle) Type() protoreflect.EnumType {
	return &file_board_board_types_proto_enumTypes[29]
}

func (x FootprintMountingStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FootprintMountingStyle.Descriptor instead.
func (FootprintMountingStyle) EnumDescriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{29}
}

type NetCode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetCode) Reset() {
	*x = NetCode{}
	mi := &file_board_board_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetCode) ProtoMessage() {}

func (x *NetCode) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetCode.ProtoReflect.Descriptor instead.
func (*NetCode) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{0}
}

func (x *NetCode) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Describes a copper item's net
type Net struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique code representing this net
	Code *NetCode `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Human-readable net name
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Net) Reset() {
	*x = Net{}
	mi := &file_board_board_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Net) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Net) ProtoMessage() {}

func (x *Net) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Net.ProtoReflect.Descriptor instead.
func (*Net) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{1}
}

func (x *Net) GetCode() *NetCode {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *Net) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Represents a track segment on a board
type Track struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start         *types.Vector2         `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End           *types.Vector2         `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Width         *types.Distance        `protobuf:"bytes,4,opt,name=width,proto3" json:"width,omitempty"`
	Locked        types.LockedState      `protobuf:"varint,5,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,6,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Net           *Net                   `protobuf:"bytes,7,opt,name=net,proto3" json:"net,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Track) Reset() {
	*x = Track{}
	mi := &file_board_board_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{2}
}

func (x *Track) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Track) GetStart() *types.Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Track) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Track) GetWidth() *types.Distance {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *Track) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Track) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *Track) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

// Represents an arc track (not a PCB_SHAPE in arc shape)
// Arc tracks in KiCad store start, midpoint, and end.
// All other values (center point, angles, etc) are inferred.
type Arc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start         *types.Vector2         `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	Mid           *types.Vector2         `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"` // Arc midpoint
	End           *types.Vector2         `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Width         *types.Distance        `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Locked        types.LockedState      `protobuf:"varint,6,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,7,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Net           *Net                   `protobuf:"bytes,8,opt,name=net,proto3" json:"net,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Arc) Reset() {
	*x = Arc{}
	mi := &file_board_board_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Arc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arc) ProtoMessage() {}

func (x *Arc) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arc.ProtoReflect.Descriptor instead.
func (*Arc) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{3}
}

func (x *Arc) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Arc) GetStart() *types.Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Arc) GetMid() *types.Vector2 {
	if x != nil {
		return x.Mid
	}
	return nil
}

func (x *Arc) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Arc) GetWidth() *types.Distance {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *Arc) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Arc) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *Arc) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

// Which corners are chamfered in a PSS_CHAMFEREDRECT
type ChamferedRectCorners struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopLeft       bool                   `protobuf:"varint,1,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	TopRight      bool                   `protobuf:"varint,2,opt,name=top_right,json=topRight,proto3" json:"top_right,omitempty"`
	BottomLeft    bool                   `protobuf:"varint,3,opt,name=bottom_left,json=bottomLeft,proto3" json:"bottom_left,omitempty"`
	BottomRight   bool                   `protobuf:"varint,4,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChamferedRectCorners) Reset() {
	*x = ChamferedRectCorners{}
	mi := &file_board_board_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChamferedRectCorners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChamferedRectCorners) ProtoMessage() {}

func (x *ChamferedRectCorners) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChamferedRectCorners.ProtoReflect.Descriptor instead.
func (*ChamferedRectCorners) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{4}
}

func (x *ChamferedRectCorners) GetTopLeft() bool {
	if x != nil {
		return x.TopLeft
	}
	return false
}

func (x *ChamferedRectCorners) GetTopRight() bool {
	if x != nil {
		return x.TopRight
	}
	return false
}

func (x *ChamferedRectCorners) GetBottomLeft() bool {
	if x != nil {
		return x.BottomLeft
	}
	return false
}

func (x *ChamferedRectCorners) GetBottomRight() bool {
	if x != nil {
		return x.BottomRight
	}
	return false
}

// Controls for how copper zones connect to a pad
type ZoneConnectionSettings struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ZoneConnection ZoneConnectionStyle    `protobuf:"varint,1,opt,name=zone_connection,json=zoneConnection,proto3,enum=kiapi.board.types.ZoneConnectionStyle" json:"zone_connection,omitempty"`
	ThermalSpokes  *ThermalSpokeSettings  `protobuf:"bytes,2,opt,name=thermal_spokes,json=thermalSpokes,proto3" json:"thermal_spokes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ZoneConnectionSettings) Reset() {
	*x = ZoneConnectionSettings{}
	mi := &file_board_board_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneConnectionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneConnectionSettings) ProtoMessage() {}

func (x *ZoneConnectionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneConnectionSettings.ProtoReflect.Descriptor instead.
func (*ZoneConnectionSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{5}
}

func (x *ZoneConnectionSettings) GetZoneConnection() ZoneConnectionStyle {
	if x != nil {
		return x.ZoneConnection
	}
	return ZoneConnectionStyle_ZCS_UNKNOWN
}

func (x *ZoneConnectionSettings) GetThermalSpokes() *ThermalSpokeSettings {
	if x != nil {
		return x.ThermalSpokes
	}
	return nil
}

type SolderMaskOverrides struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Solder mask expansion/contraction
	SolderMaskMargin *types.Distance `protobuf:"bytes,1,opt,name=solder_mask_margin,json=solderMaskMargin,proto3" json:"solder_mask_margin,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SolderMaskOverrides) Reset() {
	*x = SolderMaskOverrides{}
	mi := &file_board_board_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolderMaskOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolderMaskOverrides) ProtoMessage() {}

func (x *SolderMaskOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolderMaskOverrides.ProtoReflect.Descriptor instead.
func (*SolderMaskOverrides) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{6}
}

func (x *SolderMaskOverrides) GetSolderMaskMargin() *types.Distance {
	if x != nil {
		return x.SolderMaskMargin
	}
	return nil
}

type SolderPasteOverrides struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Solder paste expansion/contraction
	SolderPasteMargin *types.Distance `protobuf:"bytes,1,opt,name=solder_paste_margin,json=solderPasteMargin,proto3" json:"solder_paste_margin,omitempty"`
	// Solder paste expansion/contraction ratio
	SolderPasteMarginRatio *types.Ratio `protobuf:"bytes,2,opt,name=solder_paste_margin_ratio,json=solderPasteMarginRatio,proto3" json:"solder_paste_margin_ratio,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SolderPasteOverrides) Reset() {
	*x = SolderPasteOverrides{}
	mi := &file_board_board_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolderPasteOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolderPasteOverrides) ProtoMessage() {}

func (x *SolderPasteOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolderPasteOverrides.ProtoReflect.Descriptor instead.
func (*SolderPasteOverrides) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{7}
}

func (x *SolderPasteOverrides) GetSolderPasteMargin() *types.Distance {
	if x != nil {
		return x.SolderPasteMargin
	}
	return nil
}

func (x *SolderPasteOverrides) GetSolderPasteMarginRatio() *types.Ratio {
	if x != nil {
		return x.SolderPasteMarginRatio
	}
	return nil
}

// The defintion of a padstack on a single layer
type PadStackLayer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The board layer of this padstack entry.  For Front/Inner/Back padstacks, In1_Cu is used to represent inner layers.
	Layer BoardLayer `protobuf:"varint,1,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	// The shape of the pad on this layer
	Shape PadStackShape `protobuf:"varint,2,opt,name=shape,proto3,enum=kiapi.board.types.PadStackShape" json:"shape,omitempty"`
	// The size (x and y) of the shape on this layer
	Size *types.Vector2 `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	// How much to round the corners of the shape by, as a fraction of min(size.x, size.y)
	// Only used for PSS_ROUNDRECT or PSS_CHAMFEREDRECT
	CornerRoundingRatio float64 `protobuf:"fixed64,4,opt,name=corner_rounding_ratio,json=cornerRoundingRatio,proto3" json:"corner_rounding_ratio,omitempty"`
	// How much to round the corners of the shape by, as a fraction of min(size.x, size.y)
	// Only used for PSS_CHAMFEREDRECT
	ChamferRatio     float64               `protobuf:"fixed64,5,opt,name=chamfer_ratio,json=chamferRatio,proto3" json:"chamfer_ratio,omitempty"`
	ChamferedCorners *ChamferedRectCorners `protobuf:"bytes,6,opt,name=chamfered_corners,json=chamferedCorners,proto3" json:"chamfered_corners,omitempty"`
	CustomShapes     []*BoardGraphicShape  `protobuf:"bytes,7,rep,name=custom_shapes,json=customShapes,proto3" json:"custom_shapes,omitempty"`
	// If shape == PSS_CUSTOM, defines the shape of the anchor (only PSS_CIRCLE and PSS_RECTANGLE supported at present)
	CustomAnchorShape PadStackShape `protobuf:"varint,8,opt,name=custom_anchor_shape,json=customAnchorShape,proto3,enum=kiapi.board.types.PadStackShape" json:"custom_anchor_shape,omitempty"`
	// Reserved for future use -- at the moment, zone connection settings are not per-layer
	ZoneSettings *ZoneConnectionSettings `protobuf:"bytes,9,opt,name=zone_settings,json=zoneSettings,proto3" json:"zone_settings,omitempty"`
	// The difference in side length between the short and long pads in a trapezoid.  Only one of x or y may be nonzero.
	// Only used for PSS_TRAPEZOID
	TrapezoidDelta *types.Vector2 `protobuf:"bytes,10,opt,name=trapezoid_delta,json=trapezoidDelta,proto3" json:"trapezoid_delta,omitempty"`
	// The offset of the center of this shape from the center of the pad (which is defined as the hole center)
	Offset        *types.Vector2 `protobuf:"bytes,11,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PadStackLayer) Reset() {
	*x = PadStackLayer{}
	mi := &file_board_board_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadStackLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadStackLayer) ProtoMessage() {}

func (x *PadStackLayer) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadStackLayer.ProtoReflect.Descriptor instead.
func (*PadStackLayer) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{8}
}

func (x *PadStackLayer) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *PadStackLayer) GetShape() PadStackShape {
	if x != nil {
		return x.Shape
	}
	return PadStackShape_PSS_UNKNOWN
}

func (x *PadStackLayer) GetSize() *types.Vector2 {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *PadStackLayer) GetCornerRoundingRatio() float64 {
	if x != nil {
		return x.CornerRoundingRatio
	}
	return 0
}

func (x *PadStackLayer) GetChamferRatio() float64 {
	if x != nil {
		return x.ChamferRatio
	}
	return 0
}

func (x *PadStackLayer) GetChamferedCorners() *ChamferedRectCorners {
	if x != nil {
		return x.ChamferedCorners
	}
	return nil
}

func (x *PadStackLayer) GetCustomShapes() []*BoardGraphicShape {
	if x != nil {
		return x.CustomShapes
	}
	return nil
}

func (x *PadStackLayer) GetCustomAnchorShape() PadStackShape {
	if x != nil {
		return x.CustomAnchorShape
	}
	return PadStackShape_PSS_UNKNOWN
}

func (x *PadStackLayer) GetZoneSettings() *ZoneConnectionSettings {
	if x != nil {
		return x.ZoneSettings
	}
	return nil
}

func (x *PadStackLayer) GetTrapezoidDelta() *types.Vector2 {
	if x != nil {
		return x.TrapezoidDelta
	}
	return nil
}

func (x *PadStackLayer) GetOffset() *types.Vector2 {
	if x != nil {
		return x.Offset
	}
	return nil
}

// Properties for the outer technical layers of a padstack on the top or bottom of the stack
type PadStackOuterLayer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SolderMaskMode  SolderMaskMode         `protobuf:"varint,1,opt,name=solder_mask_mode,json=solderMaskMode,proto3,enum=kiapi.board.types.SolderMaskMode" json:"solder_mask_mode,omitempty"`
	SolderPasteMode SolderPasteMode        `protobuf:"varint,2,opt,name=solder_paste_mode,json=solderPasteMode,proto3,enum=kiapi.board.types.SolderPasteMode" json:"solder_paste_mode,omitempty"`
	// NOTE: At present, KiCad does not support different solder mask expansion settings for the top and bottom layers
	SolderMaskSettings *SolderMaskOverrides `protobuf:"bytes,3,opt,name=solder_mask_settings,json=solderMaskSettings,proto3" json:"solder_mask_settings,omitempty"`
	// NOTE: At present, KiCad does not support different solder paste expansion settings for the top and bottom layers
	SolderPasteSettings *SolderPasteOverrides `protobuf:"bytes,4,opt,name=solder_paste_settings,json=solderPasteSettings,proto3" json:"solder_paste_settings,omitempty"`
	PluggingMode        ViaPluggingMode       `protobuf:"varint,5,opt,name=plugging_mode,json=pluggingMode,proto3,enum=kiapi.board.types.ViaPluggingMode" json:"plugging_mode,omitempty"`
	CoveringMode        ViaCoveringMode       `protobuf:"varint,6,opt,name=covering_mode,json=coveringMode,proto3,enum=kiapi.board.types.ViaCoveringMode" json:"covering_mode,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PadStackOuterLayer) Reset() {
	*x = PadStackOuterLayer{}
	mi := &file_board_board_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadStackOuterLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadStackOuterLayer) ProtoMessage() {}

func (x *PadStackOuterLayer) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadStackOuterLayer.ProtoReflect.Descriptor instead.
func (*PadStackOuterLayer) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{9}
}

func (x *PadStackOuterLayer) GetSolderMaskMode() SolderMaskMode {
	if x != nil {
		return x.SolderMaskMode
	}
	return SolderMaskMode_SMM_UNKNOWN
}

func (x *PadStackOuterLayer) GetSolderPasteMode() SolderPasteMode {
	if x != nil {
		return x.SolderPasteMode
	}
	return SolderPasteMode_SPM_UNKNOWN
}

func (x *PadStackOuterLayer) GetSolderMaskSettings() *SolderMaskOverrides {
	if x != nil {
		return x.SolderMaskSettings
	}
	return nil
}

func (x *PadStackOuterLayer) GetSolderPasteSettings() *SolderPasteOverrides {
	if x != nil {
		return x.SolderPasteSettings
	}
	return nil
}

func (x *PadStackOuterLayer) GetPluggingMode() ViaPluggingMode {
	if x != nil {
		return x.PluggingMode
	}
	return ViaPluggingMode_VPM_UNKNOWN
}

func (x *PadStackOuterLayer) GetCoveringMode() ViaCoveringMode {
	if x != nil {
		return x.CoveringMode
	}
	return ViaCoveringMode_VCM_UNKNOWN
}

type DrillProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lowest (closest to F_Cu) layer this drill exists on.
	StartLayer BoardLayer `protobuf:"varint,1,opt,name=start_layer,json=startLayer,proto3,enum=kiapi.board.types.BoardLayer" json:"start_layer,omitempty"`
	// Highest (closest to B_Cu) layer this drill exists on.
	EndLayer BoardLayer `protobuf:"varint,2,opt,name=end_layer,json=endLayer,proto3,enum=kiapi.board.types.BoardLayer" json:"end_layer,omitempty"`
	// The diameter, in x and y, of the pad's drilled hole, if this pad has a hole.
	// x and y will be the same value if the hole is round.
	Diameter      *types.Vector2      `protobuf:"bytes,3,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Shape         DrillShape          `protobuf:"varint,4,opt,name=shape,proto3,enum=kiapi.board.types.DrillShape" json:"shape,omitempty"`
	Capped        ViaDrillCappingMode `protobuf:"varint,5,opt,name=capped,proto3,enum=kiapi.board.types.ViaDrillCappingMode" json:"capped,omitempty"`
	Filled        ViaDrillFillingMode `protobuf:"varint,6,opt,name=filled,proto3,enum=kiapi.board.types.ViaDrillFillingMode" json:"filled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrillProperties) Reset() {
	*x = DrillProperties{}
	mi := &file_board_board_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrillProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrillProperties) ProtoMessage() {}

func (x *DrillProperties) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrillProperties.ProtoReflect.Descriptor instead.
func (*DrillProperties) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{10}
}

func (x *DrillProperties) GetStartLayer() BoardLayer {
	if x != nil {
		return x.StartLayer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *DrillProperties) GetEndLayer() BoardLayer {
	if x != nil {
		return x.EndLayer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *DrillProperties) GetDiameter() *types.Vector2 {
	if x != nil {
		return x.Diameter
	}
	return nil
}

func (x *DrillProperties) GetShape() DrillShape {
	if x != nil {
		return x.Shape
	}
	return DrillShape_DS_UNKNOWN
}

func (x *DrillProperties) GetCapped() ViaDrillCappingMode {
	if x != nil {
		return x.Capped
	}
	return ViaDrillCappingMode_VDCM_UNKNOWN
}

func (x *DrillProperties) GetFilled() ViaDrillFillingMode {
	if x != nil {
		return x.Filled
	}
	return ViaDrillFillingMode_VDFM_UNKNOWN
}

// A pad stack definition for a multilayer pad or via.
type PadStack struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// What type of pad stack this represents.
	Type PadStackType `protobuf:"varint,1,opt,name=type,proto3,enum=kiapi.board.types.PadStackType" json:"type,omitempty"`
	// The set of board layers this padstack has a definition for
	Layers []BoardLayer `protobuf:"varint,2,rep,packed,name=layers,proto3,enum=kiapi.board.types.BoardLayer" json:"layers,omitempty"`
	// Properties of the drilled hole in this padstack, if it has one
	Drill *DrillProperties `protobuf:"bytes,3,opt,name=drill,proto3" json:"drill,omitempty"`
	// How to treat pad shapes on unconnected layers.
	UnconnectedLayerRemoval UnconnectedLayerRemoval `protobuf:"varint,4,opt,name=unconnected_layer_removal,json=unconnectedLayerRemoval,proto3,enum=kiapi.board.types.UnconnectedLayerRemoval" json:"unconnected_layer_removal,omitempty"`
	CopperLayers            []*PadStackLayer        `protobuf:"bytes,5,rep,name=copper_layers,json=copperLayers,proto3" json:"copper_layers,omitempty"`
	// The overall rotation of this padstack (affects all layers)
	Angle *types.Angle `protobuf:"bytes,6,opt,name=angle,proto3" json:"angle,omitempty"`
	// Solder mask and paste settings for the front
	FrontOuterLayers *PadStackOuterLayer `protobuf:"bytes,7,opt,name=front_outer_layers,json=frontOuterLayers,proto3" json:"front_outer_layers,omitempty"`
	// Solder mask and paste settings for the back
	BackOuterLayers *PadStackOuterLayer `protobuf:"bytes,8,opt,name=back_outer_layers,json=backOuterLayers,proto3" json:"back_outer_layers,omitempty"`
	// Controls for how copper zones connect to the padstack
	ZoneSettings  *ZoneConnectionSettings `protobuf:"bytes,9,opt,name=zone_settings,json=zoneSettings,proto3" json:"zone_settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PadStack) Reset() {
	*x = PadStack{}
	mi := &file_board_board_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PadStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PadStack) ProtoMessage() {}

func (x *PadStack) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PadStack.ProtoReflect.Descriptor instead.
func (*PadStack) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{11}
}

func (x *PadStack) GetType() PadStackType {
	if x != nil {
		return x.Type
	}
	return PadStackType_PST_UNKNOWN
}

func (x *PadStack) GetLayers() []BoardLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *PadStack) GetDrill() *DrillProperties {
	if x != nil {
		return x.Drill
	}
	return nil
}

func (x *PadStack) GetUnconnectedLayerRemoval() UnconnectedLayerRemoval {
	if x != nil {
		return x.UnconnectedLayerRemoval
	}
	return UnconnectedLayerRemoval_ULR_UNKNOWN
}

func (x *PadStack) GetCopperLayers() []*PadStackLayer {
	if x != nil {
		return x.CopperLayers
	}
	return nil
}

func (x *PadStack) GetAngle() *types.Angle {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *PadStack) GetFrontOuterLayers() *PadStackOuterLayer {
	if x != nil {
		return x.FrontOuterLayers
	}
	return nil
}

func (x *PadStack) GetBackOuterLayers() *PadStackOuterLayer {
	if x != nil {
		return x.BackOuterLayers
	}
	return nil
}

func (x *PadStack) GetZoneSettings() *ZoneConnectionSettings {
	if x != nil {
		return x.ZoneSettings
	}
	return nil
}

// Represents a via
type Via struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the via
	Id *types.KIID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The location of the via's center point
	Position *types.Vector2 `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	// The pad stack definition for this via.
	PadStack      *PadStack         `protobuf:"bytes,3,opt,name=pad_stack,json=padStack,proto3" json:"pad_stack,omitempty"`
	Locked        types.LockedState `protobuf:"varint,4,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Net           *Net              `protobuf:"bytes,5,opt,name=net,proto3" json:"net,omitempty"`
	Type          ViaType           `protobuf:"varint,6,opt,name=type,proto3,enum=kiapi.board.types.ViaType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Via) Reset() {
	*x = Via{}
	mi := &file_board_board_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Via) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Via) ProtoMessage() {}

func (x *Via) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Via.ProtoReflect.Descriptor instead.
func (*Via) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{12}
}

func (x *Via) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Via) GetPosition() *types.Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Via) GetPadStack() *PadStack {
	if x != nil {
		return x.PadStack
	}
	return nil
}

func (x *Via) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Via) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *Via) GetType() ViaType {
	if x != nil {
		return x.Type
	}
	return ViaType_VT_UNKNOWN
}

type BoardGraphicShape struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shape         *types.GraphicShape    `protobuf:"bytes,1,opt,name=shape,proto3" json:"shape,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,2,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Net           *Net                   `protobuf:"bytes,3,opt,name=net,proto3" json:"net,omitempty"`
	Id            *types.KIID            `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Locked        types.LockedState      `protobuf:"varint,5,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardGraphicShape) Reset() {
	*x = BoardGraphicShape{}
	mi := &file_board_board_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardGraphicShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardGraphicShape) ProtoMessage() {}

func (x *BoardGraphicShape) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardGraphicShape.ProtoReflect.Descriptor instead.
func (*BoardGraphicShape) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{13}
}

func (x *BoardGraphicShape) GetShape() *types.GraphicShape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *BoardGraphicShape) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *BoardGraphicShape) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *BoardGraphicShape) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BoardGraphicShape) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

// A board-specific text object, existing on a board layer
type BoardText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          *types.Text            `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,3,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Knockout      bool                   `protobuf:"varint,4,opt,name=knockout,proto3" json:"knockout,omitempty"`
	Locked        types.LockedState      `protobuf:"varint,5,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardText) Reset() {
	*x = BoardText{}
	mi := &file_board_board_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardText) ProtoMessage() {}

func (x *BoardText) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardText.ProtoReflect.Descriptor instead.
func (*BoardText) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{14}
}

func (x *BoardText) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BoardText) GetText() *types.Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *BoardText) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *BoardText) GetKnockout() bool {
	if x != nil {
		return x.Knockout
	}
	return false
}

func (x *BoardText) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

// A board-specific textbox, existing on a board layer
type BoardTextBox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Textbox       *types.TextBox         `protobuf:"bytes,2,opt,name=textbox,proto3" json:"textbox,omitempty"`
	Layer         BoardLayer             `protobuf:"varint,3,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Locked        types.LockedState      `protobuf:"varint,4,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardTextBox) Reset() {
	*x = BoardTextBox{}
	mi := &file_board_board_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardTextBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardTextBox) ProtoMessage() {}

func (x *BoardTextBox) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardTextBox.ProtoReflect.Descriptor instead.
func (*BoardTextBox) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{15}
}

func (x *BoardTextBox) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BoardTextBox) GetTextbox() *types.TextBox {
	if x != nil {
		return x.Textbox
	}
	return nil
}

func (x *BoardTextBox) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *BoardTextBox) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

type ThermalSpokeSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         *types.Distance        `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	Angle         *types.Angle           `protobuf:"bytes,2,opt,name=angle,proto3" json:"angle,omitempty"`
	Gap           *types.Distance        `protobuf:"bytes,3,opt,name=gap,proto3" json:"gap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThermalSpokeSettings) Reset() {
	*x = ThermalSpokeSettings{}
	mi := &file_board_board_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThermalSpokeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThermalSpokeSettings) ProtoMessage() {}

func (x *ThermalSpokeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThermalSpokeSettings.ProtoReflect.Descriptor instead.
func (*ThermalSpokeSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{16}
}

func (x *ThermalSpokeSettings) GetWidth() *types.Distance {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *ThermalSpokeSettings) GetAngle() *types.Angle {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *ThermalSpokeSettings) GetGap() *types.Distance {
	if x != nil {
		return x.Gap
	}
	return nil
}

type Pad struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locked   types.LockedState      `protobuf:"varint,2,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Number   string                 `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Net      *Net                   `protobuf:"bytes,4,opt,name=net,proto3" json:"net,omitempty"`
	Type     PadType                `protobuf:"varint,5,opt,name=type,proto3,enum=kiapi.board.types.PadType" json:"type,omitempty"`
	PadStack *PadStack              `protobuf:"bytes,6,opt,name=pad_stack,json=padStack,proto3" json:"pad_stack,omitempty"`
	// A pad's position is always relative to the parent footprint's origin
	Position *types.Vector2 `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	// Copper-to-copper clearance override
	CopperClearanceOverride *types.Distance `protobuf:"bytes,8,opt,name=copper_clearance_override,json=copperClearanceOverride,proto3" json:"copper_clearance_override,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Pad) Reset() {
	*x = Pad{}
	mi := &file_board_board_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pad) ProtoMessage() {}

func (x *Pad) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pad.ProtoReflect.Descriptor instead.
func (*Pad) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{17}
}

func (x *Pad) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Pad) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Pad) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Pad) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *Pad) GetType() PadType {
	if x != nil {
		return x.Type
	}
	return PadType_PT_UNKNOWN
}

func (x *Pad) GetPadStack() *PadStack {
	if x != nil {
		return x.PadStack
	}
	return nil
}

func (x *Pad) GetPosition() *types.Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Pad) GetCopperClearanceOverride() *types.Distance {
	if x != nil {
		return x.CopperClearanceOverride
	}
	return nil
}

type HatchFillSettings struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	Thickness             *types.Distance         `protobuf:"bytes,1,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Gap                   *types.Distance         `protobuf:"bytes,2,opt,name=gap,proto3" json:"gap,omitempty"`
	Orientation           *types.Angle            `protobuf:"bytes,3,opt,name=orientation,proto3" json:"orientation,omitempty"`
	HatchSmoothingRatio   float64                 `protobuf:"fixed64,4,opt,name=hatch_smoothing_ratio,json=hatchSmoothingRatio,proto3" json:"hatch_smoothing_ratio,omitempty"`
	HatchHoleMinAreaRatio float64                 `protobuf:"fixed64,5,opt,name=hatch_hole_min_area_ratio,json=hatchHoleMinAreaRatio,proto3" json:"hatch_hole_min_area_ratio,omitempty"`
	BorderMode            ZoneHatchFillBorderMode `protobuf:"varint,6,opt,name=border_mode,json=borderMode,proto3,enum=kiapi.board.types.ZoneHatchFillBorderMode" json:"border_mode,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *HatchFillSettings) Reset() {
	*x = HatchFillSettings{}
	mi := &file_board_board_types_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HatchFillSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HatchFillSettings) ProtoMessage() {}

func (x *HatchFillSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HatchFillSettings.ProtoReflect.Descriptor instead.
func (*HatchFillSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{18}
}

func (x *HatchFillSettings) GetThickness() *types.Distance {
	if x != nil {
		return x.Thickness
	}
	return nil
}

func (x *HatchFillSettings) GetGap() *types.Distance {
	if x != nil {
		return x.Gap
	}
	return nil
}

func (x *HatchFillSettings) GetOrientation() *types.Angle {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *HatchFillSettings) GetHatchSmoothingRatio() float64 {
	if x != nil {
		return x.HatchSmoothingRatio
	}
	return 0
}

func (x *HatchFillSettings) GetHatchHoleMinAreaRatio() float64 {
	if x != nil {
		return x.HatchHoleMinAreaRatio
	}
	return 0
}

func (x *HatchFillSettings) GetBorderMode() ZoneHatchFillBorderMode {
	if x != nil {
		return x.BorderMode
	}
	return ZoneHatchFillBorderMode_ZHFBM_UNKNOWN
}

type TeardropSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          TeardropType           `protobuf:"varint,1,opt,name=type,proto3,enum=kiapi.board.types.TeardropType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeardropSettings) Reset() {
	*x = TeardropSettings{}
	mi := &file_board_board_types_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeardropSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeardropSettings) ProtoMessage() {}

func (x *TeardropSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeardropSettings.ProtoReflect.Descriptor instead.
func (*TeardropSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{19}
}

func (x *TeardropSettings) GetType() TeardropType {
	if x != nil {
		return x.Type
	}
	return TeardropType_TDT_UNKNOWN
}

type CopperZoneSettings struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Connection    *ZoneConnectionSettings `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	Clearance     *types.Distance         `protobuf:"bytes,2,opt,name=clearance,proto3" json:"clearance,omitempty"`
	MinThickness  *types.Distance         `protobuf:"bytes,3,opt,name=min_thickness,json=minThickness,proto3" json:"min_thickness,omitempty"`
	IslandMode    IslandRemovalMode       `protobuf:"varint,4,opt,name=island_mode,json=islandMode,proto3,enum=kiapi.board.types.IslandRemovalMode" json:"island_mode,omitempty"`
	MinIslandArea uint64                  `protobuf:"varint,5,opt,name=min_island_area,json=minIslandArea,proto3" json:"min_island_area,omitempty"`
	FillMode      ZoneFillMode            `protobuf:"varint,6,opt,name=fill_mode,json=fillMode,proto3,enum=kiapi.board.types.ZoneFillMode" json:"fill_mode,omitempty"`
	HatchSettings *HatchFillSettings      `protobuf:"bytes,7,opt,name=hatch_settings,json=hatchSettings,proto3" json:"hatch_settings,omitempty"`
	Net           *Net                    `protobuf:"bytes,8,opt,name=net,proto3" json:"net,omitempty"`
	Teardrop      *TeardropSettings       `protobuf:"bytes,9,opt,name=teardrop,proto3" json:"teardrop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopperZoneSettings) Reset() {
	*x = CopperZoneSettings{}
	mi := &file_board_board_types_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopperZoneSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopperZoneSettings) ProtoMessage() {}

func (x *CopperZoneSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopperZoneSettings.ProtoReflect.Descriptor instead.
func (*CopperZoneSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{20}
}

func (x *CopperZoneSettings) GetConnection() *ZoneConnectionSettings {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *CopperZoneSettings) GetClearance() *types.Distance {
	if x != nil {
		return x.Clearance
	}
	return nil
}

func (x *CopperZoneSettings) GetMinThickness() *types.Distance {
	if x != nil {
		return x.MinThickness
	}
	return nil
}

func (x *CopperZoneSettings) GetIslandMode() IslandRemovalMode {
	if x != nil {
		return x.IslandMode
	}
	return IslandRemovalMode_IRM_UNKNOWN
}

func (x *CopperZoneSettings) GetMinIslandArea() uint64 {
	if x != nil {
		return x.MinIslandArea
	}
	return 0
}

func (x *CopperZoneSettings) GetFillMode() ZoneFillMode {
	if x != nil {
		return x.FillMode
	}
	return ZoneFillMode_ZFM_UNKNOWN
}

func (x *CopperZoneSettings) GetHatchSettings() *HatchFillSettings {
	if x != nil {
		return x.HatchSettings
	}
	return nil
}

func (x *CopperZoneSettings) GetNet() *Net {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *CopperZoneSettings) GetTeardrop() *TeardropSettings {
	if x != nil {
		return x.Teardrop
	}
	return nil
}

type RuleAreaSettings struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	KeepoutCopper       bool                    `protobuf:"varint,1,opt,name=keepout_copper,json=keepoutCopper,proto3" json:"keepout_copper,omitempty"`
	KeepoutVias         bool                    `protobuf:"varint,2,opt,name=keepout_vias,json=keepoutVias,proto3" json:"keepout_vias,omitempty"`
	KeepoutTracks       bool                    `protobuf:"varint,3,opt,name=keepout_tracks,json=keepoutTracks,proto3" json:"keepout_tracks,omitempty"`
	KeepoutPads         bool                    `protobuf:"varint,4,opt,name=keepout_pads,json=keepoutPads,proto3" json:"keepout_pads,omitempty"`
	KeepoutFootprints   bool                    `protobuf:"varint,5,opt,name=keepout_footprints,json=keepoutFootprints,proto3" json:"keepout_footprints,omitempty"`
	PlacementEnabled    bool                    `protobuf:"varint,6,opt,name=placement_enabled,json=placementEnabled,proto3" json:"placement_enabled,omitempty"`
	PlacementSourceType PlacementRuleSourceType `protobuf:"varint,7,opt,name=placement_source_type,json=placementSourceType,proto3,enum=kiapi.board.types.PlacementRuleSourceType" json:"placement_source_type,omitempty"`
	PlacementSource     string                  `protobuf:"bytes,8,opt,name=placement_source,json=placementSource,proto3" json:"placement_source,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RuleAreaSettings) Reset() {
	*x = RuleAreaSettings{}
	mi := &file_board_board_types_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleAreaSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleAreaSettings) ProtoMessage() {}

func (x *RuleAreaSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleAreaSettings.ProtoReflect.Descriptor instead.
func (*RuleAreaSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{21}
}

func (x *RuleAreaSettings) GetKeepoutCopper() bool {
	if x != nil {
		return x.KeepoutCopper
	}
	return false
}

func (x *RuleAreaSettings) GetKeepoutVias() bool {
	if x != nil {
		return x.KeepoutVias
	}
	return false
}

func (x *RuleAreaSettings) GetKeepoutTracks() bool {
	if x != nil {
		return x.KeepoutTracks
	}
	return false
}

func (x *RuleAreaSettings) GetKeepoutPads() bool {
	if x != nil {
		return x.KeepoutPads
	}
	return false
}

func (x *RuleAreaSettings) GetKeepoutFootprints() bool {
	if x != nil {
		return x.KeepoutFootprints
	}
	return false
}

func (x *RuleAreaSettings) GetPlacementEnabled() bool {
	if x != nil {
		return x.PlacementEnabled
	}
	return false
}

func (x *RuleAreaSettings) GetPlacementSourceType() PlacementRuleSourceType {
	if x != nil {
		return x.PlacementSourceType
	}
	return PlacementRuleSourceType_PRST_UNKNOWN
}

func (x *RuleAreaSettings) GetPlacementSource() string {
	if x != nil {
		return x.PlacementSource
	}
	return ""
}

type ZoneBorderSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Style         ZoneBorderStyle        `protobuf:"varint,1,opt,name=style,proto3,enum=kiapi.board.types.ZoneBorderStyle" json:"style,omitempty"`
	Pitch         *types.Distance        `protobuf:"bytes,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneBorderSettings) Reset() {
	*x = ZoneBorderSettings{}
	mi := &file_board_board_types_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneBorderSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneBorderSettings) ProtoMessage() {}

func (x *ZoneBorderSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneBorderSettings.ProtoReflect.Descriptor instead.
func (*ZoneBorderSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{22}
}

func (x *ZoneBorderSettings) GetStyle() ZoneBorderStyle {
	if x != nil {
		return x.Style
	}
	return ZoneBorderStyle_ZBS_UNKNOWN
}

func (x *ZoneBorderSettings) GetPitch() *types.Distance {
	if x != nil {
		return x.Pitch
	}
	return nil
}

// The set of filled polygons of a zone on a single board layer
type ZoneFilledPolygons struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Layer         BoardLayer             `protobuf:"varint,1,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Shapes        *types.PolySet         `protobuf:"bytes,2,opt,name=shapes,proto3" json:"shapes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneFilledPolygons) Reset() {
	*x = ZoneFilledPolygons{}
	mi := &file_board_board_types_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneFilledPolygons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneFilledPolygons) ProtoMessage() {}

func (x *ZoneFilledPolygons) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneFilledPolygons.ProtoReflect.Descriptor instead.
func (*ZoneFilledPolygons) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{23}
}

func (x *ZoneFilledPolygons) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *ZoneFilledPolygons) GetShapes() *types.PolySet {
	if x != nil {
		return x.Shapes
	}
	return nil
}

type ZoneLayerProperties struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Layer          BoardLayer             `protobuf:"varint,1,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	HatchingOffset *types.Vector2         `protobuf:"bytes,2,opt,name=hatching_offset,json=hatchingOffset,proto3" json:"hatching_offset,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ZoneLayerProperties) Reset() {
	*x = ZoneLayerProperties{}
	mi := &file_board_board_types_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneLayerProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneLayerProperties) ProtoMessage() {}

func (x *ZoneLayerProperties) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneLayerProperties.ProtoReflect.Descriptor instead.
func (*ZoneLayerProperties) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{24}
}

func (x *ZoneLayerProperties) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *ZoneLayerProperties) GetHatchingOffset() *types.Vector2 {
	if x != nil {
		return x.HatchingOffset
	}
	return nil
}

type Zone struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Id      *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type    ZoneType               `protobuf:"varint,2,opt,name=type,proto3,enum=kiapi.board.types.ZoneType" json:"type,omitempty"`
	Layers  []BoardLayer           `protobuf:"varint,3,rep,packed,name=layers,proto3,enum=kiapi.board.types.BoardLayer" json:"layers,omitempty"`
	Outline *types.PolySet         `protobuf:"bytes,4,opt,name=outline,proto3" json:"outline,omitempty"`
	Name    string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Settings:
	//
	//	*Zone_CopperSettings
	//	*Zone_RuleAreaSettings
	Settings        isZone_Settings        `protobuf_oneof:"settings"`
	Priority        uint32                 `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Filled          bool                   `protobuf:"varint,9,opt,name=filled,proto3" json:"filled,omitempty"`
	FilledPolygons  []*ZoneFilledPolygons  `protobuf:"bytes,10,rep,name=filled_polygons,json=filledPolygons,proto3" json:"filled_polygons,omitempty"`
	Border          *ZoneBorderSettings    `protobuf:"bytes,11,opt,name=border,proto3" json:"border,omitempty"`
	Locked          types.LockedState      `protobuf:"varint,12,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	LayerProperties []*ZoneLayerProperties `protobuf:"bytes,13,rep,name=layer_properties,json=layerProperties,proto3" json:"layer_properties,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Zone) Reset() {
	*x = Zone{}
	mi := &file_board_board_types_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{25}
}

func (x *Zone) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Zone) GetType() ZoneType {
	if x != nil {
		return x.Type
	}
	return ZoneType_ZT_UNKNOWN
}

func (x *Zone) GetLayers() []BoardLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *Zone) GetOutline() *types.PolySet {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *Zone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Zone) GetSettings() isZone_Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Zone) GetCopperSettings() *CopperZoneSettings {
	if x != nil {
		if x, ok := x.Settings.(*Zone_CopperSettings); ok {
			return x.CopperSettings
		}
	}
	return nil
}

func (x *Zone) GetRuleAreaSettings() *RuleAreaSettings {
	if x != nil {
		if x, ok := x.Settings.(*Zone_RuleAreaSettings); ok {
			return x.RuleAreaSettings
		}
	}
	return nil
}

func (x *Zone) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Zone) GetFilled() bool {
	if x != nil {
		return x.Filled
	}
	return false
}

func (x *Zone) GetFilledPolygons() []*ZoneFilledPolygons {
	if x != nil {
		return x.FilledPolygons
	}
	return nil
}

func (x *Zone) GetBorder() *ZoneBorderSettings {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *Zone) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Zone) GetLayerProperties() []*ZoneLayerProperties {
	if x != nil {
		return x.LayerProperties
	}
	return nil
}

type isZone_Settings interface {
	isZone_Settings()
}

type Zone_CopperSettings struct {
	CopperSettings *CopperZoneSettings `protobuf:"bytes,6,opt,name=copper_settings,json=copperSettings,proto3,oneof"`
}

type Zone_RuleAreaSettings struct {
	RuleAreaSettings *RuleAreaSettings `protobuf:"bytes,7,opt,name=rule_area_settings,json=ruleAreaSettings,proto3,oneof"`
}

func (*Zone_CopperSettings) isZone_Settings() {}

func (*Zone_RuleAreaSettings) isZone_Settings() {}

// An aligned dimension is drawn parallel to the line segment between the start and end points
type AlignedDimensionAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Start *types.Vector2         `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *types.Vector2         `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// Perpendicular distance from dimension endpoints to crossbar
	Height *types.Distance `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
	// Length of extension lines past the crossbar
	ExtensionHeight *types.Distance `protobuf:"bytes,4,opt,name=extension_height,json=extensionHeight,proto3" json:"extension_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AlignedDimensionAttributes) Reset() {
	*x = AlignedDimensionAttributes{}
	mi := &file_board_board_types_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlignedDimensionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlignedDimensionAttributes) ProtoMessage() {}

func (x *AlignedDimensionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlignedDimensionAttributes.ProtoReflect.Descriptor instead.
func (*AlignedDimensionAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{26}
}

func (x *AlignedDimensionAttributes) GetStart() *types.Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *AlignedDimensionAttributes) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *AlignedDimensionAttributes) GetHeight() *types.Distance {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *AlignedDimensionAttributes) GetExtensionHeight() *types.Distance {
	if x != nil {
		return x.ExtensionHeight
	}
	return nil
}

// An orthogonal dimension is drawn parallel to the X or Y axis of the coordinate system
type OrthogonalDimensionAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Start *types.Vector2         `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *types.Vector2         `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// Perpendicular distance from dimension endpoints to crossbar
	Height *types.Distance `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
	// Length of extension lines past the crossbar
	ExtensionHeight *types.Distance `protobuf:"bytes,4,opt,name=extension_height,json=extensionHeight,proto3" json:"extension_height,omitempty"`
	// Which axis the dimension is parallel to
	Alignment     types.AxisAlignment `protobuf:"varint,5,opt,name=alignment,proto3,enum=kiapi.common.types.AxisAlignment" json:"alignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrthogonalDimensionAttributes) Reset() {
	*x = OrthogonalDimensionAttributes{}
	mi := &file_board_board_types_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrthogonalDimensionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrthogonalDimensionAttributes) ProtoMessage() {}

func (x *OrthogonalDimensionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrthogonalDimensionAttributes.ProtoReflect.Descriptor instead.
func (*OrthogonalDimensionAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{27}
}

func (x *OrthogonalDimensionAttributes) GetStart() *types.Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *OrthogonalDimensionAttributes) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *OrthogonalDimensionAttributes) GetHeight() *types.Distance {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *OrthogonalDimensionAttributes) GetExtensionHeight() *types.Distance {
	if x != nil {
		return x.ExtensionHeight
	}
	return nil
}

func (x *OrthogonalDimensionAttributes) GetAlignment() types.AxisAlignment {
	if x != nil {
		return x.Alignment
	}
	return types.AxisAlignment(0)
}

type RadialDimensionAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The center of the dimensioned circle or arc
	Center *types.Vector2 `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	// A point on the radius of the circle or arc
	RadiusPoint *types.Vector2 `protobuf:"bytes,2,opt,name=radius_point,json=radiusPoint,proto3" json:"radius_point,omitempty"`
	// The distance from radius_point to draw the first segment of the leader line.
	// The second segment is drawn from the end of the first segment to the text position.
	LeaderLength  *types.Distance `protobuf:"bytes,3,opt,name=leader_length,json=leaderLength,proto3" json:"leader_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RadialDimensionAttributes) Reset() {
	*x = RadialDimensionAttributes{}
	mi := &file_board_board_types_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RadialDimensionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadialDimensionAttributes) ProtoMessage() {}

func (x *RadialDimensionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadialDimensionAttributes.ProtoReflect.Descriptor instead.
func (*RadialDimensionAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{28}
}

func (x *RadialDimensionAttributes) GetCenter() *types.Vector2 {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *RadialDimensionAttributes) GetRadiusPoint() *types.Vector2 {
	if x != nil {
		return x.RadiusPoint
	}
	return nil
}

func (x *RadialDimensionAttributes) GetLeaderLength() *types.Distance {
	if x != nil {
		return x.LeaderLength
	}
	return nil
}

type LeaderDimensionAttributes struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Start         *types.Vector2           `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *types.Vector2           `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	BorderStyle   DimensionTextBorderStyle `protobuf:"varint,3,opt,name=border_style,json=borderStyle,proto3,enum=kiapi.board.types.DimensionTextBorderStyle" json:"border_style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderDimensionAttributes) Reset() {
	*x = LeaderDimensionAttributes{}
	mi := &file_board_board_types_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderDimensionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderDimensionAttributes) ProtoMessage() {}

func (x *LeaderDimensionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderDimensionAttributes.ProtoReflect.Descriptor instead.
func (*LeaderDimensionAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{29}
}

func (x *LeaderDimensionAttributes) GetStart() *types.Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *LeaderDimensionAttributes) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *LeaderDimensionAttributes) GetBorderStyle() DimensionTextBorderStyle {
	if x != nil {
		return x.BorderStyle
	}
	return DimensionTextBorderStyle_DTBS_UNKNOWN
}

type CenterDimensionAttributes struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Center *types.Vector2         `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	// A point on the end of one of the four radial spokes drawn from the center point
	End           *types.Vector2 `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CenterDimensionAttributes) Reset() {
	*x = CenterDimensionAttributes{}
	mi := &file_board_board_types_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CenterDimensionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CenterDimensionAttributes) ProtoMessage() {}

func (x *CenterDimensionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CenterDimensionAttributes.ProtoReflect.Descriptor instead.
func (*CenterDimensionAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{30}
}

func (x *CenterDimensionAttributes) GetCenter() *types.Vector2 {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *CenterDimensionAttributes) GetEnd() *types.Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

// A dimension in KiCad is a special type of text object.
// To know the visual appearance of the dimension as rendered by KiCad, use GetTextAsShapes
type Dimension struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locked types.LockedState      `protobuf:"varint,2,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Layer  BoardLayer             `protobuf:"varint,3,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Text   *types.Text            `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// Types that are valid to be assigned to DimensionStyle:
	//
	//	*Dimension_Aligned
	//	*Dimension_Orthogonal
	//	*Dimension_Radial
	//	*Dimension_Leader
	//	*Dimension_Center
	DimensionStyle         isDimension_DimensionStyle `protobuf_oneof:"dimension_style"`
	OverrideTextEnabled    bool                       `protobuf:"varint,10,opt,name=override_text_enabled,json=overrideTextEnabled,proto3" json:"override_text_enabled,omitempty"`
	OverrideText           string                     `protobuf:"bytes,11,opt,name=override_text,json=overrideText,proto3" json:"override_text,omitempty"`
	Prefix                 string                     `protobuf:"bytes,12,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix                 string                     `protobuf:"bytes,13,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Unit                   DimensionUnit              `protobuf:"varint,14,opt,name=unit,proto3,enum=kiapi.board.types.DimensionUnit" json:"unit,omitempty"`
	UnitFormat             DimensionUnitFormat        `protobuf:"varint,15,opt,name=unit_format,json=unitFormat,proto3,enum=kiapi.board.types.DimensionUnitFormat" json:"unit_format,omitempty"`
	ArrowDirection         DimensionArrowDirection    `protobuf:"varint,16,opt,name=arrow_direction,json=arrowDirection,proto3,enum=kiapi.board.types.DimensionArrowDirection" json:"arrow_direction,omitempty"`
	Precision              DimensionPrecision         `protobuf:"varint,17,opt,name=precision,proto3,enum=kiapi.board.types.DimensionPrecision" json:"precision,omitempty"`
	SuppressTrailingZeroes bool                       `protobuf:"varint,18,opt,name=suppress_trailing_zeroes,json=suppressTrailingZeroes,proto3" json:"suppress_trailing_zeroes,omitempty"`
	LineThickness          *types.Distance            `protobuf:"bytes,19,opt,name=line_thickness,json=lineThickness,proto3" json:"line_thickness,omitempty"`
	ArrowLength            *types.Distance            `protobuf:"bytes,20,opt,name=arrow_length,json=arrowLength,proto3" json:"arrow_length,omitempty"`
	ExtensionOffset        *types.Distance            `protobuf:"bytes,21,opt,name=extension_offset,json=extensionOffset,proto3" json:"extension_offset,omitempty"`
	TextPosition           DimensionTextPosition      `protobuf:"varint,22,opt,name=text_position,json=textPosition,proto3,enum=kiapi.board.types.DimensionTextPosition" json:"text_position,omitempty"`
	KeepTextAligned        bool                       `protobuf:"varint,23,opt,name=keep_text_aligned,json=keepTextAligned,proto3" json:"keep_text_aligned,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	mi := &file_board_board_types_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{31}
}

func (x *Dimension) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Dimension) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *Dimension) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *Dimension) GetText() *types.Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Dimension) GetDimensionStyle() isDimension_DimensionStyle {
	if x != nil {
		return x.DimensionStyle
	}
	return nil
}

func (x *Dimension) GetAligned() *AlignedDimensionAttributes {
	if x != nil {
		if x, ok := x.DimensionStyle.(*Dimension_Aligned); ok {
			return x.Aligned
		}
	}
	return nil
}

func (x *Dimension) GetOrthogonal() *OrthogonalDimensionAttributes {
	if x != nil {
		if x, ok := x.DimensionStyle.(*Dimension_Orthogonal); ok {
			return x.Orthogonal
		}
	}
	return nil
}

func (x *Dimension) GetRadial() *RadialDimensionAttributes {
	if x != nil {
		if x, ok := x.DimensionStyle.(*Dimension_Radial); ok {
			return x.Radial
		}
	}
	return nil
}

func (x *Dimension) GetLeader() *LeaderDimensionAttributes {
	if x != nil {
		if x, ok := x.DimensionStyle.(*Dimension_Leader); ok {
			return x.Leader
		}
	}
	return nil
}

func (x *Dimension) GetCenter() *CenterDimensionAttributes {
	if x != nil {
		if x, ok := x.DimensionStyle.(*Dimension_Center); ok {
			return x.Center
		}
	}
	return nil
}

func (x *Dimension) GetOverrideTextEnabled() bool {
	if x != nil {
		return x.OverrideTextEnabled
	}
	return false
}

func (x *Dimension) GetOverrideText() string {
	if x != nil {
		return x.OverrideText
	}
	return ""
}

func (x *Dimension) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Dimension) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Dimension) GetUnit() DimensionUnit {
	if x != nil {
		return x.Unit
	}
	return DimensionUnit_DU_UNKNOWN
}

func (x *Dimension) GetUnitFormat() DimensionUnitFormat {
	if x != nil {
		return x.UnitFormat
	}
	return DimensionUnitFormat_DUF_UNKNOWN
}

func (x *Dimension) GetArrowDirection() DimensionArrowDirection {
	if x != nil {
		return x.ArrowDirection
	}
	return DimensionArrowDirection_DAD_UNKNOWN
}

func (x *Dimension) GetPrecision() DimensionPrecision {
	if x != nil {
		return x.Precision
	}
	return DimensionPrecision_DP_UNKNOWN
}

func (x *Dimension) GetSuppressTrailingZeroes() bool {
	if x != nil {
		return x.SuppressTrailingZeroes
	}
	return false
}

func (x *Dimension) GetLineThickness() *types.Distance {
	if x != nil {
		return x.LineThickness
	}
	return nil
}

func (x *Dimension) GetArrowLength() *types.Distance {
	if x != nil {
		return x.ArrowLength
	}
	return nil
}

func (x *Dimension) GetExtensionOffset() *types.Distance {
	if x != nil {
		return x.ExtensionOffset
	}
	return nil
}

func (x *Dimension) GetTextPosition() DimensionTextPosition {
	if x != nil {
		return x.TextPosition
	}
	return DimensionTextPosition_DTP_UNKNOWN
}

func (x *Dimension) GetKeepTextAligned() bool {
	if x != nil {
		return x.KeepTextAligned
	}
	return false
}

type isDimension_DimensionStyle interface {
	isDimension_DimensionStyle()
}

type Dimension_Aligned struct {
	Aligned *AlignedDimensionAttributes `protobuf:"bytes,5,opt,name=aligned,proto3,oneof"`
}

type Dimension_Orthogonal struct {
	Orthogonal *OrthogonalDimensionAttributes `protobuf:"bytes,6,opt,name=orthogonal,proto3,oneof"`
}

type Dimension_Radial struct {
	Radial *RadialDimensionAttributes `protobuf:"bytes,7,opt,name=radial,proto3,oneof"`
}

type Dimension_Leader struct {
	Leader *LeaderDimensionAttributes `protobuf:"bytes,8,opt,name=leader,proto3,oneof"`
}

type Dimension_Center struct {
	Center *CenterDimensionAttributes `protobuf:"bytes,9,opt,name=center,proto3,oneof"`
}

func (*Dimension_Aligned) isDimension_DimensionStyle() {}

func (*Dimension_Orthogonal) isDimension_DimensionStyle() {}

func (*Dimension_Radial) isDimension_DimensionStyle() {}

func (*Dimension_Leader) isDimension_DimensionStyle() {}

func (*Dimension_Center) isDimension_DimensionStyle() {}

type ReferenceImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReferenceImage) Reset() {
	*x = ReferenceImage{}
	mi := &file_board_board_types_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReferenceImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceImage) ProtoMessage() {}

func (x *ReferenceImage) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceImage.ProtoReflect.Descriptor instead.
func (*ReferenceImage) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{32}
}

type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_board_board_types_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{33}
}

type FieldId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldId) Reset() {
	*x = FieldId{}
	mi := &file_board_board_types_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldId) ProtoMessage() {}

func (x *FieldId) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldId.ProtoReflect.Descriptor instead.
func (*FieldId) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{34}
}

func (x *FieldId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Field struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    *FieldId               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Text  *BoardText             `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// Since 9.0.1
	Visible       bool `protobuf:"varint,4,opt,name=visible,proto3" json:"visible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_board_board_types_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{35}
}

func (x *Field) GetId() *FieldId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetText() *BoardText {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Field) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type FootprintAttributes struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Description                    string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Keywords                       string                 `protobuf:"bytes,2,opt,name=keywords,proto3" json:"keywords,omitempty"`
	NotInSchematic                 bool                   `protobuf:"varint,3,opt,name=not_in_schematic,json=notInSchematic,proto3" json:"not_in_schematic,omitempty"`
	ExcludeFromPositionFiles       bool                   `protobuf:"varint,4,opt,name=exclude_from_position_files,json=excludeFromPositionFiles,proto3" json:"exclude_from_position_files,omitempty"`
	ExcludeFromBillOfMaterials     bool                   `protobuf:"varint,5,opt,name=exclude_from_bill_of_materials,json=excludeFromBillOfMaterials,proto3" json:"exclude_from_bill_of_materials,omitempty"`
	ExemptFromCourtyardRequirement bool                   `protobuf:"varint,6,opt,name=exempt_from_courtyard_requirement,json=exemptFromCourtyardRequirement,proto3" json:"exempt_from_courtyard_requirement,omitempty"`
	DoNotPopulate                  bool                   `protobuf:"varint,7,opt,name=do_not_populate,json=doNotPopulate,proto3" json:"do_not_populate,omitempty"`
	MountingStyle                  FootprintMountingStyle `protobuf:"varint,8,opt,name=mounting_style,json=mountingStyle,proto3,enum=kiapi.board.types.FootprintMountingStyle" json:"mounting_style,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *FootprintAttributes) Reset() {
	*x = FootprintAttributes{}
	mi := &file_board_board_types_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FootprintAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootprintAttributes) ProtoMessage() {}

func (x *FootprintAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootprintAttributes.ProtoReflect.Descriptor instead.
func (*FootprintAttributes) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{36}
}

func (x *FootprintAttributes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FootprintAttributes) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *FootprintAttributes) GetNotInSchematic() bool {
	if x != nil {
		return x.NotInSchematic
	}
	return false
}

func (x *FootprintAttributes) GetExcludeFromPositionFiles() bool {
	if x != nil {
		return x.ExcludeFromPositionFiles
	}
	return false
}

func (x *FootprintAttributes) GetExcludeFromBillOfMaterials() bool {
	if x != nil {
		return x.ExcludeFromBillOfMaterials
	}
	return false
}

func (x *FootprintAttributes) GetExemptFromCourtyardRequirement() bool {
	if x != nil {
		return x.ExemptFromCourtyardRequirement
	}
	return false
}

func (x *FootprintAttributes) GetDoNotPopulate() bool {
	if x != nil {
		return x.DoNotPopulate
	}
	return false
}

func (x *FootprintAttributes) GetMountingStyle() FootprintMountingStyle {
	if x != nil {
		return x.MountingStyle
	}
	return FootprintMountingStyle_FMS_UNKNOWN
}

type NetTieDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PadNumber     []string               `protobuf:"bytes,1,rep,name=pad_number,json=padNumber,proto3" json:"pad_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetTieDefinition) Reset() {
	*x = NetTieDefinition{}
	mi := &file_board_board_types_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetTieDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetTieDefinition) ProtoMessage() {}

func (x *NetTieDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetTieDefinition.ProtoReflect.Descriptor instead.
func (*NetTieDefinition) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{37}
}

func (x *NetTieDefinition) GetPadNumber() []string {
	if x != nil {
		return x.PadNumber
	}
	return nil
}

type FootprintDesignRuleOverrides struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SolderMask      *SolderMaskOverrides   `protobuf:"bytes,1,opt,name=solder_mask,json=solderMask,proto3" json:"solder_mask,omitempty"`
	SolderPaste     *SolderPasteOverrides  `protobuf:"bytes,2,opt,name=solder_paste,json=solderPaste,proto3" json:"solder_paste,omitempty"`
	CopperClearance *types.Distance        `protobuf:"bytes,3,opt,name=copper_clearance,json=copperClearance,proto3" json:"copper_clearance,omitempty"`
	ZoneConnection  ZoneConnectionStyle    `protobuf:"varint,4,opt,name=zone_connection,json=zoneConnection,proto3,enum=kiapi.board.types.ZoneConnectionStyle" json:"zone_connection,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FootprintDesignRuleOverrides) Reset() {
	*x = FootprintDesignRuleOverrides{}
	mi := &file_board_board_types_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FootprintDesignRuleOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootprintDesignRuleOverrides) ProtoMessage() {}

func (x *FootprintDesignRuleOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootprintDesignRuleOverrides.ProtoReflect.Descriptor instead.
func (*FootprintDesignRuleOverrides) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{38}
}

func (x *FootprintDesignRuleOverrides) GetSolderMask() *SolderMaskOverrides {
	if x != nil {
		return x.SolderMask
	}
	return nil
}

func (x *FootprintDesignRuleOverrides) GetSolderPaste() *SolderPasteOverrides {
	if x != nil {
		return x.SolderPaste
	}
	return nil
}

func (x *FootprintDesignRuleOverrides) GetCopperClearance() *types.Distance {
	if x != nil {
		return x.CopperClearance
	}
	return nil
}

func (x *FootprintDesignRuleOverrides) GetZoneConnection() ZoneConnectionStyle {
	if x != nil {
		return x.ZoneConnection
	}
	return ZoneConnectionStyle_ZCS_UNKNOWN
}

type Footprint3DModel struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Filename string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	// Scaling factor along each axis
	Scale *types.Vector3D `protobuf:"bytes,2,opt,name=scale,proto3" json:"scale,omitempty"`
	// Rotation around each axis, in degrees
	Rotation *types.Vector3D `protobuf:"bytes,3,opt,name=rotation,proto3" json:"rotation,omitempty"`
	// Offset from footprint center
	Offset        *types.Vector3D `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Visible       bool            `protobuf:"varint,5,opt,name=visible,proto3" json:"visible,omitempty"`
	Opacity       float64         `protobuf:"fixed64,6,opt,name=opacity,proto3" json:"opacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Footprint3DModel) Reset() {
	*x = Footprint3DModel{}
	mi := &file_board_board_types_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Footprint3DModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Footprint3DModel) ProtoMessage() {}

func (x *Footprint3DModel) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Footprint3DModel.ProtoReflect.Descriptor instead.
func (*Footprint3DModel) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{39}
}

func (x *Footprint3DModel) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Footprint3DModel) GetScale() *types.Vector3D {
	if x != nil {
		return x.Scale
	}
	return nil
}

func (x *Footprint3DModel) GetRotation() *types.Vector3D {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *Footprint3DModel) GetOffset() *types.Vector3D {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *Footprint3DModel) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Footprint3DModel) GetOpacity() float64 {
	if x != nil {
		return x.Opacity
	}
	return 0
}

type JumperGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PadNames      []string               `protobuf:"bytes,1,rep,name=pad_names,json=padNames,proto3" json:"pad_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JumperGroup) Reset() {
	*x = JumperGroup{}
	mi := &file_board_board_types_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JumperGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumperGroup) ProtoMessage() {}

func (x *JumperGroup) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumperGroup.ProtoReflect.Descriptor instead.
func (*JumperGroup) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{40}
}

func (x *JumperGroup) GetPadNames() []string {
	if x != nil {
		return x.PadNames
	}
	return nil
}

type JumperSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / If true, duplicate pad names in this footprint are jumpered together
	DuplicateNamesAreJumpered bool           `protobuf:"varint,1,opt,name=duplicate_names_are_jumpered,json=duplicateNamesAreJumpered,proto3" json:"duplicate_names_are_jumpered,omitempty"`
	Groups                    []*JumperGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *JumperSettings) Reset() {
	*x = JumperSettings{}
	mi := &file_board_board_types_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JumperSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumperSettings) ProtoMessage() {}

func (x *JumperSettings) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumperSettings.ProtoReflect.Descriptor instead.
func (*JumperSettings) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{41}
}

func (x *JumperSettings) GetDuplicateNamesAreJumpered() bool {
	if x != nil {
		return x.DuplicateNamesAreJumpered
	}
	return false
}

func (x *JumperSettings) GetGroups() []*JumperGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

// A footprint definition (i.e. what would be in a library)
type Footprint struct {
	state            protoimpl.MessageState        `protogen:"open.v1"`
	Id               *types.LibraryIdentifier      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Anchor           *types.Vector2                `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Attributes       *FootprintAttributes          `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Overrides        *FootprintDesignRuleOverrides `protobuf:"bytes,4,opt,name=overrides,proto3" json:"overrides,omitempty"`
	NetTies          []*NetTieDefinition           `protobuf:"bytes,5,rep,name=net_ties,json=netTies,proto3" json:"net_ties,omitempty"`
	PrivateLayers    []BoardLayer                  `protobuf:"varint,6,rep,packed,name=private_layers,json=privateLayers,proto3,enum=kiapi.board.types.BoardLayer" json:"private_layers,omitempty"`
	ReferenceField   *Field                        `protobuf:"bytes,7,opt,name=reference_field,json=referenceField,proto3" json:"reference_field,omitempty"`
	ValueField       *Field                        `protobuf:"bytes,8,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	DatasheetField   *Field                        `protobuf:"bytes,9,opt,name=datasheet_field,json=datasheetField,proto3" json:"datasheet_field,omitempty"`
	DescriptionField *Field                        `protobuf:"bytes,10,opt,name=description_field,json=descriptionField,proto3" json:"description_field,omitempty"`
	// All footprint items except for mandatory fields
	Items         []*anypb.Any    `protobuf:"bytes,11,rep,name=items,proto3" json:"items,omitempty"`
	Jumpers       *JumperSettings `protobuf:"bytes,12,opt,name=jumpers,proto3" json:"jumpers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Footprint) Reset() {
	*x = Footprint{}
	mi := &file_board_board_types_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Footprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Footprint) ProtoMessage() {}

func (x *Footprint) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Footprint.ProtoReflect.Descriptor instead.
func (*Footprint) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{42}
}

func (x *Footprint) GetId() *types.LibraryIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Footprint) GetAnchor() *types.Vector2 {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *Footprint) GetAttributes() *FootprintAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Footprint) GetOverrides() *FootprintDesignRuleOverrides {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *Footprint) GetNetTies() []*NetTieDefinition {
	if x != nil {
		return x.NetTies
	}
	return nil
}

func (x *Footprint) GetPrivateLayers() []BoardLayer {
	if x != nil {
		return x.PrivateLayers
	}
	return nil
}

func (x *Footprint) GetReferenceField() *Field {
	if x != nil {
		return x.ReferenceField
	}
	return nil
}

func (x *Footprint) GetValueField() *Field {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Footprint) GetDatasheetField() *Field {
	if x != nil {
		return x.DatasheetField
	}
	return nil
}

func (x *Footprint) GetDescriptionField() *Field {
	if x != nil {
		return x.DescriptionField
	}
	return nil
}

func (x *Footprint) GetItems() []*anypb.Any {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Footprint) GetJumpers() *JumperSettings {
	if x != nil {
		return x.Jumpers
	}
	return nil
}

// An instance of a footprint on a board
type FootprintInstance struct {
	state            protoimpl.MessageState        `protogen:"open.v1"`
	Id               *types.KIID                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Position         *types.Vector2                `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Orientation      *types.Angle                  `protobuf:"bytes,3,opt,name=orientation,proto3" json:"orientation,omitempty"`
	Layer            BoardLayer                    `protobuf:"varint,4,opt,name=layer,proto3,enum=kiapi.board.types.BoardLayer" json:"layer,omitempty"`
	Locked           types.LockedState             `protobuf:"varint,5,opt,name=locked,proto3,enum=kiapi.common.types.LockedState" json:"locked,omitempty"`
	Definition       *Footprint                    `protobuf:"bytes,6,opt,name=definition,proto3" json:"definition,omitempty"`
	ReferenceField   *Field                        `protobuf:"bytes,7,opt,name=reference_field,json=referenceField,proto3" json:"reference_field,omitempty"`
	ValueField       *Field                        `protobuf:"bytes,8,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	DatasheetField   *Field                        `protobuf:"bytes,9,opt,name=datasheet_field,json=datasheetField,proto3" json:"datasheet_field,omitempty"`
	DescriptionField *Field                        `protobuf:"bytes,10,opt,name=description_field,json=descriptionField,proto3" json:"description_field,omitempty"`
	Attributes       *FootprintAttributes          `protobuf:"bytes,11,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Overrides        *FootprintDesignRuleOverrides `protobuf:"bytes,12,opt,name=overrides,proto3" json:"overrides,omitempty"`
	// The sheet path to the associated symbol for this footprint instance, if one exists
	SymbolPath    *types.SheetPath `protobuf:"bytes,13,opt,name=symbol_path,json=symbolPath,proto3" json:"symbol_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FootprintInstance) Reset() {
	*x = FootprintInstance{}
	mi := &file_board_board_types_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FootprintInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootprintInstance) ProtoMessage() {}

func (x *FootprintInstance) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_types_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootprintInstance.ProtoReflect.Descriptor instead.
func (*FootprintInstance) Descriptor() ([]byte, []int) {
	return file_board_board_types_proto_rawDescGZIP(), []int{43}
}

func (x *FootprintInstance) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FootprintInstance) GetPosition() *types.Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *FootprintInstance) GetOrientation() *types.Angle {
	if x != nil {
		return x.Orientation
	}
	return nil
}

func (x *FootprintInstance) GetLayer() BoardLayer {
	if x != nil {
		return x.Layer
	}
	return BoardLayer_BL_UNKNOWN
}

func (x *FootprintInstance) GetLocked() types.LockedState {
	if x != nil {
		return x.Locked
	}
	return types.LockedState(0)
}

func (x *FootprintInstance) GetDefinition() *Footprint {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *FootprintInstance) GetReferenceField() *Field {
	if x != nil {
		return x.ReferenceField
	}
	return nil
}

func (x *FootprintInstance) GetValueField() *Field {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *FootprintInstance) GetDatasheetField() *Field {
	if x != nil {
		return x.DatasheetField
	}
	return nil
}

func (x *FootprintInstance) GetDescriptionField() *Field {
	if x != nil {
		return x.DescriptionField
	}
	return nil
}

func (x *FootprintInstance) GetAttributes() *FootprintAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FootprintInstance) GetOverrides() *FootprintDesignRuleOverrides {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *FootprintInstance) GetSymbolPath() *types.SheetPath {
	if x != nil {
		return x.SymbolPath
	}
	return nil
}

var File_board_board_types_proto protoreflect.FileDescriptor

const file_board_board_types_proto_rawDesc = "" +
	"\n" +
	"\x17board/board_types.proto\x12\x11kiapi.board.types\x1a\x19google/protobuf/any.proto\x1a\x1dcommon/types/base_types.proto\"\x1f\n" +
	"\aNetCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\"I\n" +
	"\x03Net\x12.\n" +
	"\x04code\x18\x01 \x01(\v2\x1a.kiapi.board.types.NetCodeR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xdf\x02\n" +
	"\x05Track\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x121\n" +
	"\x05start\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03end\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\x122\n" +
	"\x05width\x18\x04 \x01(\v2\x1c.kiapi.common.types.DistanceR\x05width\x127\n" +
	"\x06locked\x18\x05 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x123\n" +
	"\x05layer\x18\x06 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12(\n" +
	"\x03net\x18\a \x01(\v2\x16.kiapi.board.types.NetR\x03net\"\x8c\x03\n" +
	"\x03Arc\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x121\n" +
	"\x05start\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03mid\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03mid\x12-\n" +
	"\x03end\x18\x04 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\x122\n" +
	"\x05width\x18\x05 \x01(\v2\x1c.kiapi.common.types.DistanceR\x05width\x127\n" +
	"\x06locked\x18\x06 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x123\n" +
	"\x05layer\x18\a \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12(\n" +
	"\x03net\x18\b \x01(\v2\x16.kiapi.board.types.NetR\x03net\"\x92\x01\n" +
	"\x14ChamferedRectCorners\x12\x19\n" +
	"\btop_left\x18\x01 \x01(\bR\atopLeft\x12\x1b\n" +
	"\ttop_right\x18\x02 \x01(\bR\btopRight\x12\x1f\n" +
	"\vbottom_left\x18\x03 \x01(\bR\n" +
	"bottomLeft\x12!\n" +
	"\fbottom_right\x18\x04 \x01(\bR\vbottomRight\"\xb9\x01\n" +
	"\x16ZoneConnectionSettings\x12O\n" +
	"\x0fzone_connection\x18\x01 \x01(\x0e2&.kiapi.board.types.ZoneConnectionStyleR\x0ezoneConnection\x12N\n" +
	"\x0ethermal_spokes\x18\x02 \x01(\v2'.kiapi.board.types.ThermalSpokeSettingsR\rthermalSpokes\"a\n" +
	"\x13SolderMaskOverrides\x12J\n" +
	"\x12solder_mask_margin\x18\x01 \x01(\v2\x1c.kiapi.common.types.DistanceR\x10solderMaskMargin\"\xba\x01\n" +
	"\x14SolderPasteOverrides\x12L\n" +
	"\x13solder_paste_margin\x18\x01 \x01(\v2\x1c.kiapi.common.types.DistanceR\x11solderPasteMargin\x12T\n" +
	"\x19solder_paste_margin_ratio\x18\x02 \x01(\v2\x19.kiapi.common.types.RatioR\x16solderPasteMarginRatio\"\xc4\x05\n" +
	"\rPadStackLayer\x123\n" +
	"\x05layer\x18\x01 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x126\n" +
	"\x05shape\x18\x02 \x01(\x0e2 .kiapi.board.types.PadStackShapeR\x05shape\x12/\n" +
	"\x04size\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x04size\x122\n" +
	"\x15corner_rounding_ratio\x18\x04 \x01(\x01R\x13cornerRoundingRatio\x12#\n" +
	"\rchamfer_ratio\x18\x05 \x01(\x01R\fchamferRatio\x12T\n" +
	"\x11chamfered_corners\x18\x06 \x01(\v2'.kiapi.board.types.ChamferedRectCornersR\x10chamferedCorners\x12I\n" +
	"\rcustom_shapes\x18\a \x03(\v2$.kiapi.board.types.BoardGraphicShapeR\fcustomShapes\x12P\n" +
	"\x13custom_anchor_shape\x18\b \x01(\x0e2 .kiapi.board.types.PadStackShapeR\x11customAnchorShape\x12N\n" +
	"\rzone_settings\x18\t \x01(\v2).kiapi.board.types.ZoneConnectionSettingsR\fzoneSettings\x12D\n" +
	"\x0ftrapezoid_delta\x18\n" +
	" \x01(\v2\x1b.kiapi.common.types.Vector2R\x0etrapezoidDelta\x123\n" +
	"\x06offset\x18\v \x01(\v2\x1b.kiapi.common.types.Vector2R\x06offset\"\xfa\x03\n" +
	"\x12PadStackOuterLayer\x12K\n" +
	"\x10solder_mask_mode\x18\x01 \x01(\x0e2!.kiapi.board.types.SolderMaskModeR\x0esolderMaskMode\x12N\n" +
	"\x11solder_paste_mode\x18\x02 \x01(\x0e2\".kiapi.board.types.SolderPasteModeR\x0fsolderPasteMode\x12X\n" +
	"\x14solder_mask_settings\x18\x03 \x01(\v2&.kiapi.board.types.SolderMaskOverridesR\x12solderMaskSettings\x12[\n" +
	"\x15solder_paste_settings\x18\x04 \x01(\v2'.kiapi.board.types.SolderPasteOverridesR\x13solderPasteSettings\x12G\n" +
	"\rplugging_mode\x18\x05 \x01(\x0e2\".kiapi.board.types.ViaPluggingModeR\fpluggingMode\x12G\n" +
	"\rcovering_mode\x18\x06 \x01(\x0e2\".kiapi.board.types.ViaCoveringModeR\fcoveringMode\"\xfb\x02\n" +
	"\x0fDrillProperties\x12>\n" +
	"\vstart_layer\x18\x01 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\n" +
	"startLayer\x12:\n" +
	"\tend_layer\x18\x02 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\bendLayer\x127\n" +
	"\bdiameter\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\bdiameter\x123\n" +
	"\x05shape\x18\x04 \x01(\x0e2\x1d.kiapi.board.types.DrillShapeR\x05shape\x12>\n" +
	"\x06capped\x18\x05 \x01(\x0e2&.kiapi.board.types.ViaDrillCappingModeR\x06capped\x12>\n" +
	"\x06filled\x18\x06 \x01(\x0e2&.kiapi.board.types.ViaDrillFillingModeR\x06filled\"\x88\x05\n" +
	"\bPadStack\x123\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1f.kiapi.board.types.PadStackTypeR\x04type\x125\n" +
	"\x06layers\x18\x02 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\x06layers\x128\n" +
	"\x05drill\x18\x03 \x01(\v2\".kiapi.board.types.DrillPropertiesR\x05drill\x12f\n" +
	"\x19unconnected_layer_removal\x18\x04 \x01(\x0e2*.kiapi.board.types.UnconnectedLayerRemovalR\x17unconnectedLayerRemoval\x12E\n" +
	"\rcopper_layers\x18\x05 \x03(\v2 .kiapi.board.types.PadStackLayerR\fcopperLayers\x12/\n" +
	"\x05angle\x18\x06 \x01(\v2\x19.kiapi.common.types.AngleR\x05angle\x12S\n" +
	"\x12front_outer_layers\x18\a \x01(\v2%.kiapi.board.types.PadStackOuterLayerR\x10frontOuterLayers\x12Q\n" +
	"\x11back_outer_layers\x18\b \x01(\v2%.kiapi.board.types.PadStackOuterLayerR\x0fbackOuterLayers\x12N\n" +
	"\rzone_settings\x18\t \x01(\v2).kiapi.board.types.ZoneConnectionSettingsR\fzoneSettings\"\xb5\x02\n" +
	"\x03Via\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\bposition\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x128\n" +
	"\tpad_stack\x18\x03 \x01(\v2\x1b.kiapi.board.types.PadStackR\bpadStack\x127\n" +
	"\x06locked\x18\x04 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x12(\n" +
	"\x03net\x18\x05 \x01(\v2\x16.kiapi.board.types.NetR\x03net\x12.\n" +
	"\x04type\x18\x06 \x01(\x0e2\x1a.kiapi.board.types.ViaTypeR\x04type\"\x8d\x02\n" +
	"\x11BoardGraphicShape\x126\n" +
	"\x05shape\x18\x01 \x01(\v2 .kiapi.common.types.GraphicShapeR\x05shape\x123\n" +
	"\x05layer\x18\x02 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12(\n" +
	"\x03net\x18\x03 \x01(\v2\x16.kiapi.board.types.NetR\x03net\x12(\n" +
	"\x02id\x18\x04 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\x06locked\x18\x05 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\"\xed\x01\n" +
	"\tBoardText\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x12,\n" +
	"\x04text\x18\x02 \x01(\v2\x18.kiapi.common.types.TextR\x04text\x123\n" +
	"\x05layer\x18\x03 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12\x1a\n" +
	"\bknockout\x18\x04 \x01(\bR\bknockout\x127\n" +
	"\x06locked\x18\x05 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\"\xdd\x01\n" +
	"\fBoardTextBox\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x125\n" +
	"\atextbox\x18\x02 \x01(\v2\x1b.kiapi.common.types.TextBoxR\atextbox\x123\n" +
	"\x05layer\x18\x03 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x127\n" +
	"\x06locked\x18\x04 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\"\xab\x01\n" +
	"\x14ThermalSpokeSettings\x122\n" +
	"\x05width\x18\x01 \x01(\v2\x1c.kiapi.common.types.DistanceR\x05width\x12/\n" +
	"\x05angle\x18\x02 \x01(\v2\x19.kiapi.common.types.AngleR\x05angle\x12.\n" +
	"\x03gap\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\x03gap\"\xa7\x03\n" +
	"\x03Pad\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\x06locked\x18\x02 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x12\x16\n" +
	"\x06number\x18\x03 \x01(\tR\x06number\x12(\n" +
	"\x03net\x18\x04 \x01(\v2\x16.kiapi.board.types.NetR\x03net\x12.\n" +
	"\x04type\x18\x05 \x01(\x0e2\x1a.kiapi.board.types.PadTypeR\x04type\x128\n" +
	"\tpad_stack\x18\x06 \x01(\v2\x1b.kiapi.board.types.PadStackR\bpadStack\x127\n" +
	"\bposition\x18\a \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x12X\n" +
	"\x19copper_clearance_override\x18\b \x01(\v2\x1c.kiapi.common.types.DistanceR\x17copperClearanceOverride\"\xf7\x02\n" +
	"\x11HatchFillSettings\x12:\n" +
	"\tthickness\x18\x01 \x01(\v2\x1c.kiapi.common.types.DistanceR\tthickness\x12.\n" +
	"\x03gap\x18\x02 \x01(\v2\x1c.kiapi.common.types.DistanceR\x03gap\x12;\n" +
	"\vorientation\x18\x03 \x01(\v2\x19.kiapi.common.types.AngleR\vorientation\x122\n" +
	"\x15hatch_smoothing_ratio\x18\x04 \x01(\x01R\x13hatchSmoothingRatio\x128\n" +
	"\x19hatch_hole_min_area_ratio\x18\x05 \x01(\x01R\x15hatchHoleMinAreaRatio\x12K\n" +
	"\vborder_mode\x18\x06 \x01(\x0e2*.kiapi.board.types.ZoneHatchFillBorderModeR\n" +
	"borderMode\"G\n" +
	"\x10TeardropSettings\x123\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1f.kiapi.board.types.TeardropTypeR\x04type\"\xc3\x04\n" +
	"\x12CopperZoneSettings\x12I\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2).kiapi.board.types.ZoneConnectionSettingsR\n" +
	"connection\x12:\n" +
	"\tclearance\x18\x02 \x01(\v2\x1c.kiapi.common.types.DistanceR\tclearance\x12A\n" +
	"\rmin_thickness\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\fminThickness\x12E\n" +
	"\visland_mode\x18\x04 \x01(\x0e2$.kiapi.board.types.IslandRemovalModeR\n" +
	"islandMode\x12&\n" +
	"\x0fmin_island_area\x18\x05 \x01(\x04R\rminIslandArea\x12<\n" +
	"\tfill_mode\x18\x06 \x01(\x0e2\x1f.kiapi.board.types.ZoneFillModeR\bfillMode\x12K\n" +
	"\x0ehatch_settings\x18\a \x01(\v2$.kiapi.board.types.HatchFillSettingsR\rhatchSettings\x12(\n" +
	"\x03net\x18\b \x01(\v2\x16.kiapi.board.types.NetR\x03net\x12?\n" +
	"\bteardrop\x18\t \x01(\v2#.kiapi.board.types.TeardropSettingsR\bteardrop\"\x8d\x03\n" +
	"\x10RuleAreaSettings\x12%\n" +
	"\x0ekeepout_copper\x18\x01 \x01(\bR\rkeepoutCopper\x12!\n" +
	"\fkeepout_vias\x18\x02 \x01(\bR\vkeepoutVias\x12%\n" +
	"\x0ekeepout_tracks\x18\x03 \x01(\bR\rkeepoutTracks\x12!\n" +
	"\fkeepout_pads\x18\x04 \x01(\bR\vkeepoutPads\x12-\n" +
	"\x12keepout_footprints\x18\x05 \x01(\bR\x11keepoutFootprints\x12+\n" +
	"\x11placement_enabled\x18\x06 \x01(\bR\x10placementEnabled\x12^\n" +
	"\x15placement_source_type\x18\a \x01(\x0e2*.kiapi.board.types.PlacementRuleSourceTypeR\x13placementSourceType\x12)\n" +
	"\x10placement_source\x18\b \x01(\tR\x0fplacementSource\"\x82\x01\n" +
	"\x12ZoneBorderSettings\x128\n" +
	"\x05style\x18\x01 \x01(\x0e2\".kiapi.board.types.ZoneBorderStyleR\x05style\x122\n" +
	"\x05pitch\x18\x02 \x01(\v2\x1c.kiapi.common.types.DistanceR\x05pitch\"~\n" +
	"\x12ZoneFilledPolygons\x123\n" +
	"\x05layer\x18\x01 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x123\n" +
	"\x06shapes\x18\x02 \x01(\v2\x1b.kiapi.common.types.PolySetR\x06shapes\"\x90\x01\n" +
	"\x13ZoneLayerProperties\x123\n" +
	"\x05layer\x18\x01 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12D\n" +
	"\x0fhatching_offset\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x0ehatchingOffset\"\xe5\x05\n" +
	"\x04Zone\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x12/\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.kiapi.board.types.ZoneTypeR\x04type\x125\n" +
	"\x06layers\x18\x03 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\x06layers\x125\n" +
	"\aoutline\x18\x04 \x01(\v2\x1b.kiapi.common.types.PolySetR\aoutline\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12P\n" +
	"\x0fcopper_settings\x18\x06 \x01(\v2%.kiapi.board.types.CopperZoneSettingsH\x00R\x0ecopperSettings\x12S\n" +
	"\x12rule_area_settings\x18\a \x01(\v2#.kiapi.board.types.RuleAreaSettingsH\x00R\x10ruleAreaSettings\x12\x1a\n" +
	"\bpriority\x18\b \x01(\rR\bpriority\x12\x16\n" +
	"\x06filled\x18\t \x01(\bR\x06filled\x12N\n" +
	"\x0ffilled_polygons\x18\n" +
	" \x03(\v2%.kiapi.board.types.ZoneFilledPolygonsR\x0efilledPolygons\x12=\n" +
	"\x06border\x18\v \x01(\v2%.kiapi.board.types.ZoneBorderSettingsR\x06border\x127\n" +
	"\x06locked\x18\f \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x12Q\n" +
	"\x10layer_properties\x18\r \x03(\v2&.kiapi.board.types.ZoneLayerPropertiesR\x0flayerPropertiesB\n" +
	"\n" +
	"\bsettings\"\xfd\x01\n" +
	"\x1aAlignedDimensionAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03end\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\x124\n" +
	"\x06height\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\x06height\x12G\n" +
	"\x10extension_height\x18\x04 \x01(\v2\x1c.kiapi.common.types.DistanceR\x0fextensionHeight\"\xc1\x02\n" +
	"\x1dOrthogonalDimensionAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03end\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\x124\n" +
	"\x06height\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\x06height\x12G\n" +
	"\x10extension_height\x18\x04 \x01(\v2\x1c.kiapi.common.types.DistanceR\x0fextensionHeight\x12?\n" +
	"\talignment\x18\x05 \x01(\x0e2!.kiapi.common.types.AxisAlignmentR\talignment\"\xd3\x01\n" +
	"\x19RadialDimensionAttributes\x123\n" +
	"\x06center\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x06center\x12>\n" +
	"\fradius_point\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\vradiusPoint\x12A\n" +
	"\rleader_length\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\fleaderLength\"\xcd\x01\n" +
	"\x19LeaderDimensionAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03end\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\x12N\n" +
	"\fborder_style\x18\x03 \x01(\x0e2+.kiapi.board.types.DimensionTextBorderStyleR\vborderStyle\"\x7f\n" +
	"\x19CenterDimensionAttributes\x123\n" +
	"\x06center\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x06center\x12-\n" +
	"\x03end\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\"\x81\v\n" +
	"\tDimension\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\x06locked\x18\x02 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x123\n" +
	"\x05layer\x18\x03 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x12,\n" +
	"\x04text\x18\x04 \x01(\v2\x18.kiapi.common.types.TextR\x04text\x12I\n" +
	"\aaligned\x18\x05 \x01(\v2-.kiapi.board.types.AlignedDimensionAttributesH\x00R\aaligned\x12R\n" +
	"\n" +
	"orthogonal\x18\x06 \x01(\v20.kiapi.board.types.OrthogonalDimensionAttributesH\x00R\n" +
	"orthogonal\x12F\n" +
	"\x06radial\x18\a \x01(\v2,.kiapi.board.types.RadialDimensionAttributesH\x00R\x06radial\x12F\n" +
	"\x06leader\x18\b \x01(\v2,.kiapi.board.types.LeaderDimensionAttributesH\x00R\x06leader\x12F\n" +
	"\x06center\x18\t \x01(\v2,.kiapi.board.types.CenterDimensionAttributesH\x00R\x06center\x122\n" +
	"\x15override_text_enabled\x18\n" +
	" \x01(\bR\x13overrideTextEnabled\x12#\n" +
	"\roverride_text\x18\v \x01(\tR\foverrideText\x12\x16\n" +
	"\x06prefix\x18\f \x01(\tR\x06prefix\x12\x16\n" +
	"\x06suffix\x18\r \x01(\tR\x06suffix\x124\n" +
	"\x04unit\x18\x0e \x01(\x0e2 .kiapi.board.types.DimensionUnitR\x04unit\x12G\n" +
	"\vunit_format\x18\x0f \x01(\x0e2&.kiapi.board.types.DimensionUnitFormatR\n" +
	"unitFormat\x12S\n" +
	"\x0farrow_direction\x18\x10 \x01(\x0e2*.kiapi.board.types.DimensionArrowDirectionR\x0earrowDirection\x12C\n" +
	"\tprecision\x18\x11 \x01(\x0e2%.kiapi.board.types.DimensionPrecisionR\tprecision\x128\n" +
	"\x18suppress_trailing_zeroes\x18\x12 \x01(\bR\x16suppressTrailingZeroes\x12C\n" +
	"\x0eline_thickness\x18\x13 \x01(\v2\x1c.kiapi.common.types.DistanceR\rlineThickness\x12?\n" +
	"\farrow_length\x18\x14 \x01(\v2\x1c.kiapi.common.types.DistanceR\varrowLength\x12G\n" +
	"\x10extension_offset\x18\x15 \x01(\v2\x1c.kiapi.common.types.DistanceR\x0fextensionOffset\x12M\n" +
	"\rtext_position\x18\x16 \x01(\x0e2(.kiapi.board.types.DimensionTextPositionR\ftextPosition\x12*\n" +
	"\x11keep_text_aligned\x18\x17 \x01(\bR\x0fkeepTextAlignedB\x11\n" +
	"\x0fdimension_style\"\x10\n" +
	"\x0eReferenceImage\"\a\n" +
	"\x05Group\"\x19\n" +
	"\aFieldId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x93\x01\n" +
	"\x05Field\x12*\n" +
	"\x02id\x18\x01 \x01(\v2\x1a.kiapi.board.types.FieldIdR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x120\n" +
	"\x04text\x18\x03 \x01(\v2\x1c.kiapi.board.types.BoardTextR\x04text\x12\x18\n" +
	"\avisible\x18\x04 \x01(\bR\avisible\"\xc5\x03\n" +
	"\x13FootprintAttributes\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1a\n" +
	"\bkeywords\x18\x02 \x01(\tR\bkeywords\x12(\n" +
	"\x10not_in_schematic\x18\x03 \x01(\bR\x0enotInSchematic\x12=\n" +
	"\x1bexclude_from_position_files\x18\x04 \x01(\bR\x18excludeFromPositionFiles\x12B\n" +
	"\x1eexclude_from_bill_of_materials\x18\x05 \x01(\bR\x1aexcludeFromBillOfMaterials\x12I\n" +
	"!exempt_from_courtyard_requirement\x18\x06 \x01(\bR\x1eexemptFromCourtyardRequirement\x12&\n" +
	"\x0fdo_not_populate\x18\a \x01(\bR\rdoNotPopulate\x12P\n" +
	"\x0emounting_style\x18\b \x01(\x0e2).kiapi.board.types.FootprintMountingStyleR\rmountingStyle\"1\n" +
	"\x10NetTieDefinition\x12\x1d\n" +
	"\n" +
	"pad_number\x18\x01 \x03(\tR\tpadNumber\"\xcd\x02\n" +
	"\x1cFootprintDesignRuleOverrides\x12G\n" +
	"\vsolder_mask\x18\x01 \x01(\v2&.kiapi.board.types.SolderMaskOverridesR\n" +
	"solderMask\x12J\n" +
	"\fsolder_paste\x18\x02 \x01(\v2'.kiapi.board.types.SolderPasteOverridesR\vsolderPaste\x12G\n" +
	"\x10copper_clearance\x18\x03 \x01(\v2\x1c.kiapi.common.types.DistanceR\x0fcopperClearance\x12O\n" +
	"\x0fzone_connection\x18\x04 \x01(\x0e2&.kiapi.board.types.ZoneConnectionStyleR\x0ezoneConnection\"\x86\x02\n" +
	"\x10Footprint3DModel\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x122\n" +
	"\x05scale\x18\x02 \x01(\v2\x1c.kiapi.common.types.Vector3DR\x05scale\x128\n" +
	"\brotation\x18\x03 \x01(\v2\x1c.kiapi.common.types.Vector3DR\brotation\x124\n" +
	"\x06offset\x18\x04 \x01(\v2\x1c.kiapi.common.types.Vector3DR\x06offset\x12\x18\n" +
	"\avisible\x18\x05 \x01(\bR\avisible\x12\x18\n" +
	"\aopacity\x18\x06 \x01(\x01R\aopacity\"*\n" +
	"\vJumperGroup\x12\x1b\n" +
	"\tpad_names\x18\x01 \x03(\tR\bpadNames\"\x89\x01\n" +
	"\x0eJumperSettings\x12?\n" +
	"\x1cduplicate_names_are_jumpered\x18\x01 \x01(\bR\x19duplicateNamesAreJumpered\x126\n" +
	"\x06groups\x18\x02 \x03(\v2\x1e.kiapi.board.types.JumperGroupR\x06groups\"\x85\x06\n" +
	"\tFootprint\x125\n" +
	"\x02id\x18\x01 \x01(\v2%.kiapi.common.types.LibraryIdentifierR\x02id\x123\n" +
	"\x06anchor\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x06anchor\x12F\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2&.kiapi.board.types.FootprintAttributesR\n" +
	"attributes\x12M\n" +
	"\toverrides\x18\x04 \x01(\v2/.kiapi.board.types.FootprintDesignRuleOverridesR\toverrides\x12>\n" +
	"\bnet_ties\x18\x05 \x03(\v2#.kiapi.board.types.NetTieDefinitionR\anetTies\x12D\n" +
	"\x0eprivate_layers\x18\x06 \x03(\x0e2\x1d.kiapi.board.types.BoardLayerR\rprivateLayers\x12A\n" +
	"\x0freference_field\x18\a \x01(\v2\x18.kiapi.board.types.FieldR\x0ereferenceField\x129\n" +
	"\vvalue_field\x18\b \x01(\v2\x18.kiapi.board.types.FieldR\n" +
	"valueField\x12A\n" +
	"\x0fdatasheet_field\x18\t \x01(\v2\x18.kiapi.board.types.FieldR\x0edatasheetField\x12E\n" +
	"\x11description_field\x18\n" +
	" \x01(\v2\x18.kiapi.board.types.FieldR\x10descriptionField\x12*\n" +
	"\x05items\x18\v \x03(\v2\x14.google.protobuf.AnyR\x05items\x12;\n" +
	"\ajumpers\x18\f \x01(\v2!.kiapi.board.types.JumperSettingsR\ajumpers\"\xbe\x06\n" +
	"\x11FootprintInstance\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\bposition\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x12;\n" +
	"\vorientation\x18\x03 \x01(\v2\x19.kiapi.common.types.AngleR\vorientation\x123\n" +
	"\x05layer\x18\x04 \x01(\x0e2\x1d.kiapi.board.types.BoardLayerR\x05layer\x127\n" +
	"\x06locked\x18\x05 \x01(\x0e2\x1f.kiapi.common.types.LockedStateR\x06locked\x12<\n" +
	"\n" +
	"definition\x18\x06 \x01(\v2\x1c.kiapi.board.types.FootprintR\n" +
	"definition\x12A\n" +
	"\x0freference_field\x18\a \x01(\v2\x18.kiapi.board.types.FieldR\x0ereferenceField\x129\n" +
	"\vvalue_field\x18\b \x01(\v2\x18.kiapi.board.types.FieldR\n" +
	"valueField\x12A\n" +
	"\x0fdatasheet_field\x18\t \x01(\v2\x18.kiapi.board.types.FieldR\x0edatasheetField\x12E\n" +
	"\x11description_field\x18\n" +
	" \x01(\v2\x18.kiapi.board.types.FieldR\x10descriptionField\x12F\n" +
	"\n" +
	"attributes\x18\v \x01(\v2&.kiapi.board.types.FootprintAttributesR\n" +
	"attributes\x12M\n" +
	"\toverrides\x18\f \x01(\v2/.kiapi.board.types.FootprintDesignRuleOverridesR\toverrides\x12>\n" +
	"\vsymbol_path\x18\r \x01(\v2\x1d.kiapi.common.types.SheetPathR\n" +
	"symbolPath*\xab\f\n" +
	"\n" +
	"BoardLayer\x12\x0e\n" +
	"\n" +
	"BL_UNKNOWN\x10\x00\x12\x10\n" +
	"\fBL_UNDEFINED\x10\x01\x12\x11\n" +
	"\rBL_UNSELECTED\x10\x02\x12\v\n" +
	"\aBL_F_Cu\x10\x03\x12\r\n" +
	"\tBL_In1_Cu\x10\x04\x12\r\n" +
	"\tBL_In2_Cu\x10\x05\x12\r\n" +
	"\tBL_In3_Cu\x10\x06\x12\r\n" +
	"\tBL_In4_Cu\x10\a\x12\r\n" +
	"\tBL_In5_Cu\x10\b\x12\r\n" +
	"\tBL_In6_Cu\x10\t\x12\r\n" +
	"\tBL_In7_Cu\x10\n" +
	"\x12\r\n" +
	"\tBL_In8_Cu\x10\v\x12\r\n" +
	"\tBL_In9_Cu\x10\f\x12\x0e\n" +
	"\n" +
	"BL_In10_Cu\x10\r\x12\x0e\n" +
	"\n" +
	"BL_In11_Cu\x10\x0e\x12\x0e\n" +
	"\n" +
	"BL_In12_Cu\x10\x0f\x12\x0e\n" +
	"\n" +
	"BL_In13_Cu\x10\x10\x12\x0e\n" +
	"\n" +
	"BL_In14_Cu\x10\x11\x12\x0e\n" +
	"\n" +
	"BL_In15_Cu\x10\x12\x12\x0e\n" +
	"\n" +
	"BL_In16_Cu\x10\x13\x12\x0e\n" +
	"\n" +
	"BL_In17_Cu\x10\x14\x12\x0e\n" +
	"\n" +
	"BL_In18_Cu\x10\x15\x12\x0e\n" +
	"\n" +
	"BL_In19_Cu\x10\x16\x12\x0e\n" +
	"\n" +
	"BL_In20_Cu\x10\x17\x12\x0e\n" +
	"\n" +
	"BL_In21_Cu\x10\x18\x12\x0e\n" +
	"\n" +
	"BL_In22_Cu\x10\x19\x12\x0e\n" +
	"\n" +
	"BL_In23_Cu\x10\x1a\x12\x0e\n" +
	"\n" +
	"BL_In24_Cu\x10\x1b\x12\x0e\n" +
	"\n" +
	"BL_In25_Cu\x10\x1c\x12\x0e\n" +
	"\n" +
	"BL_In26_Cu\x10\x1d\x12\x0e\n" +
	"\n" +
	"BL_In27_Cu\x10\x1e\x12\x0e\n" +
	"\n" +
	"BL_In28_Cu\x10\x1f\x12\x0e\n" +
	"\n" +
	"BL_In29_Cu\x10 \x12\x0e\n" +
	"\n" +
	"BL_In30_Cu\x10!\x12\v\n" +
	"\aBL_B_Cu\x10\"\x12\x0e\n" +
	"\n" +
	"BL_B_Adhes\x10#\x12\x0e\n" +
	"\n" +
	"BL_F_Adhes\x10$\x12\x0e\n" +
	"\n" +
	"BL_B_Paste\x10%\x12\x0e\n" +
	"\n" +
	"BL_F_Paste\x10&\x12\x0e\n" +
	"\n" +
	"BL_B_SilkS\x10'\x12\x0e\n" +
	"\n" +
	"BL_F_SilkS\x10(\x12\r\n" +
	"\tBL_B_Mask\x10)\x12\r\n" +
	"\tBL_F_Mask\x10*\x12\x10\n" +
	"\fBL_Dwgs_User\x10+\x12\x10\n" +
	"\fBL_Cmts_User\x10,\x12\x10\n" +
	"\fBL_Eco1_User\x10-\x12\x10\n" +
	"\fBL_Eco2_User\x10.\x12\x10\n" +
	"\fBL_Edge_Cuts\x10/\x12\r\n" +
	"\tBL_Margin\x100\x12\x0e\n" +
	"\n" +
	"BL_B_CrtYd\x101\x12\x0e\n" +
	"\n" +
	"BL_F_CrtYd\x102\x12\f\n" +
	"\bBL_B_Fab\x103\x12\f\n" +
	"\bBL_F_Fab\x104\x12\r\n" +
	"\tBL_User_1\x105\x12\r\n" +
	"\tBL_User_2\x106\x12\r\n" +
	"\tBL_User_3\x107\x12\r\n" +
	"\tBL_User_4\x108\x12\r\n" +
	"\tBL_User_5\x109\x12\r\n" +
	"\tBL_User_6\x10:\x12\r\n" +
	"\tBL_User_7\x10;\x12\r\n" +
	"\tBL_User_8\x10<\x12\r\n" +
	"\tBL_User_9\x10=\x12\r\n" +
	"\tBL_Rescue\x10>\x12\x0e\n" +
	"\n" +
	"BL_User_10\x10?\x12\x0e\n" +
	"\n" +
	"BL_User_11\x10@\x12\x0e\n" +
	"\n" +
	"BL_User_12\x10A\x12\x0e\n" +
	"\n" +
	"BL_User_13\x10B\x12\x0e\n" +
	"\n" +
	"BL_User_14\x10C\x12\x0e\n" +
	"\n" +
	"BL_User_15\x10D\x12\x0e\n" +
	"\n" +
	"BL_User_16\x10E\x12\x0e\n" +
	"\n" +
	"BL_User_17\x10F\x12\x0e\n" +
	"\n" +
	"BL_User_18\x10G\x12\x0e\n" +
	"\n" +
	"BL_User_19\x10H\x12\x0e\n" +
	"\n" +
	"BL_User_20\x10I\x12\x0e\n" +
	"\n" +
	"BL_User_21\x10J\x12\x0e\n" +
	"\n" +
	"BL_User_22\x10K\x12\x0e\n" +
	"\n" +
	"BL_User_23\x10L\x12\x0e\n" +
	"\n" +
	"BL_User_24\x10M\x12\x0e\n" +
	"\n" +
	"BL_User_25\x10N\x12\x0e\n" +
	"\n" +
	"BL_User_26\x10O\x12\x0e\n" +
	"\n" +
	"BL_User_27\x10P\x12\x0e\n" +
	"\n" +
	"BL_User_28\x10Q\x12\x0e\n" +
	"\n" +
	"BL_User_29\x10R\x12\x0e\n" +
	"\n" +
	"BL_User_30\x10S\x12\x0e\n" +
	"\n" +
	"BL_User_31\x10T\x12\x0e\n" +
	"\n" +
	"BL_User_32\x10U\x12\x0e\n" +
	"\n" +
	"BL_User_33\x10V\x12\x0e\n" +
	"\n" +
	"BL_User_34\x10W\x12\x0e\n" +
	"\n" +
	"BL_User_35\x10X\x12\x0e\n" +
	"\n" +
	"BL_User_36\x10Y\x12\x0e\n" +
	"\n" +
	"BL_User_37\x10Z\x12\x0e\n" +
	"\n" +
	"BL_User_38\x10[\x12\x0e\n" +
	"\n" +
	"BL_User_39\x10\\\x12\x0e\n" +
	"\n" +
	"BL_User_40\x10]\x12\x0e\n" +
	"\n" +
	"BL_User_41\x10^\x12\x0e\n" +
	"\n" +
	"BL_User_42\x10_\x12\x0e\n" +
	"\n" +
	"BL_User_43\x10`\x12\x0e\n" +
	"\n" +
	"BL_User_44\x10a\x12\x0e\n" +
	"\n" +
	"BL_User_45\x10b*Y\n" +
	"\fPadStackType\x12\x0f\n" +
	"\vPST_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"PST_NORMAL\x10\x01\x12\x18\n" +
	"\x14PST_FRONT_INNER_BACK\x10\x02\x12\x0e\n" +
	"\n" +
	"PST_CUSTOM\x10\x03*m\n" +
	"\x17UnconnectedLayerRemoval\x12\x0f\n" +
	"\vULR_UNKNOWN\x10\x00\x12\f\n" +
	"\bULR_KEEP\x10\x01\x12\x0e\n" +
	"\n" +
	"ULR_REMOVE\x10\x02\x12#\n" +
	"\x1fULR_REMOVE_EXCEPT_START_AND_END\x10\x03*\x9e\x01\n" +
	"\rPadStackShape\x12\x0f\n" +
	"\vPSS_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"PSS_CIRCLE\x10\x01\x12\x11\n" +
	"\rPSS_RECTANGLE\x10\x02\x12\f\n" +
	"\bPSS_OVAL\x10\x03\x12\x11\n" +
	"\rPSS_TRAPEZOID\x10\x04\x12\x11\n" +
	"\rPSS_ROUNDRECT\x10\x05\x12\x15\n" +
	"\x11PSS_CHAMFEREDRECT\x10\x06\x12\x0e\n" +
	"\n" +
	"PSS_CUSTOM\x10\a*{\n" +
	"\x13ZoneConnectionStyle\x12\x0f\n" +
	"\vZCS_UNKNOWN\x10\x00\x12\x11\n" +
	"\rZCS_INHERITED\x10\x01\x12\f\n" +
	"\bZCS_NONE\x10\x02\x12\x0f\n" +
	"\vZCS_THERMAL\x10\x03\x12\f\n" +
	"\bZCS_FULL\x10\x04\x12\x13\n" +
	"\x0fZCS_PTH_THERMAL\x10\x05*^\n" +
	"\x0eSolderMaskMode\x12\x0f\n" +
	"\vSMM_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"SMM_MASKED\x10\x01\x12\x10\n" +
	"\fSMM_UNMASKED\x10\x02\x12\x19\n" +
	"\x15SMM_FROM_DESIGN_RULES\x10\x03*a\n" +
	"\x0fViaCoveringMode\x12\x0f\n" +
	"\vVCM_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vVCM_COVERED\x10\x01\x12\x11\n" +
	"\rVCM_UNCOVERED\x10\x02\x12\x19\n" +
	"\x15VCM_FROM_DESIGN_RULES\x10\x03*a\n" +
	"\x0fViaPluggingMode\x12\x0f\n" +
	"\vVPM_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vVPM_PLUGGED\x10\x01\x12\x11\n" +
	"\rVPM_UNPLUGGED\x10\x02\x12\x19\n" +
	"\x15VPM_FROM_DESIGN_RULES\x10\x03*^\n" +
	"\x0fSolderPasteMode\x12\x0f\n" +
	"\vSPM_UNKNOWN\x10\x00\x12\r\n" +
	"\tSPM_PASTE\x10\x01\x12\x10\n" +
	"\fSPM_NO_PASTE\x10\x02\x12\x19\n" +
	"\x15SPM_FROM_DESIGN_RULES\x10\x03*L\n" +
	"\n" +
	"DrillShape\x12\x0e\n" +
	"\n" +
	"DS_UNKNOWN\x10\x00\x12\r\n" +
	"\tDS_CIRCLE\x10\x01\x12\r\n" +
	"\tDS_OBLONG\x10\x02\x12\x10\n" +
	"\fDS_UNDEFINED\x10\x03*g\n" +
	"\x13ViaDrillCappingMode\x12\x10\n" +
	"\fVDCM_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vVDCM_CAPPED\x10\x01\x12\x11\n" +
	"\rVDCM_UNCAPPED\x10\x02\x12\x1a\n" +
	"\x16VDCM_FROM_DESIGN_RULES\x10\x03*g\n" +
	"\x13ViaDrillFillingMode\x12\x10\n" +
	"\fVDFM_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vVDFM_FILLED\x10\x01\x12\x11\n" +
	"\rVDFM_UNFILLED\x10\x02\x12\x1a\n" +
	"\x16VDFM_FROM_DESIGN_RULES\x10\x03*L\n" +
	"\aViaType\x12\x0e\n" +
	"\n" +
	"VT_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"VT_THROUGH\x10\x01\x12\x13\n" +
	"\x0fVT_BLIND_BURIED\x10\x02\x12\f\n" +
	"\bVT_MICRO\x10\x03*U\n" +
	"\aPadType\x12\x0e\n" +
	"\n" +
	"PT_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06PT_PTH\x10\x01\x12\n" +
	"\n" +
	"\x06PT_SMD\x10\x02\x12\x15\n" +
	"\x11PT_EDGE_CONNECTOR\x10\x03\x12\v\n" +
	"\aPT_NPTH\x10\x04*Y\n" +
	"\x1eCustomPadShapeZoneFillStrategy\x12\x10\n" +
	"\fCPSZ_UNKNOWN\x10\x00\x12\x10\n" +
	"\fCPSZ_OUTLINE\x10\x01\x12\x13\n" +
	"\x0fCPSZ_CONVEXHULL\x10\x02*^\n" +
	"\bZoneType\x12\x0e\n" +
	"\n" +
	"ZT_UNKNOWN\x10\x00\x12\r\n" +
	"\tZT_COPPER\x10\x01\x12\x10\n" +
	"\fZT_GRAPHICAL\x10\x02\x12\x10\n" +
	"\fZT_RULE_AREA\x10\x03\x12\x0f\n" +
	"\vZT_TEARDROP\x10\x04*f\n" +
	"\fTeardropType\x12\x0f\n" +
	"\vTDT_UNKNOWN\x10\x00\x12\f\n" +
	"\bTDT_NONE\x10\x01\x12\x13\n" +
	"\x0fTDT_UNSPECIFIED\x10\x02\x12\x0f\n" +
	"\vTDT_VIA_PAD\x10\x03\x12\x11\n" +
	"\rTDT_TRACK_END\x10\x04*Q\n" +
	"\x11IslandRemovalMode\x12\x0f\n" +
	"\vIRM_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"IRM_ALWAYS\x10\x01\x12\r\n" +
	"\tIRM_NEVER\x10\x02\x12\f\n" +
	"\bIRM_AREA\x10\x03*?\n" +
	"\fZoneFillMode\x12\x0f\n" +
	"\vZFM_UNKNOWN\x10\x00\x12\r\n" +
	"\tZFM_SOLID\x10\x01\x12\x0f\n" +
	"\vZFM_HATCHED\x10\x02*n\n" +
	"\x12ZoneHatchSmoothing\x12\x0f\n" +
	"\vZHS_UNKNOWN\x10\x00\x12\f\n" +
	"\bZHS_NONE\x10\x01\x12\x0e\n" +
	"\n" +
	"ZHS_FILLET\x10\x02\x12\x13\n" +
	"\x0fZHS_ARC_LOW_DEF\x10\x03\x12\x14\n" +
	"\x10ZHS_ARC_HIGH_DEF\x10\x04*m\n" +
	"\x17ZoneHatchFillBorderMode\x12\x11\n" +
	"\rZHFBM_UNKNOWN\x10\x00\x12 \n" +
	"\x1cZHFBM_USE_MIN_ZONE_THICKNESS\x10\x01\x12\x1d\n" +
	"\x19ZHFBM_USE_HATCH_THICKNESS\x10\x02*j\n" +
	"\x17PlacementRuleSourceType\x12\x10\n" +
	"\fPRST_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fPRST_SHEET_NAME\x10\x01\x12\x18\n" +
	"\x14PRST_COMPONENT_CLASS\x10\x02\x12\x0e\n" +
	"\n" +
	"PRST_GROUP\x10\x03*r\n" +
	"\x0fZoneBorderStyle\x12\x0f\n" +
	"\vZBS_UNKNOWN\x10\x00\x12\r\n" +
	"\tZBS_SOLID\x10\x01\x12\x15\n" +
	"\x11ZBS_DIAGONAL_FULL\x10\x02\x12\x15\n" +
	"\x11ZBS_DIAGONAL_EDGE\x10\x03\x12\x11\n" +
	"\rZBS_INVISIBLE\x10\x04*t\n" +
	"\x18DimensionTextBorderStyle\x12\x10\n" +
	"\fDTBS_UNKNOWN\x10\x00\x12\r\n" +
	"\tDTBS_NONE\x10\x01\x12\x12\n" +
	"\x0eDTBS_RECTANGLE\x10\x02\x12\x0f\n" +
	"\vDTBS_CIRCLE\x10\x03\x12\x12\n" +
	"\x0eDTBS_ROUNDRECT\x10\x04*d\n" +
	"\x13DimensionUnitFormat\x12\x0f\n" +
	"\vDUF_UNKNOWN\x10\x00\x12\x11\n" +
	"\rDUF_NO_SUFFIX\x10\x01\x12\x13\n" +
	"\x0fDUF_BARE_SUFFIX\x10\x02\x12\x14\n" +
	"\x10DUF_PAREN_SUFFIX\x10\x03*K\n" +
	"\x17DimensionArrowDirection\x12\x0f\n" +
	"\vDAD_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"DAD_INWARD\x10\x01\x12\x0f\n" +
	"\vDAD_OUTWARD\x10\x02*\xd4\x01\n" +
	"\x12DimensionPrecision\x12\x0e\n" +
	"\n" +
	"DP_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"DP_FIXED_0\x10\x01\x12\x0e\n" +
	"\n" +
	"DP_FIXED_1\x10\x02\x12\x0e\n" +
	"\n" +
	"DP_FIXED_2\x10\x03\x12\x0e\n" +
	"\n" +
	"DP_FIXED_3\x10\x04\x12\x0e\n" +
	"\n" +
	"DP_FIXED_4\x10\x05\x12\x0e\n" +
	"\n" +
	"DP_FIXED_5\x10\x06\x12\x12\n" +
	"\x0eDP_SCALED_IN_2\x10\a\x12\x12\n" +
	"\x0eDP_SCALED_IN_3\x10\b\x12\x12\n" +
	"\x0eDP_SCALED_IN_4\x10\t\x12\x12\n" +
	"\x0eDP_SCALED_IN_5\x10\n" +
	"*Y\n" +
	"\x15DimensionTextPosition\x12\x0f\n" +
	"\vDTP_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vDTP_OUTSIDE\x10\x01\x12\x0e\n" +
	"\n" +
	"DTP_INLINE\x10\x02\x12\x0e\n" +
	"\n" +
	"DTP_MANUAL\x10\x03*a\n" +
	"\rDimensionUnit\x12\x0e\n" +
	"\n" +
	"DU_UNKNOWN\x10\x00\x12\r\n" +
	"\tDU_INCHES\x10\x01\x12\v\n" +
	"\aDU_MILS\x10\x02\x12\x12\n" +
	"\x0eDU_MILLIMETERS\x10\x03\x12\x10\n" +
	"\fDU_AUTOMATIC\x10\x04*a\n" +
	"\x16FootprintMountingStyle\x12\x0f\n" +
	"\vFMS_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10FMS_THROUGH_HOLE\x10\x01\x12\v\n" +
	"\aFMS_SMD\x10\x02\x12\x13\n" +
	"\x0fFMS_UNSPECIFIED\x10\x03B\x1eZ\x1cgithub.com/kicad/proto/boardb\x06proto3"

var (
	file_board_board_types_proto_rawDescOnce sync.Once
	file_board_board_types_proto_rawDescData []byte
)

func file_board_board_types_proto_rawDescGZIP() []byte {
	file_board_board_types_proto_rawDescOnce.Do(func() {
		file_board_board_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_board_board_types_proto_rawDesc), len(file_board_board_types_proto_rawDesc)))
	})
	return file_board_board_types_proto_rawDescData
}

var file_board_board_types_proto_enumTypes = make([]protoimpl.EnumInfo, 30)
var file_board_board_types_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_board_board_types_proto_goTypes = []any{
	(BoardLayer)(0),                       // 0: kiapi.board.types.BoardLayer
	(PadStackType)(0),                     // 1: kiapi.board.types.PadStackType
	(UnconnectedLayerRemoval)(0),          // 2: kiapi.board.types.UnconnectedLayerRemoval
	(PadStackShape)(0),                    // 3: kiapi.board.types.PadStackShape
	(ZoneConnectionStyle)(0),              // 4: kiapi.board.types.ZoneConnectionStyle
	(SolderMaskMode)(0),                   // 5: kiapi.board.types.SolderMaskMode
	(ViaCoveringMode)(0),                  // 6: kiapi.board.types.ViaCoveringMode
	(ViaPluggingMode)(0),                  // 7: kiapi.board.types.ViaPluggingMode
	(SolderPasteMode)(0),                  // 8: kiapi.board.types.SolderPasteMode
	(DrillShape)(0),                       // 9: kiapi.board.types.DrillShape
	(ViaDrillCappingMode)(0),              // 10: kiapi.board.types.ViaDrillCappingMode
	(ViaDrillFillingMode)(0),              // 11: kiapi.board.types.ViaDrillFillingMode
	(ViaType)(0),                          // 12: kiapi.board.types.ViaType
	(PadType)(0),                          // 13: kiapi.board.types.PadType
	(CustomPadShapeZoneFillStrategy)(0),   // 14: kiapi.board.types.CustomPadShapeZoneFillStrategy
	(ZoneType)(0),                         // 15: kiapi.board.types.ZoneType
	(TeardropType)(0),                     // 16: kiapi.board.types.TeardropType
	(IslandRemovalMode)(0),                // 17: kiapi.board.types.IslandRemovalMode
	(ZoneFillMode)(0),                     // 18: kiapi.board.types.ZoneFillMode
	(ZoneHatchSmoothing)(0),               // 19: kiapi.board.types.ZoneHatchSmoothing
	(ZoneHatchFillBorderMode)(0),          // 20: kiapi.board.types.ZoneHatchFillBorderMode
	(PlacementRuleSourceType)(0),          // 21: kiapi.board.types.PlacementRuleSourceType
	(ZoneBorderStyle)(0),                  // 22: kiapi.board.types.ZoneBorderStyle
	(DimensionTextBorderStyle)(0),         // 23: kiapi.board.types.DimensionTextBorderStyle
	(DimensionUnitFormat)(0),              // 24: kiapi.board.types.DimensionUnitFormat
	(DimensionArrowDirection)(0),          // 25: kiapi.board.types.DimensionArrowDirection
	(DimensionPrecision)(0),               // 26: kiapi.board.types.DimensionPrecision
	(DimensionTextPosition)(0),            // 27: kiapi.board.types.DimensionTextPosition
	(DimensionUnit)(0),                    // 28: kiapi.board.types.DimensionUnit
	(FootprintMountingStyle)(0),           // 29: kiapi.board.types.FootprintMountingStyle
	(*NetCode)(nil),                       // 30: kiapi.board.types.NetCode
	(*Net)(nil),                           // 31: kiapi.board.types.Net
	(*Track)(nil),                         // 32: kiapi.board.types.Track
	(*Arc)(nil),                           // 33: kiapi.board.types.Arc
	(*ChamferedRectCorners)(nil),          // 34: kiapi.board.types.ChamferedRectCorners
	(*ZoneConnectionSettings)(nil),        // 35: kiapi.board.types.ZoneConnectionSettings
	(*SolderMaskOverrides)(nil),           // 36: kiapi.board.types.SolderMaskOverrides
	(*SolderPasteOverrides)(nil),          // 37: kiapi.board.types.SolderPasteOverrides
	(*PadStackLayer)(nil),                 // 38: kiapi.board.types.PadStackLayer
	(*PadStackOuterLayer)(nil),            // 39: kiapi.board.types.PadStackOuterLayer
	(*DrillProperties)(nil),               // 40: kiapi.board.types.DrillProperties
	(*PadStack)(nil),                      // 41: kiapi.board.types.PadStack
	(*Via)(nil),                           // 42: kiapi.board.types.Via
	(*BoardGraphicShape)(nil),             // 43: kiapi.board.types.BoardGraphicShape
	(*BoardText)(nil),                     // 44: kiapi.board.types.BoardText
	(*BoardTextBox)(nil),                  // 45: kiapi.board.types.BoardTextBox
	(*ThermalSpokeSettings)(nil),          // 46: kiapi.board.types.ThermalSpokeSettings
	(*Pad)(nil),                           // 47: kiapi.board.types.Pad
	(*HatchFillSettings)(nil),             // 48: kiapi.board.types.HatchFillSettings
	(*TeardropSettings)(nil),              // 49: kiapi.board.types.TeardropSettings
	(*CopperZoneSettings)(nil),            // 50: kiapi.board.types.CopperZoneSettings
	(*RuleAreaSettings)(nil),              // 51: kiapi.board.types.RuleAreaSettings
	(*ZoneBorderSettings)(nil),            // 52: kiapi.board.types.ZoneBorderSettings
	(*ZoneFilledPolygons)(nil),            // 53: kiapi.board.types.ZoneFilledPolygons
	(*ZoneLayerProperties)(nil),           // 54: kiapi.board.types.ZoneLayerProperties
	(*Zone)(nil),                          // 55: kiapi.board.types.Zone
	(*AlignedDimensionAttributes)(nil),    // 56: kiapi.board.types.AlignedDimensionAttributes
	(*OrthogonalDimensionAttributes)(nil), // 57: kiapi.board.types.OrthogonalDimensionAttributes
	(*RadialDimensionAttributes)(nil),     // 58: kiapi.board.types.RadialDimensionAttributes
	(*LeaderDimensionAttributes)(nil),     // 59: kiapi.board.types.LeaderDimensionAttributes
	(*CenterDimensionAttributes)(nil),     // 60: kiapi.board.types.CenterDimensionAttributes
	(*Dimension)(nil),                     // 61: kiapi.board.types.Dimension
	(*ReferenceImage)(nil),                // 62: kiapi.board.types.ReferenceImage
	(*Group)(nil),                         // 63: kiapi.board.types.Group
	(*FieldId)(nil),                       // 64: kiapi.board.types.FieldId
	(*Field)(nil),                         // 65: kiapi.board.types.Field
	(*FootprintAttributes)(nil),           // 66: kiapi.board.types.FootprintAttributes
	(*NetTieDefinition)(nil),              // 67: kiapi.board.types.NetTieDefinition
	(*FootprintDesignRuleOverrides)(nil),  // 68: kiapi.board.types.FootprintDesignRuleOverrides
	(*Footprint3DModel)(nil),              // 69: kiapi.board.types.Footprint3DModel
	(*JumperGroup)(nil),                   // 70: kiapi.board.types.JumperGroup
	(*JumperSettings)(nil),                // 71: kiapi.board.types.JumperSettings
	(*Footprint)(nil),                     // 72: kiapi.board.types.Footprint
	(*FootprintInstance)(nil),             // 73: kiapi.board.types.FootprintInstance
	(*types.KIID)(nil),                    // 74: kiapi.common.types.KIID
	(*types.Vector2)(nil),                 // 75: kiapi.common.types.Vector2
	(*types.Distance)(nil),                // 76: kiapi.common.types.Distance
	(types.LockedState)(0),                // 77: kiapi.common.types.LockedState
	(*types.Ratio)(nil),                   // 78: kiapi.common.types.Ratio
	(*types.Angle)(nil),                   // 79: kiapi.common.types.Angle
	(*types.GraphicShape)(nil),            // 80: kiapi.common.types.GraphicShape
	(*types.Text)(nil),                    // 81: kiapi.common.types.Text
	(*types.TextBox)(nil),                 // 82: kiapi.common.types.TextBox
	(*types.PolySet)(nil),                 // 83: kiapi.common.types.PolySet
	(types.AxisAlignment)(0),              // 84: kiapi.common.types.AxisAlignment
	(*types.Vector3D)(nil),                // 85: kiapi.common.types.Vector3D
	(*types.LibraryIdentifier)(nil),       // 86: kiapi.common.types.LibraryIdentifier
	(*anypb.Any)(nil),                     // 87: google.protobuf.Any
	(*types.SheetPath)(nil),               // 88: kiapi.common.types.SheetPath
}
var file_board_board_types_proto_depIdxs = []int32{
	30,  // 0: kiapi.board.types.Net.code:type_name -> kiapi.board.types.NetCode
	74,  // 1: kiapi.board.types.Track.id:type_name -> kiapi.common.types.KIID
	75,  // 2: kiapi.board.types.Track.start:type_name -> kiapi.common.types.Vector2
	75,  // 3: kiapi.board.types.Track.end:type_name -> kiapi.common.types.Vector2
	76,  // 4: kiapi.board.types.Track.width:type_name -> kiapi.common.types.Distance
	77,  // 5: kiapi.board.types.Track.locked:type_name -> kiapi.common.types.LockedState
	0,   // 6: kiapi.board.types.Track.layer:type_name -> kiapi.board.types.BoardLayer
	31,  // 7: kiapi.board.types.Track.net:type_name -> kiapi.board.types.Net
	74,  // 8: kiapi.board.types.Arc.id:type_name -> kiapi.common.types.KIID
	75,  // 9: kiapi.board.types.Arc.start:type_name -> kiapi.common.types.Vector2
	75,  // 10: kiapi.board.types.Arc.mid:type_name -> kiapi.common.types.Vector2
	75,  // 11: kiapi.board.types.Arc.end:type_name -> kiapi.common.types.Vector2
	76,  // 12: kiapi.board.types.Arc.width:type_name -> kiapi.common.types.Distance
	77,  // 13: kiapi.board.types.Arc.locked:type_name -> kiapi.common.types.LockedState
	0,   // 14: kiapi.board.types.Arc.layer:type_name -> kiapi.board.types.BoardLayer
	31,  // 15: kiapi.board.types.Arc.net:type_name -> kiapi.board.types.Net
	4,   // 16: kiapi.board.types.ZoneConnectionSettings.zone_connection:type_name -> kiapi.board.types.ZoneConnectionStyle
	46,  // 17: kiapi.board.types.ZoneConnectionSettings.thermal_spokes:type_name -> kiapi.board.types.ThermalSpokeSettings
	76,  // 18: kiapi.board.types.SolderMaskOverrides.solder_mask_margin:type_name -> kiapi.common.types.Distance
	76,  // 19: kiapi.board.types.SolderPasteOverrides.solder_paste_margin:type_name -> kiapi.common.types.Distance
	78,  // 20: kiapi.board.types.SolderPasteOverrides.solder_paste_margin_ratio:type_name -> kiapi.common.types.Ratio
	0,   // 21: kiapi.board.types.PadStackLayer.layer:type_name -> kiapi.board.types.BoardLayer
	3,   // 22: kiapi.board.types.PadStackLayer.shape:type_name -> kiapi.board.types.PadStackShape
	75,  // 23: kiapi.board.types.PadStackLayer.size:type_name -> kiapi.common.types.Vector2
	34,  // 24: kiapi.board.types.PadStackLayer.chamfered_corners:type_name -> kiapi.board.types.ChamferedRectCorners
	43,  // 25: kiapi.board.types.PadStackLayer.custom_shapes:type_name -> kiapi.board.types.BoardGraphicShape
	3,   // 26: kiapi.board.types.PadStackLayer.custom_anchor_shape:type_name -> kiapi.board.types.PadStackShape
	35,  // 27: kiapi.board.types.PadStackLayer.zone_settings:type_name -> kiapi.board.types.ZoneConnectionSettings
	75,  // 28: kiapi.board.types.PadStackLayer.trapezoid_delta:type_name -> kiapi.common.types.Vector2
	75,  // 29: kiapi.board.types.PadStackLayer.offset:type_name -> kiapi.common.types.Vector2
	5,   // 30: kiapi.board.types.PadStackOuterLayer.solder_mask_mode:type_name -> kiapi.board.types.SolderMaskMode
	8,   // 31: kiapi.board.types.PadStackOuterLayer.solder_paste_mode:type_name -> kiapi.board.types.SolderPasteMode
	36,  // 32: kiapi.board.types.PadStackOuterLayer.solder_mask_settings:type_name -> kiapi.board.types.SolderMaskOverrides
	37,  // 33: kiapi.board.types.PadStackOuterLayer.solder_paste_settings:type_name -> kiapi.board.types.SolderPasteOverrides
	7,   // 34: kiapi.board.types.PadStackOuterLayer.plugging_mode:type_name -> kiapi.board.types.ViaPluggingMode
	6,   // 35: kiapi.board.types.PadStackOuterLayer.covering_mode:type_name -> kiapi.board.types.ViaCoveringMode
	0,   // 36: kiapi.board.types.DrillProperties.start_layer:type_name -> kiapi.board.types.BoardLayer
	0,   // 37: kiapi.board.types.DrillProperties.end_layer:type_name -> kiapi.board.types.BoardLayer
	75,  // 38: kiapi.board.types.DrillProperties.diameter:type_name -> kiapi.common.types.Vector2
	9,   // 39: kiapi.board.types.DrillProperties.shape:type_name -> kiapi.board.types.DrillShape
	10,  // 40: kiapi.board.types.DrillProperties.capped:type_name -> kiapi.board.types.ViaDrillCappingMode
	11,  // 41: kiapi.board.types.DrillProperties.filled:type_name -> kiapi.board.types.ViaDrillFillingMode
	1,   // 42: kiapi.board.types.PadStack.type:type_name -> kiapi.board.types.PadStackType
	0,   // 43: kiapi.board.types.PadStack.layers:type_name -> kiapi.board.types.BoardLayer
	40,  // 44: kiapi.board.types.PadStack.drill:type_name -> kiapi.board.types.DrillProperties
	2,   // 45: kiapi.board.types.PadStack.unconnected_layer_removal:type_name -> kiapi.board.types.UnconnectedLayerRemoval
	38,  // 46: kiapi.board.types.PadStack.copper_layers:type_name -> kiapi.board.types.PadStackLayer
	79,  // 47: kiapi.board.types.PadStack.angle:type_name -> kiapi.common.types.Angle
	39,  // 48: kiapi.board.types.PadStack.front_outer_layers:type_name -> kiapi.board.types.PadStackOuterLayer
	39,  // 49: kiapi.board.types.PadStack.back_outer_layers:type_name -> kiapi.board.types.PadStackOuterLayer
	35,  // 50: kiapi.board.types.PadStack.zone_settings:type_name -> kiapi.board.types.ZoneConnectionSettings
	74,  // 51: kiapi.board.types.Via.id:type_name -> kiapi.common.types.KIID
	75,  // 52: kiapi.board.types.Via.position:type_name -> kiapi.common.types.Vector2
	41,  // 53: kiapi.board.types.Via.pad_stack:type_name -> kiapi.board.types.PadStack
	77,  // 54: kiapi.board.types.Via.locked:type_name -> kiapi.common.types.LockedState
	31,  // 55: kiapi.board.types.Via.net:type_name -> kiapi.board.types.Net
	12,  // 56: kiapi.board.types.Via.type:type_name -> kiapi.board.types.ViaType
	80,  // 57: kiapi.board.types.BoardGraphicShape.shape:type_name -> kiapi.common.types.GraphicShape
	0,   // 58: kiapi.board.types.BoardGraphicShape.layer:type_name -> kiapi.board.types.BoardLayer
	31,  // 59: kiapi.board.types.BoardGraphicShape.net:type_name -> kiapi.board.types.Net
	74,  // 60: kiapi.board.types.BoardGraphicShape.id:type_name -> kiapi.common.types.KIID
	77,  // 61: kiapi.board.types.BoardGraphicShape.locked:type_name -> kiapi.common.types.LockedState
	74,  // 62: kiapi.board.types.BoardText.id:type_name -> kiapi.common.types.KIID
	81,  // 63: kiapi.board.types.BoardText.text:type_name -> kiapi.common.types.Text
	0,   // 64: kiapi.board.types.BoardText.layer:type_name -> kiapi.board.types.BoardLayer
	77,  // 65: kiapi.board.types.BoardText.locked:type_name -> kiapi.common.types.LockedState
	74,  // 66: kiapi.board.types.BoardTextBox.id:type_name -> kiapi.common.types.KIID
	82,  // 67: kiapi.board.types.BoardTextBox.textbox:type_name -> kiapi.common.types.TextBox
	0,   // 68: kiapi.board.types.BoardTextBox.layer:type_name -> kiapi.board.types.BoardLayer
	77,  // 69: kiapi.board.types.BoardTextBox.locked:type_name -> kiapi.common.types.LockedState
	76,  // 70: kiapi.board.types.ThermalSpokeSettings.width:type_name -> kiapi.common.types.Distance
	79,  // 71: kiapi.board.types.ThermalSpokeSettings.angle:type_name -> kiapi.common.types.Angle
	76,  // 72: kiapi.board.types.ThermalSpokeSettings.gap:type_name -> kiapi.common.types.Distance
	74,  // 73: kiapi.board.types.Pad.id:type_name -> kiapi.common.types.KIID
	77,  // 74: kiapi.board.types.Pad.locked:type_name -> kiapi.common.types.LockedState
	31,  // 75: kiapi.board.types.Pad.net:type_name -> kiapi.board.types.Net
	13,  // 76: kiapi.board.types.Pad.type:type_name -> kiapi.board.types.PadType
	41,  // 77: kiapi.board.types.Pad.pad_stack:type_name -> kiapi.board.types.PadStack
	75,  // 78: kiapi.board.types.Pad.position:type_name -> kiapi.common.types.Vector2
	76,  // 79: kiapi.board.types.Pad.copper_clearance_override:type_name -> kiapi.common.types.Distance
	76,  // 80: kiapi.board.types.HatchFillSettings.thickness:type_name -> kiapi.common.types.Distance
	76,  // 81: kiapi.board.types.HatchFillSettings.gap:type_name -> kiapi.common.types.Distance
	79,  // 82: kiapi.board.types.HatchFillSettings.orientation:type_name -> kiapi.common.types.Angle
	20,  // 83: kiapi.board.types.HatchFillSettings.border_mode:type_name -> kiapi.board.types.ZoneHatchFillBorderMode
	16,  // 84: kiapi.board.types.TeardropSettings.type:type_name -> kiapi.board.types.TeardropType
	35,  // 85: kiapi.board.types.CopperZoneSettings.connection:type_name -> kiapi.board.types.ZoneConnectionSettings
	76,  // 86: kiapi.board.types.CopperZoneSettings.clearance:type_name -> kiapi.common.types.Distance
	76,  // 87: kiapi.board.types.CopperZoneSettings.min_thickness:type_name -> kiapi.common.types.Distance
	17,  // 88: kiapi.board.types.CopperZoneSettings.island_mode:type_name -> kiapi.board.types.IslandRemovalMode
	18,  // 89: kiapi.board.types.CopperZoneSettings.fill_mode:type_name -> kiapi.board.types.ZoneFillMode
	48,  // 90: kiapi.board.types.CopperZoneSettings.hatch_settings:type_name -> kiapi.board.types.HatchFillSettings
	31,  // 91: kiapi.board.types.CopperZoneSettings.net:type_name -> kiapi.board.types.Net
	49,  // 92: kiapi.board.types.CopperZoneSettings.teardrop:type_name -> kiapi.board.types.TeardropSettings
	21,  // 93: kiapi.board.types.RuleAreaSettings.placement_source_type:type_name -> kiapi.board.types.PlacementRuleSourceType
	22,  // 94: kiapi.board.types.ZoneBorderSettings.style:type_name -> kiapi.board.types.ZoneBorderStyle
	76,  // 95: kiapi.board.types.ZoneBorderSettings.pitch:type_name -> kiapi.common.types.Distance
	0,   // 96: kiapi.board.types.ZoneFilledPolygons.layer:type_name -> kiapi.board.types.BoardLayer
	83,  // 97: kiapi.board.types.ZoneFilledPolygons.shapes:type_name -> kiapi.common.types.PolySet
	0,   // 98: kiapi.board.types.ZoneLayerProperties.layer:type_name -> kiapi.board.types.BoardLayer
	75,  // 99: kiapi.board.types.ZoneLayerProperties.hatching_offset:type_name -> kiapi.common.types.Vector2
	74,  // 100: kiapi.board.types.Zone.id:type_name -> kiapi.common.types.KIID
	15,  // 101: kiapi.board.types.Zone.type:type_name -> kiapi.board.types.ZoneType
	0,   // 102: kiapi.board.types.Zone.layers:type_name -> kiapi.board.types.BoardLayer
	83,  // 103: kiapi.board.types.Zone.outline:type_name -> kiapi.common.types.PolySet
	50,  // 104: kiapi.board.types.Zone.copper_settings:type_name -> kiapi.board.types.CopperZoneSettings
	51,  // 105: kiapi.board.types.Zone.rule_area_settings:type_name -> kiapi.board.types.RuleAreaSettings
	53,  // 106: kiapi.board.types.Zone.filled_polygons:type_name -> kiapi.board.types.ZoneFilledPolygons
	52,  // 107: kiapi.board.types.Zone.border:type_name -> kiapi.board.types.ZoneBorderSettings
	77,  // 108: kiapi.board.types.Zone.locked:type_name -> kiapi.common.types.LockedState
	54,  // 109: kiapi.board.types.Zone.layer_properties:type_name -> kiapi.board.types.ZoneLayerProperties
	75,  // 110: kiapi.board.types.AlignedDimensionAttributes.start:type_name -> kiapi.common.types.Vector2
	75,  // 111: kiapi.board.types.AlignedDimensionAttributes.end:type_name -> kiapi.common.types.Vector2
	76,  // 112: kiapi.board.types.AlignedDimensionAttributes.height:type_name -> kiapi.common.types.Distance
	76,  // 113: kiapi.board.types.AlignedDimensionAttributes.extension_height:type_name -> kiapi.common.types.Distance
	75,  // 114: kiapi.board.types.OrthogonalDimensionAttributes.start:type_name -> kiapi.common.types.Vector2
	75,  // 115: kiapi.board.types.OrthogonalDimensionAttributes.end:type_name -> kiapi.common.types.Vector2
	76,  // 116: kiapi.board.types.OrthogonalDimensionAttributes.height:type_name -> kiapi.common.types.Distance
	76,  // 117: kiapi.board.types.OrthogonalDimensionAttributes.extension_height:type_name -> kiapi.common.types.Distance
	84,  // 118: kiapi.board.types.OrthogonalDimensionAttributes.alignment:type_name -> kiapi.common.types.AxisAlignment
	75,  // 119: kiapi.board.types.RadialDimensionAttributes.center:type_name -> kiapi.common.types.Vector2
	75,  // 120: kiapi.board.types.RadialDimensionAttributes.radius_point:type_name -> kiapi.common.types.Vector2
	76,  // 121: kiapi.board.types.RadialDimensionAttributes.leader_length:type_name -> kiapi.common.types.Distance
	75,  // 122: kiapi.board.types.LeaderDimensionAttributes.start:type_name -> kiapi.common.types.Vector2
	75,  // 123: kiapi.board.types.LeaderDimensionAttributes.end:type_name -> kiapi.common.types.Vector2
	23,  // 124: kiapi.board.types.LeaderDimensionAttributes.border_style:type_name -> kiapi.board.types.DimensionTextBorderStyle
	75,  // 125: kiapi.board.types.CenterDimensionAttributes.center:type_name -> kiapi.common.types.Vector2
	75,  // 126: kiapi.board.types.CenterDimensionAttributes.end:type_name -> kiapi.common.types.Vector2
	74,  // 127: kiapi.board.types.Dimension.id:type_name -> kiapi.common.types.KIID
	77,  // 128: kiapi.board.types.Dimension.locked:type_name -> kiapi.common.types.LockedState
	0,   // 129: kiapi.board.types.Dimension.layer:type_name -> kiapi.board.types.BoardLayer
	81,  // 130: kiapi.board.types.Dimension.text:type_name -> kiapi.common.types.Text
	56,  // 131: kiapi.board.types.Dimension.aligned:type_name -> kiapi.board.types.AlignedDimensionAttributes
	57,  // 132: kiapi.board.types.Dimension.orthogonal:type_name -> kiapi.board.types.OrthogonalDimensionAttributes
	58,  // 133: kiapi.board.types.Dimension.radial:type_name -> kiapi.board.types.RadialDimensionAttributes
	59,  // 134: kiapi.board.types.Dimension.leader:type_name -> kiapi.board.types.LeaderDimensionAttributes
	60,  // 135: kiapi.board.types.Dimension.center:type_name -> kiapi.board.types.CenterDimensionAttributes
	28,  // 136: kiapi.board.types.Dimension.unit:type_name -> kiapi.board.types.DimensionUnit
	24,  // 137: kiapi.board.types.Dimension.unit_format:type_name -> kiapi.board.types.DimensionUnitFormat
	25,  // 138: kiapi.board.types.Dimension.arrow_direction:type_name -> kiapi.board.types.DimensionArrowDirection
	26,  // 139: kiapi.board.types.Dimension.precision:type_name -> kiapi.board.types.DimensionPrecision
	76,  // 140: kiapi.board.types.Dimension.line_thickness:type_name -> kiapi.common.types.Distance
	76,  // 141: kiapi.board.types.Dimension.arrow_length:type_name -> kiapi.common.types.Distance
	76,  // 142: kiapi.board.types.Dimension.extension_offset:type_name -> kiapi.common.types.Distance
	27,  // 143: kiapi.board.types.Dimension.text_position:type_name -> kiapi.board.types.DimensionTextPosition
	64,  // 144: kiapi.board.types.Field.id:type_name -> kiapi.board.types.FieldId
	44,  // 145: kiapi.board.types.Field.text:type_name -> kiapi.board.types.BoardText
	29,  // 146: kiapi.board.types.FootprintAttributes.mounting_style:type_name -> kiapi.board.types.FootprintMountingStyle
	36,  // 147: kiapi.board.types.FootprintDesignRuleOverrides.solder_mask:type_name -> kiapi.board.types.SolderMaskOverrides
	37,  // 148: kiapi.board.types.FootprintDesignRuleOverrides.solder_paste:type_name -> kiapi.board.types.SolderPasteOverrides
	76,  // 149: kiapi.board.types.FootprintDesignRuleOverrides.copper_clearance:type_name -> kiapi.common.types.Distance
	4,   // 150: kiapi.board.types.FootprintDesignRuleOverrides.zone_connection:type_name -> kiapi.board.types.ZoneConnectionStyle
	85,  // 151: kiapi.board.types.Footprint3DModel.scale:type_name -> kiapi.common.types.Vector3D
	85,  // 152: kiapi.board.types.Footprint3DModel.rotation:type_name -> kiapi.common.types.Vector3D
	85,  // 153: kiapi.board.types.Footprint3DModel.offset:type_name -> kiapi.common.types.Vector3D
	70,  // 154: kiapi.board.types.JumperSettings.groups:type_name -> kiapi.board.types.JumperGroup
	86,  // 155: kiapi.board.types.Footprint.id:type_name -> kiapi.common.types.LibraryIdentifier
	75,  // 156: kiapi.board.types.Footprint.anchor:type_name -> kiapi.common.types.Vector2
	66,  // 157: kiapi.board.types.Footprint.attributes:type_name -> kiapi.board.types.FootprintAttributes
	68,  // 158: kiapi.board.types.Footprint.overrides:type_name -> kiapi.board.types.FootprintDesignRuleOverrides
	67,  // 159: kiapi.board.types.Footprint.net_ties:type_name -> kiapi.board.types.NetTieDefinition
	0,   // 160: kiapi.board.types.Footprint.private_layers:type_name -> kiapi.board.types.BoardLayer
	65,  // 161: kiapi.board.types.Footprint.reference_field:type_name -> kiapi.board.types.Field
	65,  // 162: kiapi.board.types.Footprint.value_field:type_name -> kiapi.board.types.Field
	65,  // 163: kiapi.board.types.Footprint.datasheet_field:type_name -> kiapi.board.types.Field
	65,  // 164: kiapi.board.types.Footprint.description_field:type_name -> kiapi.board.types.Field
	87,  // 165: kiapi.board.types.Footprint.items:type_name -> google.protobuf.Any
	71,  // 166: kiapi.board.types.Footprint.jumpers:type_name -> kiapi.board.types.JumperSettings
	74,  // 167: kiapi.board.types.FootprintInstance.id:type_name -> kiapi.common.types.KIID
	75,  // 168: kiapi.board.types.FootprintInstance.position:type_name -> kiapi.common.types.Vector2
	79,  // 169: kiapi.board.types.FootprintInstance.orientation:type_name -> kiapi.common.types.Angle
	0,   // 170: kiapi.board.types.FootprintInstance.layer:type_name -> kiapi.board.types.BoardLayer
	77,  // 171: kiapi.board.types.FootprintInstance.locked:type_name -> kiapi.common.types.LockedState
	72,  // 172: kiapi.board.types.FootprintInstance.definition:type_name -> kiapi.board.types.Footprint
	65,  // 173: kiapi.board.types.FootprintInstance.reference_field:type_name -> kiapi.board.types.Field
	65,  // 174: kiapi.board.types.FootprintInstance.value_field:type_name -> kiapi.board.types.Field
	65,  // 175: kiapi.board.types.FootprintInstance.datasheet_field:type_name -> kiapi.board.types.Field
	65,  // 176: kiapi.board.types.FootprintInstance.description_field:type_name -> kiapi.board.types.Field
	66,  // 177: kiapi.board.types.FootprintInstance.attributes:type_name -> kiapi.board.types.FootprintAttributes
	68,  // 178: kiapi.board.types.FootprintInstance.overrides:type_name -> kiapi.board.types.FootprintDesignRuleOverrides
	88,  // 179: kiapi.board.types.FootprintInstance.symbol_path:type_name -> kiapi.common.types.SheetPath
	180, // [180:180] is the sub-list for method output_type
	180, // [180:180] is the sub-list for method input_type
	180, // [180:180] is the sub-list for extension type_name
	180, // [180:180] is the sub-list for extension extendee
	0,   // [0:180] is the sub-list for field type_name
}

func init() { file_board_board_types_proto_init() }
func file_board_board_types_proto_init() {
	if File_board_board_types_proto != nil {
		return
	}
	file_board_board_types_proto_msgTypes[25].OneofWrappers = []any{
		(*Zone_CopperSettings)(nil),
		(*Zone_RuleAreaSettings)(nil),
	}
	file_board_board_types_proto_msgTypes[31].OneofWrappers = []any{
		(*Dimension_Aligned)(nil),
		(*Dimension_Orthogonal)(nil),
		(*Dimension_Radial)(nil),
		(*Dimension_Leader)(nil),
		(*Dimension_Center)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_board_board_types_proto_rawDesc), len(file_board_board_types_proto_rawDesc)),
			NumEnums:      30,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_board_board_types_proto_goTypes,
		DependencyIndexes: file_board_board_types_proto_depIdxs,
		EnumInfos:         file_board_board_types_proto_enumTypes,
		MessageInfos:      file_board_board_types_proto_msgTypes,
	}.Build()
	File_board_board_types_proto = out.File
	file_board_board_types_proto_goTypes = nil
	file_board_board_types_proto_depIdxs = nil
}
