//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/commands/base_commands.proto

package commands

import (
	types "github.com/kicad/proto/common/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersion) Reset() {
	*x = GetVersion{}
	mi := &file_common_commands_base_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersion) ProtoMessage() {}

func (x *GetVersion) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersion.ProtoReflect.Descriptor instead.
func (*GetVersion) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{0}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *types.KiCadVersion    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_common_commands_base_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{1}
}

func (x *GetVersionResponse) GetVersion() *types.KiCadVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

// A command to check if the connection to KiCad is OK
type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_common_commands_base_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{2}
}

// Returns the full path to the given KiCad binary
type GetKiCadBinaryPath struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The short name of the binary, such as `kicad-cli` or `kicad-cli.exe`.  If on Windows, an `.exe`
	// extension will be assumed if not present.
	BinaryName    string `protobuf:"bytes,1,opt,name=binary_name,json=binaryName,proto3" json:"binary_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKiCadBinaryPath) Reset() {
	*x = GetKiCadBinaryPath{}
	mi := &file_common_commands_base_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKiCadBinaryPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKiCadBinaryPath) ProtoMessage() {}

func (x *GetKiCadBinaryPath) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKiCadBinaryPath.ProtoReflect.Descriptor instead.
func (*GetKiCadBinaryPath) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{3}
}

func (x *GetKiCadBinaryPath) GetBinaryName() string {
	if x != nil {
		return x.BinaryName
	}
	return ""
}

type PathResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathResponse) Reset() {
	*x = PathResponse{}
	mi := &file_common_commands_base_commands_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathResponse) ProtoMessage() {}

func (x *PathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathResponse.ProtoReflect.Descriptor instead.
func (*PathResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{4}
}

func (x *PathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// returns kiapi.common.types.Box2
type GetTextExtents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A temporary text item to calculate the bounding box for
	Text          *types.Text `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTextExtents) Reset() {
	*x = GetTextExtents{}
	mi := &file_common_commands_base_commands_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTextExtents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextExtents) ProtoMessage() {}

func (x *GetTextExtents) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextExtents.ProtoReflect.Descriptor instead.
func (*GetTextExtents) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{5}
}

func (x *GetTextExtents) GetText() *types.Text {
	if x != nil {
		return x.Text
	}
	return nil
}

type TextOrTextBox struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Inner:
	//
	//	*TextOrTextBox_Text
	//	*TextOrTextBox_Textbox
	Inner         isTextOrTextBox_Inner `protobuf_oneof:"inner"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextOrTextBox) Reset() {
	*x = TextOrTextBox{}
	mi := &file_common_commands_base_commands_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextOrTextBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextOrTextBox) ProtoMessage() {}

func (x *TextOrTextBox) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextOrTextBox.ProtoReflect.Descriptor instead.
func (*TextOrTextBox) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{6}
}

func (x *TextOrTextBox) GetInner() isTextOrTextBox_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *TextOrTextBox) GetText() *types.Text {
	if x != nil {
		if x, ok := x.Inner.(*TextOrTextBox_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *TextOrTextBox) GetTextbox() *types.TextBox {
	if x != nil {
		if x, ok := x.Inner.(*TextOrTextBox_Textbox); ok {
			return x.Textbox
		}
	}
	return nil
}

type isTextOrTextBox_Inner interface {
	isTextOrTextBox_Inner()
}

type TextOrTextBox_Text struct {
	Text *types.Text `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type TextOrTextBox_Textbox struct {
	Textbox *types.TextBox `protobuf:"bytes,2,opt,name=textbox,proto3,oneof"`
}

func (*TextOrTextBox_Text) isTextOrTextBox_Inner() {}

func (*TextOrTextBox_Textbox) isTextOrTextBox_Inner() {}

// Render the given text object(s) as shapes.  Depending on whether the text is using
// the KiCad stroke font or a custom font, the response will be a compound shape containing
// a set of polygons or a set of segments.
type GetTextAsShapes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          []*TextOrTextBox       `protobuf:"bytes,1,rep,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTextAsShapes) Reset() {
	*x = GetTextAsShapes{}
	mi := &file_common_commands_base_commands_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTextAsShapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextAsShapes) ProtoMessage() {}

func (x *GetTextAsShapes) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextAsShapes.ProtoReflect.Descriptor instead.
func (*GetTextAsShapes) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{7}
}

func (x *GetTextAsShapes) GetText() []*TextOrTextBox {
	if x != nil {
		return x.Text
	}
	return nil
}

type TextWithShapes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          *TextOrTextBox         `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Shapes        *types.CompoundShape   `protobuf:"bytes,2,opt,name=shapes,proto3" json:"shapes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextWithShapes) Reset() {
	*x = TextWithShapes{}
	mi := &file_common_commands_base_commands_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithShapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithShapes) ProtoMessage() {}

func (x *TextWithShapes) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithShapes.ProtoReflect.Descriptor instead.
func (*TextWithShapes) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{8}
}

func (x *TextWithShapes) GetText() *TextOrTextBox {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *TextWithShapes) GetShapes() *types.CompoundShape {
	if x != nil {
		return x.Shapes
	}
	return nil
}

type GetTextAsShapesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TextWithShapes []*TextWithShapes      `protobuf:"bytes,1,rep,name=text_with_shapes,json=textWithShapes,proto3" json:"text_with_shapes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTextAsShapesResponse) Reset() {
	*x = GetTextAsShapesResponse{}
	mi := &file_common_commands_base_commands_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTextAsShapesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTextAsShapesResponse) ProtoMessage() {}

func (x *GetTextAsShapesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTextAsShapesResponse.ProtoReflect.Descriptor instead.
func (*GetTextAsShapesResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{9}
}

func (x *GetTextAsShapesResponse) GetTextWithShapes() []*TextWithShapes {
	if x != nil {
		return x.TextWithShapes
	}
	return nil
}

// Return a writeable path that a plugin can use for storing persistent data such as configuration
// files, etc.  This path may not yet exist; actual creation of the directory for a given plugin is
// up to the plugin itself.  Files in this path will not be modified if the plugin is uninstalled or
// upgraded.
//
// Returns StringResponse
type GetPluginSettingsPath struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the plugin
	Identifier    string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginSettingsPath) Reset() {
	*x = GetPluginSettingsPath{}
	mi := &file_common_commands_base_commands_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginSettingsPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginSettingsPath) ProtoMessage() {}

func (x *GetPluginSettingsPath) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginSettingsPath.ProtoReflect.Descriptor instead.
func (*GetPluginSettingsPath) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{10}
}

func (x *GetPluginSettingsPath) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type StringResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      string                 `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringResponse) Reset() {
	*x = StringResponse{}
	mi := &file_common_commands_base_commands_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringResponse) ProtoMessage() {}

func (x *StringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_base_commands_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringResponse.ProtoReflect.Descriptor instead.
func (*StringResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_base_commands_proto_rawDescGZIP(), []int{11}
}

func (x *StringResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_common_commands_base_commands_proto protoreflect.FileDescriptor

const file_common_commands_base_commands_proto_rawDesc = "" +
	"\n" +
	"#common/commands/base_commands.proto\x12\x15kiapi.common.commands\x1a\x1dcommon/types/base_types.proto\"\f\n" +
	"\n" +
	"GetVersion\"P\n" +
	"\x12GetVersionResponse\x12:\n" +
	"\aversion\x18\x01 \x01(\v2 .kiapi.common.types.KiCadVersionR\aversion\"\x06\n" +
	"\x04Ping\"5\n" +
	"\x12GetKiCadBinaryPath\x12\x1f\n" +
	"\vbinary_name\x18\x01 \x01(\tR\n" +
	"binaryName\"\"\n" +
	"\fPathResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\">\n" +
	"\x0eGetTextExtents\x12,\n" +
	"\x04text\x18\x01 \x01(\v2\x18.kiapi.common.types.TextR\x04text\"\x81\x01\n" +
	"\rTextOrTextBox\x12.\n" +
	"\x04text\x18\x01 \x01(\v2\x18.kiapi.common.types.TextH\x00R\x04text\x127\n" +
	"\atextbox\x18\x02 \x01(\v2\x1b.kiapi.common.types.TextBoxH\x00R\atextboxB\a\n" +
	"\x05inner\"K\n" +
	"\x0fGetTextAsShapes\x128\n" +
	"\x04text\x18\x01 \x03(\v2$.kiapi.common.commands.TextOrTextBoxR\x04text\"\x85\x01\n" +
	"\x0eTextWithShapes\x128\n" +
	"\x04text\x18\x01 \x01(\v2$.kiapi.common.commands.TextOrTextBoxR\x04text\x129\n" +
	"\x06shapes\x18\x02 \x01(\v2!.kiapi.common.types.CompoundShapeR\x06shapes\"j\n" +
	"\x17GetTextAsShapesResponse\x12O\n" +
	"\x10text_with_shapes\x18\x01 \x03(\v2%.kiapi.common.commands.TextWithShapesR\x0etextWithShapes\"7\n" +
	"\x15GetPluginSettingsPath\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\",\n" +
	"\x0eStringResponse\x12\x1a\n" +
	"\bresponse\x18\x01 \x01(\tR\bresponseB(Z&github.com/kicad/proto/common/commandsb\x06proto3"

var (
	file_common_commands_base_commands_proto_rawDescOnce sync.Once
	file_common_commands_base_commands_proto_rawDescData []byte
)

func file_common_commands_base_commands_proto_rawDescGZIP() []byte {
	file_common_commands_base_commands_proto_rawDescOnce.Do(func() {
		file_common_commands_base_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_commands_base_commands_proto_rawDesc), len(file_common_commands_base_commands_proto_rawDesc)))
	})
	return file_common_commands_base_commands_proto_rawDescData
}

var file_common_commands_base_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_common_commands_base_commands_proto_goTypes = []any{
	(*GetVersion)(nil),              // 0: kiapi.common.commands.GetVersion
	(*GetVersionResponse)(nil),      // 1: kiapi.common.commands.GetVersionResponse
	(*Ping)(nil),                    // 2: kiapi.common.commands.Ping
	(*GetKiCadBinaryPath)(nil),      // 3: kiapi.common.commands.GetKiCadBinaryPath
	(*PathResponse)(nil),            // 4: kiapi.common.commands.PathResponse
	(*GetTextExtents)(nil),          // 5: kiapi.common.commands.GetTextExtents
	(*TextOrTextBox)(nil),           // 6: kiapi.common.commands.TextOrTextBox
	(*GetTextAsShapes)(nil),         // 7: kiapi.common.commands.GetTextAsShapes
	(*TextWithShapes)(nil),          // 8: kiapi.common.commands.TextWithShapes
	(*GetTextAsShapesResponse)(nil), // 9: kiapi.common.commands.GetTextAsShapesResponse
	(*GetPluginSettingsPath)(nil),   // 10: kiapi.common.commands.GetPluginSettingsPath
	(*StringResponse)(nil),          // 11: kiapi.common.commands.StringResponse
	(*types.KiCadVersion)(nil),      // 12: kiapi.common.types.KiCadVersion
	(*types.Text)(nil),              // 13: kiapi.common.types.Text
	(*types.TextBox)(nil),           // 14: kiapi.common.types.TextBox
	(*types.CompoundShape)(nil),     // 15: kiapi.common.types.CompoundShape
}
var file_common_commands_base_commands_proto_depIdxs = []int32{
	12, // 0: kiapi.common.commands.GetVersionResponse.version:type_name -> kiapi.common.types.KiCadVersion
	13, // 1: kiapi.common.commands.GetTextExtents.text:type_name -> kiapi.common.types.Text
	13, // 2: kiapi.common.commands.TextOrTextBox.text:type_name -> kiapi.common.types.Text
	14, // 3: kiapi.common.commands.TextOrTextBox.textbox:type_name -> kiapi.common.types.TextBox
	6,  // 4: kiapi.common.commands.GetTextAsShapes.text:type_name -> kiapi.common.commands.TextOrTextBox
	6,  // 5: kiapi.common.commands.TextWithShapes.text:type_name -> kiapi.common.commands.TextOrTextBox
	15, // 6: kiapi.common.commands.TextWithShapes.shapes:type_name -> kiapi.common.types.CompoundShape
	8,  // 7: kiapi.common.commands.GetTextAsShapesResponse.text_with_shapes:type_name -> kiapi.common.commands.TextWithShapes
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_common_commands_base_commands_proto_init() }
func file_common_commands_base_commands_proto_init() {
	if File_common_commands_base_commands_proto != nil {
		return
	}
	file_common_commands_base_commands_proto_msgTypes[6].OneofWrappers = []any{
		(*TextOrTextBox_Text)(nil),
		(*TextOrTextBox_Textbox)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_commands_base_commands_proto_rawDesc), len(file_common_commands_base_commands_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_commands_base_commands_proto_goTypes,
		DependencyIndexes: file_common_commands_base_commands_proto_depIdxs,
		MessageInfos:      file_common_commands_base_commands_proto_msgTypes,
	}.Build()
	File_common_commands_base_commands_proto = out.File
	file_common_commands_base_commands_proto_goTypes = nil
	file_common_commands_base_commands_proto_depIdxs = nil
}
