//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

//
// Commands and responses related to manipulating editor windows

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/commands/editor_commands.proto

package commands

import (
	types "github.com/kicad/proto/common/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunActionStatus int32

const (
	RunActionStatus_RAS_UNKNOWN        RunActionStatus = 0
	RunActionStatus_RAS_OK             RunActionStatus = 1 // The action was submitted successfully.
	RunActionStatus_RAS_INVALID        RunActionStatus = 2 // The action was unknown for the targeted frame.
	RunActionStatus_RAS_FRAME_NOT_OPEN RunActionStatus = 3 // The targeted frame was not open when the call was submitted.
)

// Enum value maps for RunActionStatus.
var (
	RunActionStatus_name = map[int32]string{
		0: "RAS_UNKNOWN",
		1: "RAS_OK",
		2: "RAS_INVALID",
		3: "RAS_FRAME_NOT_OPEN",
	}
	RunActionStatus_value = map[string]int32{
		"RAS_UNKNOWN":        0,
		"RAS_OK":             1,
		"RAS_INVALID":        2,
		"RAS_FRAME_NOT_OPEN": 3,
	}
)

func (x RunActionStatus) Enum() *RunActionStatus {
	p := new(RunActionStatus)
	*p = x
	return p
}

func (x RunActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[0].Descriptor()
}

func (RunActionStatus) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[0]
}

func (x RunActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunActionStatus.Descriptor instead.
func (RunActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{0}
}

type CommitAction int32

const (
	CommitAction_CMA_UNKNOWN CommitAction = 0
	CommitAction_CMA_COMMIT  CommitAction = 1 // Commit the changes to the design
	CommitAction_CMA_DROP    CommitAction = 2 // Cancel this commit
)

// Enum value maps for CommitAction.
var (
	CommitAction_name = map[int32]string{
		0: "CMA_UNKNOWN",
		1: "CMA_COMMIT",
		2: "CMA_DROP",
	}
	CommitAction_value = map[string]int32{
		"CMA_UNKNOWN": 0,
		"CMA_COMMIT":  1,
		"CMA_DROP":    2,
	}
)

func (x CommitAction) Enum() *CommitAction {
	p := new(CommitAction)
	*p = x
	return p
}

func (x CommitAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitAction) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[1].Descriptor()
}

func (CommitAction) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[1]
}

func (x CommitAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitAction.Descriptor instead.
func (CommitAction) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{1}
}

type ItemStatusCode int32

const (
	ItemStatusCode_ISC_UNKNOWN      ItemStatusCode = 0
	ItemStatusCode_ISC_OK           ItemStatusCode = 1 // The item was created or updated
	ItemStatusCode_ISC_INVALID_TYPE ItemStatusCode = 2 // The item's type is not valid for the given document
	ItemStatusCode_ISC_EXISTING     ItemStatusCode = 3 // The item to be created had a specified KIID and that KIID was already in use
	ItemStatusCode_ISC_NONEXISTENT  ItemStatusCode = 4 // The item to be updated did not exist in the given document
	ItemStatusCode_ISC_IMMUTABLE    ItemStatusCode = 5 // The item to be updated is not allowed to be modified by the API
	ItemStatusCode_ISC_INVALID_DATA ItemStatusCode = 7 // The item to be created does not have valid data for the given document
)

// Enum value maps for ItemStatusCode.
var (
	ItemStatusCode_name = map[int32]string{
		0: "ISC_UNKNOWN",
		1: "ISC_OK",
		2: "ISC_INVALID_TYPE",
		3: "ISC_EXISTING",
		4: "ISC_NONEXISTENT",
		5: "ISC_IMMUTABLE",
		7: "ISC_INVALID_DATA",
	}
	ItemStatusCode_value = map[string]int32{
		"ISC_UNKNOWN":      0,
		"ISC_OK":           1,
		"ISC_INVALID_TYPE": 2,
		"ISC_EXISTING":     3,
		"ISC_NONEXISTENT":  4,
		"ISC_IMMUTABLE":    5,
		"ISC_INVALID_DATA": 7,
	}
)

func (x ItemStatusCode) Enum() *ItemStatusCode {
	p := new(ItemStatusCode)
	*p = x
	return p
}

func (x ItemStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[2].Descriptor()
}

func (ItemStatusCode) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[2]
}

func (x ItemStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemStatusCode.Descriptor instead.
func (ItemStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{2}
}

type ItemDeletionStatus int32

const (
	ItemDeletionStatus_IDS_UNKNOWN     ItemDeletionStatus = 0
	ItemDeletionStatus_IDS_OK          ItemDeletionStatus = 1
	ItemDeletionStatus_IDS_NONEXISTENT ItemDeletionStatus = 2 // The item did not exist in the given document
	ItemDeletionStatus_IDS_IMMUTABLE   ItemDeletionStatus = 3 // The item is not allowed to be modified by the API
)

// Enum value maps for ItemDeletionStatus.
var (
	ItemDeletionStatus_name = map[int32]string{
		0: "IDS_UNKNOWN",
		1: "IDS_OK",
		2: "IDS_NONEXISTENT",
		3: "IDS_IMMUTABLE",
	}
	ItemDeletionStatus_value = map[string]int32{
		"IDS_UNKNOWN":     0,
		"IDS_OK":          1,
		"IDS_NONEXISTENT": 2,
		"IDS_IMMUTABLE":   3,
	}
)

func (x ItemDeletionStatus) Enum() *ItemDeletionStatus {
	p := new(ItemDeletionStatus)
	*p = x
	return p
}

func (x ItemDeletionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemDeletionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[3].Descriptor()
}

func (ItemDeletionStatus) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[3]
}

func (x ItemDeletionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemDeletionStatus.Descriptor instead.
func (ItemDeletionStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{3}
}

type BoundingBoxMode int32

const (
	BoundingBoxMode_BBM_UNKNOWN             BoundingBoxMode = 0
	BoundingBoxMode_BBM_ITEM_ONLY           BoundingBoxMode = 1
	BoundingBoxMode_BBM_ITEM_AND_CHILD_TEXT BoundingBoxMode = 2
)

// Enum value maps for BoundingBoxMode.
var (
	BoundingBoxMode_name = map[int32]string{
		0: "BBM_UNKNOWN",
		1: "BBM_ITEM_ONLY",
		2: "BBM_ITEM_AND_CHILD_TEXT",
	}
	BoundingBoxMode_value = map[string]int32{
		"BBM_UNKNOWN":             0,
		"BBM_ITEM_ONLY":           1,
		"BBM_ITEM_AND_CHILD_TEXT": 2,
	}
)

func (x BoundingBoxMode) Enum() *BoundingBoxMode {
	p := new(BoundingBoxMode)
	*p = x
	return p
}

func (x BoundingBoxMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BoundingBoxMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[4].Descriptor()
}

func (BoundingBoxMode) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[4]
}

func (x BoundingBoxMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BoundingBoxMode.Descriptor instead.
func (BoundingBoxMode) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{4}
}

type HitTestResult int32

const (
	HitTestResult_HTR_UNKNOWN HitTestResult = 0
	HitTestResult_HTR_NO_HIT  HitTestResult = 1
	HitTestResult_HTR_HIT     HitTestResult = 2
)

// Enum value maps for HitTestResult.
var (
	HitTestResult_name = map[int32]string{
		0: "HTR_UNKNOWN",
		1: "HTR_NO_HIT",
		2: "HTR_HIT",
	}
	HitTestResult_value = map[string]int32{
		"HTR_UNKNOWN": 0,
		"HTR_NO_HIT":  1,
		"HTR_HIT":     2,
	}
)

func (x HitTestResult) Enum() *HitTestResult {
	p := new(HitTestResult)
	*p = x
	return p
}

func (x HitTestResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HitTestResult) Descriptor() protoreflect.EnumDescriptor {
	return file_common_commands_editor_commands_proto_enumTypes[5].Descriptor()
}

func (HitTestResult) Type() protoreflect.EnumType {
	return &file_common_commands_editor_commands_proto_enumTypes[5]
}

func (x HitTestResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HitTestResult.Descriptor instead.
func (HitTestResult) EnumDescriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{5}
}

// Refreshes the given frame, if that frame is open
type RefreshEditor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frame         types.FrameType        `protobuf:"varint,1,opt,name=frame,proto3,enum=kiapi.common.types.FrameType" json:"frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshEditor) Reset() {
	*x = RefreshEditor{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshEditor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshEditor) ProtoMessage() {}

func (x *RefreshEditor) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshEditor.ProtoReflect.Descriptor instead.
func (*RefreshEditor) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{0}
}

func (x *RefreshEditor) GetFrame() types.FrameType {
	if x != nil {
		return x.Frame
	}
	return types.FrameType(0)
}

// Retrieves a list of open documents of the given type
type GetOpenDocuments struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Which type of documents to query
	Type          types.DocumentType `protobuf:"varint,1,opt,name=type,proto3,enum=kiapi.common.types.DocumentType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOpenDocuments) Reset() {
	*x = GetOpenDocuments{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenDocuments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenDocuments) ProtoMessage() {}

func (x *GetOpenDocuments) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenDocuments.ProtoReflect.Descriptor instead.
func (*GetOpenDocuments) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{1}
}

func (x *GetOpenDocuments) GetType() types.DocumentType {
	if x != nil {
		return x.Type
	}
	return types.DocumentType(0)
}

type GetOpenDocumentsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Documents     []*types.DocumentSpecifier `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOpenDocumentsResponse) Reset() {
	*x = GetOpenDocumentsResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenDocumentsResponse) ProtoMessage() {}

func (x *GetOpenDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenDocumentsResponse.ProtoReflect.Descriptor instead.
func (*GetOpenDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{2}
}

func (x *GetOpenDocumentsResponse) GetDocuments() []*types.DocumentSpecifier {
	if x != nil {
		return x.Documents
	}
	return nil
}

type SaveDocument struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveDocument) Reset() {
	*x = SaveDocument{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDocument) ProtoMessage() {}

func (x *SaveDocument) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDocument.ProtoReflect.Descriptor instead.
func (*SaveDocument) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{3}
}

func (x *SaveDocument) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

type SaveOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overwrite destination file(s) if they exist
	Overwrite bool `protobuf:"varint,1,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	// If the file being saved normally requires a project (for example, a board or schematic),
	// this flag will cause a new project to be saved alongside the new file
	IncludeProject bool `protobuf:"varint,2,opt,name=include_project,json=includeProject,proto3" json:"include_project,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SaveOptions) Reset() {
	*x = SaveOptions{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOptions) ProtoMessage() {}

func (x *SaveOptions) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOptions.ProtoReflect.Descriptor instead.
func (*SaveOptions) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{4}
}

func (x *SaveOptions) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

func (x *SaveOptions) GetIncludeProject() bool {
	if x != nil {
		return x.IncludeProject
	}
	return false
}

// Saves the given document to a new location and does not open the new copy
type SaveCopyOfDocument struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Path          string                   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Options       *SaveOptions             `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveCopyOfDocument) Reset() {
	*x = SaveCopyOfDocument{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveCopyOfDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCopyOfDocument) ProtoMessage() {}

func (x *SaveCopyOfDocument) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCopyOfDocument.ProtoReflect.Descriptor instead.
func (*SaveCopyOfDocument) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{5}
}

func (x *SaveCopyOfDocument) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *SaveCopyOfDocument) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SaveCopyOfDocument) GetOptions() *SaveOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type RevertDocument struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertDocument) Reset() {
	*x = RevertDocument{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertDocument) ProtoMessage() {}

func (x *RevertDocument) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertDocument.ProtoReflect.Descriptor instead.
func (*RevertDocument) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{6}
}

func (x *RevertDocument) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

// Runs a TOOL_ACTION using the TOOL_MANAGER of a given frame.
// WARNING: The TOOL_ACTIONs are specifically *not* an API.
// Command names may change as code is refactored, and commands may disappear.
// This API method is provided for low-level prototyping purposes only.
type RunAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        string                 `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"` // Action name, like "eeschema.InteractiveSelection.ClearSelection"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunAction) Reset() {
	*x = RunAction{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAction) ProtoMessage() {}

func (x *RunAction) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAction.ProtoReflect.Descriptor instead.
func (*RunAction) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{7}
}

func (x *RunAction) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// NOTE: At the moment, RAS_FRAME_NOT_OPEN won't be returned as the handler is inside the frame.
type RunActionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        RunActionStatus        `protobuf:"varint,1,opt,name=status,proto3,enum=kiapi.common.commands.RunActionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunActionResponse) Reset() {
	*x = RunActionResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunActionResponse) ProtoMessage() {}

func (x *RunActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunActionResponse.ProtoReflect.Descriptor instead.
func (*RunActionResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{8}
}

func (x *RunActionResponse) GetStatus() RunActionStatus {
	if x != nil {
		return x.Status
	}
	return RunActionStatus_RAS_UNKNOWN
}

// Begins a staged set of changes.  Any modifications made to a document through the API after this
// call will be saved to a pending commit, and will not appear in KiCad until a matching call to
// END_COMMIT.
type BeginCommit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginCommit) Reset() {
	*x = BeginCommit{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginCommit) ProtoMessage() {}

func (x *BeginCommit) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginCommit.ProtoReflect.Descriptor instead.
func (*BeginCommit) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{9}
}

type BeginCommitResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Opaque identifier tracking a commit
	Id            *types.KIID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginCommitResponse) Reset() {
	*x = BeginCommitResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginCommitResponse) ProtoMessage() {}

func (x *BeginCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginCommitResponse.ProtoReflect.Descriptor instead.
func (*BeginCommitResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{10}
}

func (x *BeginCommitResponse) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

type EndCommit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID that was given by BeginCommit
	Id *types.KIID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// What to do with this commit
	Action CommitAction `protobuf:"varint,2,opt,name=action,proto3,enum=kiapi.common.commands.CommitAction" json:"action,omitempty"`
	// Optional message describing this changeset
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndCommit) Reset() {
	*x = EndCommit{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCommit) ProtoMessage() {}

func (x *EndCommit) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCommit.ProtoReflect.Descriptor instead.
func (*EndCommit) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{11}
}

func (x *EndCommit) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EndCommit) GetAction() CommitAction {
	if x != nil {
		return x.Action
	}
	return CommitAction_CMA_UNKNOWN
}

func (x *EndCommit) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EndCommitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndCommitResponse) Reset() {
	*x = EndCommitResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCommitResponse) ProtoMessage() {}

func (x *EndCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCommitResponse.ProtoReflect.Descriptor instead.
func (*EndCommitResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{12}
}

// Creates new items on a given document
type CreateItems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to create on, which fields are included, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of items to create
	Items []*anypb.Any `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// Items may be created on a top-level document (sheet, board, etc) or inside a container
	// (symbol, footprint).  If this field is not empty, it holds the ID of a symbol or footprint
	// that the items should be added to.  This ID must be an existing symbol (for schematic
	// documents) or footprint (for board documents).  If the given container does not exist or is
	// not the correct item type, the CreateItems call will fail.
	Container     *types.KIID `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateItems) Reset() {
	*x = CreateItems{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItems) ProtoMessage() {}

func (x *CreateItems) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItems.ProtoReflect.Descriptor instead.
func (*CreateItems) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{13}
}

func (x *CreateItems) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateItems) GetItems() []*anypb.Any {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreateItems) GetContainer() *types.KIID {
	if x != nil {
		return x.Container
	}
	return nil
}

// Per-item status feedback for creation and update calls
type ItemStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ItemStatusCode         `protobuf:"varint,1,opt,name=code,proto3,enum=kiapi.common.commands.ItemStatusCode" json:"code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemStatus) Reset() {
	*x = ItemStatus{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemStatus) ProtoMessage() {}

func (x *ItemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemStatus.ProtoReflect.Descriptor instead.
func (*ItemStatus) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{14}
}

func (x *ItemStatus) GetCode() ItemStatusCode {
	if x != nil {
		return x.Code
	}
	return ItemStatusCode_ISC_UNKNOWN
}

func (x *ItemStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ItemCreationResult struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Status *ItemStatus            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The created version of the item, including an updated KIID as applicable
	Item          *anypb.Any `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemCreationResult) Reset() {
	*x = ItemCreationResult{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemCreationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCreationResult) ProtoMessage() {}

func (x *ItemCreationResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCreationResult.ProtoReflect.Descriptor instead.
func (*ItemCreationResult) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{15}
}

func (x *ItemCreationResult) GetStatus() *ItemStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ItemCreationResult) GetItem() *anypb.Any {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document was modified, which fields are included in created_items, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Status of the overall request; may return IRS_OK even if no items were created
	Status types.ItemRequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kiapi.common.types.ItemRequestStatus" json:"status,omitempty"`
	// Status of each item to be created
	CreatedItems  []*ItemCreationResult `protobuf:"bytes,3,rep,name=created_items,json=createdItems,proto3" json:"created_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateItemsResponse) Reset() {
	*x = CreateItemsResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemsResponse) ProtoMessage() {}

func (x *CreateItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemsResponse.ProtoReflect.Descriptor instead.
func (*CreateItemsResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{16}
}

func (x *CreateItemsResponse) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateItemsResponse) GetStatus() types.ItemRequestStatus {
	if x != nil {
		return x.Status
	}
	return types.ItemRequestStatus(0)
}

func (x *CreateItemsResponse) GetCreatedItems() []*ItemCreationResult {
	if x != nil {
		return x.CreatedItems
	}
	return nil
}

type GetItems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to query, which fields to return, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of one or more types of items to retreive
	Types         []types.KiCadObjectType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=kiapi.common.types.KiCadObjectType" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItems) Reset() {
	*x = GetItems{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItems) ProtoMessage() {}

func (x *GetItems) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItems.ProtoReflect.Descriptor instead.
func (*GetItems) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{17}
}

func (x *GetItems) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetItems) GetTypes() []types.KiCadObjectType {
	if x != nil {
		return x.Types
	}
	return nil
}

type GetItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document was modified, which fields are included in items, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Status of the overall request; may return IRS_OK even if no items were retrieved
	Status        types.ItemRequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kiapi.common.types.ItemRequestStatus" json:"status,omitempty"`
	Items         []*anypb.Any            `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItemsResponse) Reset() {
	*x = GetItemsResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsResponse) ProtoMessage() {}

func (x *GetItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsResponse.ProtoReflect.Descriptor instead.
func (*GetItemsResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{18}
}

func (x *GetItemsResponse) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetItemsResponse) GetStatus() types.ItemRequestStatus {
	if x != nil {
		return x.Status
	}
	return types.ItemRequestStatus(0)
}

func (x *GetItemsResponse) GetItems() []*anypb.Any {
	if x != nil {
		return x.Items
	}
	return nil
}

// Updates items in a given document
type UpdateItems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to modify, which fields are included, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of items to modify
	Items         []*anypb.Any `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateItems) Reset() {
	*x = UpdateItems{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItems) ProtoMessage() {}

func (x *UpdateItems) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItems.ProtoReflect.Descriptor instead.
func (*UpdateItems) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateItems) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateItems) GetItems() []*anypb.Any {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemUpdateResult struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Status *ItemStatus            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The update version of the item
	Item          *anypb.Any `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemUpdateResult) Reset() {
	*x = ItemUpdateResult{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemUpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUpdateResult) ProtoMessage() {}

func (x *ItemUpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUpdateResult.ProtoReflect.Descriptor instead.
func (*ItemUpdateResult) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{20}
}

func (x *ItemUpdateResult) GetStatus() *ItemStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ItemUpdateResult) GetItem() *anypb.Any {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document was modified, which fields are included in updated_items, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Status of the overall request; may return IRS_OK even if no items were modified
	Status types.ItemRequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kiapi.common.types.ItemRequestStatus" json:"status,omitempty"`
	// Status of each item to be created
	UpdatedItems  []*ItemUpdateResult `protobuf:"bytes,3,rep,name=updated_items,json=updatedItems,proto3" json:"updated_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateItemsResponse) Reset() {
	*x = UpdateItemsResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItemsResponse) ProtoMessage() {}

func (x *UpdateItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItemsResponse.ProtoReflect.Descriptor instead.
func (*UpdateItemsResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateItemsResponse) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateItemsResponse) GetStatus() types.ItemRequestStatus {
	if x != nil {
		return x.Status
	}
	return types.ItemRequestStatus(0)
}

func (x *UpdateItemsResponse) GetUpdatedItems() []*ItemUpdateResult {
	if x != nil {
		return x.UpdatedItems
	}
	return nil
}

// Deletes items in a given document
type DeleteItems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to modify
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// List of item KIIDs to delete
	ItemIds       []*types.KIID `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItems) Reset() {
	*x = DeleteItems{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItems) ProtoMessage() {}

func (x *DeleteItems) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItems.ProtoReflect.Descriptor instead.
func (*DeleteItems) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteItems) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteItems) GetItemIds() []*types.KIID {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type ItemDeletionResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *types.KIID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        ItemDeletionStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=kiapi.common.commands.ItemDeletionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemDeletionResult) Reset() {
	*x = ItemDeletionResult{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemDeletionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDeletionResult) ProtoMessage() {}

func (x *ItemDeletionResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDeletionResult.ProtoReflect.Descriptor instead.
func (*ItemDeletionResult) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{23}
}

func (x *ItemDeletionResult) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ItemDeletionResult) GetStatus() ItemDeletionStatus {
	if x != nil {
		return x.Status
	}
	return ItemDeletionStatus_IDS_UNKNOWN
}

type DeleteItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document was modified, etc.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Status of the overall request; may return IRS_OK even if no items were deleted
	Status types.ItemRequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kiapi.common.types.ItemRequestStatus" json:"status,omitempty"`
	// Status of each item requested to be deleted
	DeletedItems  []*ItemDeletionResult `protobuf:"bytes,3,rep,name=deleted_items,json=deletedItems,proto3" json:"deleted_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItemsResponse) Reset() {
	*x = DeleteItemsResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemsResponse) ProtoMessage() {}

func (x *DeleteItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemsResponse.ProtoReflect.Descriptor instead.
func (*DeleteItemsResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteItemsResponse) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteItemsResponse) GetStatus() types.ItemRequestStatus {
	if x != nil {
		return x.Status
	}
	return types.ItemRequestStatus(0)
}

func (x *DeleteItemsResponse) GetDeletedItems() []*ItemDeletionResult {
	if x != nil {
		return x.DeletedItems
	}
	return nil
}

type GetBoundingBox struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Header *types.ItemHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Items  []*types.KIID          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// Some item types can have independently-movable text as children (e.g. footprints)
	// This mode controls whether or not these are included in the box
	Mode          BoundingBoxMode `protobuf:"varint,3,opt,name=mode,proto3,enum=kiapi.common.commands.BoundingBoxMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoundingBox) Reset() {
	*x = GetBoundingBox{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoundingBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoundingBox) ProtoMessage() {}

func (x *GetBoundingBox) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoundingBox.ProtoReflect.Descriptor instead.
func (*GetBoundingBox) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{25}
}

func (x *GetBoundingBox) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetBoundingBox) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetBoundingBox) GetMode() BoundingBoxMode {
	if x != nil {
		return x.Mode
	}
	return BoundingBoxMode_BBM_UNKNOWN
}

type GetBoundingBoxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*types.KIID          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Boxes         []*types.Box2          `protobuf:"bytes,2,rep,name=boxes,proto3" json:"boxes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoundingBoxResponse) Reset() {
	*x = GetBoundingBoxResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoundingBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoundingBoxResponse) ProtoMessage() {}

func (x *GetBoundingBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoundingBoxResponse.ProtoReflect.Descriptor instead.
func (*GetBoundingBoxResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{26}
}

func (x *GetBoundingBoxResponse) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetBoundingBoxResponse) GetBoxes() []*types.Box2 {
	if x != nil {
		return x.Boxes
	}
	return nil
}

// Retrieves a list of items.  Returns SelectionResponse
type GetSelection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies which document to query for selected items.
	Header *types.ItemHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// An optional list of types to filter on.
	// If none are provided, all selected items will be returned.
	Types         []types.KiCadObjectType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=kiapi.common.types.KiCadObjectType" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelection) Reset() {
	*x = GetSelection{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelection) ProtoMessage() {}

func (x *GetSelection) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelection.ProtoReflect.Descriptor instead.
func (*GetSelection) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{27}
}

func (x *GetSelection) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetSelection) GetTypes() []types.KiCadObjectType {
	if x != nil {
		return x.Types
	}
	return nil
}

// The set of currently selected items
type SelectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*anypb.Any           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionResponse) Reset() {
	*x = SelectionResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionResponse) ProtoMessage() {}

func (x *SelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionResponse.ProtoReflect.Descriptor instead.
func (*SelectionResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{28}
}

func (x *SelectionResponse) GetItems() []*anypb.Any {
	if x != nil {
		return x.Items
	}
	return nil
}

// Adds the given items to the selection.  Returns SelectionResponse
type AddToSelection struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Header *types.ItemHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The items to select
	Items         []*types.KIID `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToSelection) Reset() {
	*x = AddToSelection{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToSelection) ProtoMessage() {}

func (x *AddToSelection) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToSelection.ProtoReflect.Descriptor instead.
func (*AddToSelection) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{29}
}

func (x *AddToSelection) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *AddToSelection) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

// Removes the given items to the selection.  Returns SelectionResponse
type RemoveFromSelection struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Header *types.ItemHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The items to deselect
	Items         []*types.KIID `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromSelection) Reset() {
	*x = RemoveFromSelection{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromSelection) ProtoMessage() {}

func (x *RemoveFromSelection) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromSelection.ProtoReflect.Descriptor instead.
func (*RemoveFromSelection) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveFromSelection) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RemoveFromSelection) GetItems() []*types.KIID {
	if x != nil {
		return x.Items
	}
	return nil
}

// Removes all items from selection
type ClearSelection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *types.ItemHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearSelection) Reset() {
	*x = ClearSelection{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSelection) ProtoMessage() {}

func (x *ClearSelection) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSelection.ProtoReflect.Descriptor instead.
func (*ClearSelection) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{31}
}

func (x *ClearSelection) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

// Tests if a certain point falls within tolerance of an item's geometry
type HitTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *types.ItemHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id            *types.KIID            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Position      *types.Vector2         `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Tolerance     int32                  `protobuf:"varint,4,opt,name=tolerance,proto3" json:"tolerance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HitTest) Reset() {
	*x = HitTest{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HitTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitTest) ProtoMessage() {}

func (x *HitTest) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitTest.ProtoReflect.Descriptor instead.
func (*HitTest) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{32}
}

func (x *HitTest) GetHeader() *types.ItemHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HitTest) GetId() *types.KIID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *HitTest) GetPosition() *types.Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *HitTest) GetTolerance() int32 {
	if x != nil {
		return x.Tolerance
	}
	return 0
}

type HitTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        HitTestResult          `protobuf:"varint,1,opt,name=result,proto3,enum=kiapi.common.commands.HitTestResult" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HitTestResponse) Reset() {
	*x = HitTestResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HitTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitTestResponse) ProtoMessage() {}

func (x *HitTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitTestResponse.ProtoReflect.Descriptor instead.
func (*HitTestResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{33}
}

func (x *HitTestResponse) GetResult() HitTestResult {
	if x != nil {
		return x.Result
	}
	return HitTestResult_HTR_UNKNOWN
}

// returns common.types.TitleBlockInfo
type GetTitleBlockInfo struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTitleBlockInfo) Reset() {
	*x = GetTitleBlockInfo{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTitleBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleBlockInfo) ProtoMessage() {}

func (x *GetTitleBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleBlockInfo.ProtoReflect.Descriptor instead.
func (*GetTitleBlockInfo) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{34}
}

func (x *GetTitleBlockInfo) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

type SaveDocumentToString struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveDocumentToString) Reset() {
	*x = SaveDocumentToString{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveDocumentToString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDocumentToString) ProtoMessage() {}

func (x *SaveDocumentToString) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDocumentToString.ProtoReflect.Descriptor instead.
func (*SaveDocumentToString) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{35}
}

func (x *SaveDocumentToString) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

type SavedDocumentResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Contents      string                   `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedDocumentResponse) Reset() {
	*x = SavedDocumentResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedDocumentResponse) ProtoMessage() {}

func (x *SavedDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedDocumentResponse.ProtoReflect.Descriptor instead.
func (*SavedDocumentResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{36}
}

func (x *SavedDocumentResponse) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *SavedDocumentResponse) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

type SaveSelectionToString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSelectionToString) Reset() {
	*x = SaveSelectionToString{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSelectionToString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSelectionToString) ProtoMessage() {}

func (x *SaveSelectionToString) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSelectionToString.ProtoReflect.Descriptor instead.
func (*SaveSelectionToString) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{37}
}

type SavedSelectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []*types.KIID          `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Contents      string                 `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedSelectionResponse) Reset() {
	*x = SavedSelectionResponse{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedSelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedSelectionResponse) ProtoMessage() {}

func (x *SavedSelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedSelectionResponse.ProtoReflect.Descriptor instead.
func (*SavedSelectionResponse) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{38}
}

func (x *SavedSelectionResponse) GetIds() []*types.KIID {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SavedSelectionResponse) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

// Attempts to parse the given string as a s-expression formatted container with items,
// similar to how the Paste action inside the KiCad editor works.  If the parse is successful,
// the items will be created and inserted into the editor.
// Returns CreateItemsResponse
type ParseAndCreateItemsFromString struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Document      *types.DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Contents      string                   `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseAndCreateItemsFromString) Reset() {
	*x = ParseAndCreateItemsFromString{}
	mi := &file_common_commands_editor_commands_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseAndCreateItemsFromString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseAndCreateItemsFromString) ProtoMessage() {}

func (x *ParseAndCreateItemsFromString) ProtoReflect() protoreflect.Message {
	mi := &file_common_commands_editor_commands_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseAndCreateItemsFromString.ProtoReflect.Descriptor instead.
func (*ParseAndCreateItemsFromString) Descriptor() ([]byte, []int) {
	return file_common_commands_editor_commands_proto_rawDescGZIP(), []int{39}
}

func (x *ParseAndCreateItemsFromString) GetDocument() *types.DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *ParseAndCreateItemsFromString) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

var File_common_commands_editor_commands_proto protoreflect.FileDescriptor

const file_common_commands_editor_commands_proto_rawDesc = "" +
	"\n" +
	"%common/commands/editor_commands.proto\x12\x15kiapi.common.commands\x1a\x19google/protobuf/any.proto\x1a\x1dcommon/types/base_types.proto\x1a\x18common/types/enums.proto\"D\n" +
	"\rRefreshEditor\x123\n" +
	"\x05frame\x18\x01 \x01(\x0e2\x1d.kiapi.common.types.FrameTypeR\x05frame\"H\n" +
	"\x10GetOpenDocuments\x124\n" +
	"\x04type\x18\x01 \x01(\x0e2 .kiapi.common.types.DocumentTypeR\x04type\"_\n" +
	"\x18GetOpenDocumentsResponse\x12C\n" +
	"\tdocuments\x18\x01 \x03(\v2%.kiapi.common.types.DocumentSpecifierR\tdocuments\"Q\n" +
	"\fSaveDocument\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\"T\n" +
	"\vSaveOptions\x12\x1c\n" +
	"\toverwrite\x18\x01 \x01(\bR\toverwrite\x12'\n" +
	"\x0finclude_project\x18\x02 \x01(\bR\x0eincludeProject\"\xa9\x01\n" +
	"\x12SaveCopyOfDocument\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12<\n" +
	"\aoptions\x18\x03 \x01(\v2\".kiapi.common.commands.SaveOptionsR\aoptions\"S\n" +
	"\x0eRevertDocument\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\"#\n" +
	"\tRunAction\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\"S\n" +
	"\x11RunActionResponse\x12>\n" +
	"\x06status\x18\x01 \x01(\x0e2&.kiapi.common.commands.RunActionStatusR\x06status\"\r\n" +
	"\vBeginCommit\"?\n" +
	"\x13BeginCommitResponse\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\"\x8c\x01\n" +
	"\tEndCommit\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x12;\n" +
	"\x06action\x18\x02 \x01(\x0e2#.kiapi.common.commands.CommitActionR\x06action\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x13\n" +
	"\x11EndCommitResponse\"\xa9\x01\n" +
	"\vCreateItems\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\x05items\x126\n" +
	"\tcontainer\x18\x03 \x01(\v2\x18.kiapi.common.types.KIIDR\tcontainer\"l\n" +
	"\n" +
	"ItemStatus\x129\n" +
	"\x04code\x18\x01 \x01(\x0e2%.kiapi.common.commands.ItemStatusCodeR\x04code\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"y\n" +
	"\x12ItemCreationResult\x129\n" +
	"\x06status\x18\x01 \x01(\v2!.kiapi.common.commands.ItemStatusR\x06status\x12(\n" +
	"\x04item\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x04item\"\xdc\x01\n" +
	"\x13CreateItemsResponse\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.kiapi.common.types.ItemRequestStatusR\x06status\x12N\n" +
	"\rcreated_items\x18\x03 \x03(\v2).kiapi.common.commands.ItemCreationResultR\fcreatedItems\"}\n" +
	"\bGetItems\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x129\n" +
	"\x05types\x18\x02 \x03(\x0e2#.kiapi.common.types.KiCadObjectTypeR\x05types\"\xb5\x01\n" +
	"\x10GetItemsResponse\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.kiapi.common.types.ItemRequestStatusR\x06status\x12*\n" +
	"\x05items\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\x05items\"q\n" +
	"\vUpdateItems\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\x05items\"w\n" +
	"\x10ItemUpdateResult\x129\n" +
	"\x06status\x18\x01 \x01(\v2!.kiapi.common.commands.ItemStatusR\x06status\x12(\n" +
	"\x04item\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x04item\"\xda\x01\n" +
	"\x13UpdateItemsResponse\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.kiapi.common.types.ItemRequestStatusR\x06status\x12L\n" +
	"\rupdated_items\x18\x03 \x03(\v2'.kiapi.common.commands.ItemUpdateResultR\fupdatedItems\"z\n" +
	"\vDeleteItems\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x123\n" +
	"\bitem_ids\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\aitemIds\"\x81\x01\n" +
	"\x12ItemDeletionResult\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x12A\n" +
	"\x06status\x18\x02 \x01(\x0e2).kiapi.common.commands.ItemDeletionStatusR\x06status\"\xdc\x01\n" +
	"\x13DeleteItemsResponse\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.kiapi.common.types.ItemRequestStatusR\x06status\x12N\n" +
	"\rdeleted_items\x18\x03 \x03(\v2).kiapi.common.commands.ItemDeletionResultR\fdeletedItems\"\xb4\x01\n" +
	"\x0eGetBoundingBox\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items\x12:\n" +
	"\x04mode\x18\x03 \x01(\x0e2&.kiapi.common.commands.BoundingBoxModeR\x04mode\"x\n" +
	"\x16GetBoundingBoxResponse\x12.\n" +
	"\x05items\x18\x01 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items\x12.\n" +
	"\x05boxes\x18\x02 \x03(\v2\x18.kiapi.common.types.Box2R\x05boxes\"\x81\x01\n" +
	"\fGetSelection\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x129\n" +
	"\x05types\x18\x02 \x03(\x0e2#.kiapi.common.types.KiCadObjectTypeR\x05types\"?\n" +
	"\x11SelectionResponse\x12*\n" +
	"\x05items\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\x05items\"x\n" +
	"\x0eAddToSelection\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items\"}\n" +
	"\x13RemoveFromSelection\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.kiapi.common.types.KIIDR\x05items\"H\n" +
	"\x0eClearSelection\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\"\xc2\x01\n" +
	"\aHitTest\x126\n" +
	"\x06header\x18\x01 \x01(\v2\x1e.kiapi.common.types.ItemHeaderR\x06header\x12(\n" +
	"\x02id\x18\x02 \x01(\v2\x18.kiapi.common.types.KIIDR\x02id\x127\n" +
	"\bposition\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x12\x1c\n" +
	"\ttolerance\x18\x04 \x01(\x05R\ttolerance\"O\n" +
	"\x0fHitTestResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\x0e2$.kiapi.common.commands.HitTestResultR\x06result\"V\n" +
	"\x11GetTitleBlockInfo\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\"Y\n" +
	"\x14SaveDocumentToString\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\"v\n" +
	"\x15SavedDocumentResponse\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\x12\x1a\n" +
	"\bcontents\x18\x02 \x01(\tR\bcontents\"\x17\n" +
	"\x15SaveSelectionToString\"`\n" +
	"\x16SavedSelectionResponse\x12*\n" +
	"\x03ids\x18\x01 \x03(\v2\x18.kiapi.common.types.KIIDR\x03ids\x12\x1a\n" +
	"\bcontents\x18\x02 \x01(\tR\bcontents\"~\n" +
	"\x1dParseAndCreateItemsFromString\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\x12\x1a\n" +
	"\bcontents\x18\x02 \x01(\tR\bcontents*W\n" +
	"\x0fRunActionStatus\x12\x0f\n" +
	"\vRAS_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06RAS_OK\x10\x01\x12\x0f\n" +
	"\vRAS_INVALID\x10\x02\x12\x16\n" +
	"\x12RAS_FRAME_NOT_OPEN\x10\x03*=\n" +
	"\fCommitAction\x12\x0f\n" +
	"\vCMA_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"CMA_COMMIT\x10\x01\x12\f\n" +
	"\bCMA_DROP\x10\x02*\x93\x01\n" +
	"\x0eItemStatusCode\x12\x0f\n" +
	"\vISC_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06ISC_OK\x10\x01\x12\x14\n" +
	"\x10ISC_INVALID_TYPE\x10\x02\x12\x10\n" +
	"\fISC_EXISTING\x10\x03\x12\x13\n" +
	"\x0fISC_NONEXISTENT\x10\x04\x12\x11\n" +
	"\rISC_IMMUTABLE\x10\x05\x12\x14\n" +
	"\x10ISC_INVALID_DATA\x10\a*Y\n" +
	"\x12ItemDeletionStatus\x12\x0f\n" +
	"\vIDS_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06IDS_OK\x10\x01\x12\x13\n" +
	"\x0fIDS_NONEXISTENT\x10\x02\x12\x11\n" +
	"\rIDS_IMMUTABLE\x10\x03*R\n" +
	"\x0fBoundingBoxMode\x12\x0f\n" +
	"\vBBM_UNKNOWN\x10\x00\x12\x11\n" +
	"\rBBM_ITEM_ONLY\x10\x01\x12\x1b\n" +
	"\x17BBM_ITEM_AND_CHILD_TEXT\x10\x02*=\n" +
	"\rHitTestResult\x12\x0f\n" +
	"\vHTR_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"HTR_NO_HIT\x10\x01\x12\v\n" +
	"\aHTR_HIT\x10\x02B(Z&github.com/kicad/proto/common/commandsb\x06proto3"

var (
	file_common_commands_editor_commands_proto_rawDescOnce sync.Once
	file_common_commands_editor_commands_proto_rawDescData []byte
)

func file_common_commands_editor_commands_proto_rawDescGZIP() []byte {
	file_common_commands_editor_commands_proto_rawDescOnce.Do(func() {
		file_common_commands_editor_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_commands_editor_commands_proto_rawDesc), len(file_common_commands_editor_commands_proto_rawDesc)))
	})
	return file_common_commands_editor_commands_proto_rawDescData
}

var file_common_commands_editor_commands_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_common_commands_editor_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_common_commands_editor_commands_proto_goTypes = []any{
	(RunActionStatus)(0),                  // 0: kiapi.common.commands.RunActionStatus
	(CommitAction)(0),                     // 1: kiapi.common.commands.CommitAction
	(ItemStatusCode)(0),                   // 2: kiapi.common.commands.ItemStatusCode
	(ItemDeletionStatus)(0),               // 3: kiapi.common.commands.ItemDeletionStatus
	(BoundingBoxMode)(0),                  // 4: kiapi.common.commands.BoundingBoxMode
	(HitTestResult)(0),                    // 5: kiapi.common.commands.HitTestResult
	(*RefreshEditor)(nil),                 // 6: kiapi.common.commands.RefreshEditor
	(*GetOpenDocuments)(nil),              // 7: kiapi.common.commands.GetOpenDocuments
	(*GetOpenDocumentsResponse)(nil),      // 8: kiapi.common.commands.GetOpenDocumentsResponse
	(*SaveDocument)(nil),                  // 9: kiapi.common.commands.SaveDocument
	(*SaveOptions)(nil),                   // 10: kiapi.common.commands.SaveOptions
	(*SaveCopyOfDocument)(nil),            // 11: kiapi.common.commands.SaveCopyOfDocument
	(*RevertDocument)(nil),                // 12: kiapi.common.commands.RevertDocument
	(*RunAction)(nil),                     // 13: kiapi.common.commands.RunAction
	(*RunActionResponse)(nil),             // 14: kiapi.common.commands.RunActionResponse
	(*BeginCommit)(nil),                   // 15: kiapi.common.commands.BeginCommit
	(*BeginCommitResponse)(nil),           // 16: kiapi.common.commands.BeginCommitResponse
	(*EndCommit)(nil),                     // 17: kiapi.common.commands.EndCommit
	(*EndCommitResponse)(nil),             // 18: kiapi.common.commands.EndCommitResponse
	(*CreateItems)(nil),                   // 19: kiapi.common.commands.CreateItems
	(*ItemStatus)(nil),                    // 20: kiapi.common.commands.ItemStatus
	(*ItemCreationResult)(nil),            // 21: kiapi.common.commands.ItemCreationResult
	(*CreateItemsResponse)(nil),           // 22: kiapi.common.commands.CreateItemsResponse
	(*GetItems)(nil),                      // 23: kiapi.common.commands.GetItems
	(*GetItemsResponse)(nil),              // 24: kiapi.common.commands.GetItemsResponse
	(*UpdateItems)(nil),                   // 25: kiapi.common.commands.UpdateItems
	(*ItemUpdateResult)(nil),              // 26: kiapi.common.commands.ItemUpdateResult
	(*UpdateItemsResponse)(nil),           // 27: kiapi.common.commands.UpdateItemsResponse
	(*DeleteItems)(nil),                   // 28: kiapi.common.commands.DeleteItems
	(*ItemDeletionResult)(nil),            // 29: kiapi.common.commands.ItemDeletionResult
	(*DeleteItemsResponse)(nil),           // 30: kiapi.common.commands.DeleteItemsResponse
	(*GetBoundingBox)(nil),                // 31: kiapi.common.commands.GetBoundingBox
	(*GetBoundingBoxResponse)(nil),        // 32: kiapi.common.commands.GetBoundingBoxResponse
	(*GetSelection)(nil),                  // 33: kiapi.common.commands.GetSelection
	(*SelectionResponse)(nil),             // 34: kiapi.common.commands.SelectionResponse
	(*AddToSelection)(nil),                // 35: kiapi.common.commands.AddToSelection
	(*RemoveFromSelection)(nil),           // 36: kiapi.common.commands.RemoveFromSelection
	(*ClearSelection)(nil),                // 37: kiapi.common.commands.ClearSelection
	(*HitTest)(nil),                       // 38: kiapi.common.commands.HitTest
	(*HitTestResponse)(nil),               // 39: kiapi.common.commands.HitTestResponse
	(*GetTitleBlockInfo)(nil),             // 40: kiapi.common.commands.GetTitleBlockInfo
	(*SaveDocumentToString)(nil),          // 41: kiapi.common.commands.SaveDocumentToString
	(*SavedDocumentResponse)(nil),         // 42: kiapi.common.commands.SavedDocumentResponse
	(*SaveSelectionToString)(nil),         // 43: kiapi.common.commands.SaveSelectionToString
	(*SavedSelectionResponse)(nil),        // 44: kiapi.common.commands.SavedSelectionResponse
	(*ParseAndCreateItemsFromString)(nil), // 45: kiapi.common.commands.ParseAndCreateItemsFromString
	(types.FrameType)(0),                  // 46: kiapi.common.types.FrameType
	(types.DocumentType)(0),               // 47: kiapi.common.types.DocumentType
	(*types.DocumentSpecifier)(nil),       // 48: kiapi.common.types.DocumentSpecifier
	(*types.KIID)(nil),                    // 49: kiapi.common.types.KIID
	(*types.ItemHeader)(nil),              // 50: kiapi.common.types.ItemHeader
	(*anypb.Any)(nil),                     // 51: google.protobuf.Any
	(types.ItemRequestStatus)(0),          // 52: kiapi.common.types.ItemRequestStatus
	(types.KiCadObjectType)(0),            // 53: kiapi.common.types.KiCadObjectType
	(*types.Box2)(nil),                    // 54: kiapi.common.types.Box2
	(*types.Vector2)(nil),                 // 55: kiapi.common.types.Vector2
}
var file_common_commands_editor_commands_proto_depIdxs = []int32{
	46, // 0: kiapi.common.commands.RefreshEditor.frame:type_name -> kiapi.common.types.FrameType
	47, // 1: kiapi.common.commands.GetOpenDocuments.type:type_name -> kiapi.common.types.DocumentType
	48, // 2: kiapi.common.commands.GetOpenDocumentsResponse.documents:type_name -> kiapi.common.types.DocumentSpecifier
	48, // 3: kiapi.common.commands.SaveDocument.document:type_name -> kiapi.common.types.DocumentSpecifier
	48, // 4: kiapi.common.commands.SaveCopyOfDocument.document:type_name -> kiapi.common.types.DocumentSpecifier
	10, // 5: kiapi.common.commands.SaveCopyOfDocument.options:type_name -> kiapi.common.commands.SaveOptions
	48, // 6: kiapi.common.commands.RevertDocument.document:type_name -> kiapi.common.types.DocumentSpecifier
	0,  // 7: kiapi.common.commands.RunActionResponse.status:type_name -> kiapi.common.commands.RunActionStatus
	49, // 8: kiapi.common.commands.BeginCommitResponse.id:type_name -> kiapi.common.types.KIID
	49, // 9: kiapi.common.commands.EndCommit.id:type_name -> kiapi.common.types.KIID
	1,  // 10: kiapi.common.commands.EndCommit.action:type_name -> kiapi.common.commands.CommitAction
	50, // 11: kiapi.common.commands.CreateItems.header:type_name -> kiapi.common.types.ItemHeader
	51, // 12: kiapi.common.commands.CreateItems.items:type_name -> google.protobuf.Any
	49, // 13: kiapi.common.commands.CreateItems.container:type_name -> kiapi.common.types.KIID
	2,  // 14: kiapi.common.commands.ItemStatus.code:type_name -> kiapi.common.commands.ItemStatusCode
	20, // 15: kiapi.common.commands.ItemCreationResult.status:type_name -> kiapi.common.commands.ItemStatus
	51, // 16: kiapi.common.commands.ItemCreationResult.item:type_name -> google.protobuf.Any
	50, // 17: kiapi.common.commands.CreateItemsResponse.header:type_name -> kiapi.common.types.ItemHeader
	52, // 18: kiapi.common.commands.CreateItemsResponse.status:type_name -> kiapi.common.types.ItemRequestStatus
	21, // 19: kiapi.common.commands.CreateItemsResponse.created_items:type_name -> kiapi.common.commands.ItemCreationResult
	50, // 20: kiapi.common.commands.GetItems.header:type_name -> kiapi.common.types.ItemHeader
	53, // 21: kiapi.common.commands.GetItems.types:type_name -> kiapi.common.types.KiCadObjectType
	50, // 22: kiapi.common.commands.GetItemsResponse.header:type_name -> kiapi.common.types.ItemHeader
	52, // 23: kiapi.common.commands.GetItemsResponse.status:type_name -> kiapi.common.types.ItemRequestStatus
	51, // 24: kiapi.common.commands.GetItemsResponse.items:type_name -> google.protobuf.Any
	50, // 25: kiapi.common.commands.UpdateItems.header:type_name -> kiapi.common.types.ItemHeader
	51, // 26: kiapi.common.commands.UpdateItems.items:type_name -> google.protobuf.Any
	20, // 27: kiapi.common.commands.ItemUpdateResult.status:type_name -> kiapi.common.commands.ItemStatus
	51, // 28: kiapi.common.commands.ItemUpdateResult.item:type_name -> google.protobuf.Any
	50, // 29: kiapi.common.commands.UpdateItemsResponse.header:type_name -> kiapi.common.types.ItemHeader
	52, // 30: kiapi.common.commands.UpdateItemsResponse.status:type_name -> kiapi.common.types.ItemRequestStatus
	26, // 31: kiapi.common.commands.UpdateItemsResponse.updated_items:type_name -> kiapi.common.commands.ItemUpdateResult
	50, // 32: kiapi.common.commands.DeleteItems.header:type_name -> kiapi.common.types.ItemHeader
	49, // 33: kiapi.common.commands.DeleteItems.item_ids:type_name -> kiapi.common.types.KIID
	49, // 34: kiapi.common.commands.ItemDeletionResult.id:type_name -> kiapi.common.types.KIID
	3,  // 35: kiapi.common.commands.ItemDeletionResult.status:type_name -> kiapi.common.commands.ItemDeletionStatus
	50, // 36: kiapi.common.commands.DeleteItemsResponse.header:type_name -> kiapi.common.types.ItemHeader
	52, // 37: kiapi.common.commands.DeleteItemsResponse.status:type_name -> kiapi.common.types.ItemRequestStatus
	29, // 38: kiapi.common.commands.DeleteItemsResponse.deleted_items:type_name -> kiapi.common.commands.ItemDeletionResult
	50, // 39: kiapi.common.commands.GetBoundingBox.header:type_name -> kiapi.common.types.ItemHeader
	49, // 40: kiapi.common.commands.GetBoundingBox.items:type_name -> kiapi.common.types.KIID
	4,  // 41: kiapi.common.commands.GetBoundingBox.mode:type_name -> kiapi.common.commands.BoundingBoxMode
	49, // 42: kiapi.common.commands.GetBoundingBoxResponse.items:type_name -> kiapi.common.types.KIID
	54, // 43: kiapi.common.commands.GetBoundingBoxResponse.boxes:type_name -> kiapi.common.types.Box2
	50, // 44: kiapi.common.commands.GetSelection.header:type_name -> kiapi.common.types.ItemHeader
	53, // 45: kiapi.common.commands.GetSelection.types:type_name -> kiapi.common.types.KiCadObjectType
	51, // 46: kiapi.common.commands.SelectionResponse.items:type_name -> google.protobuf.Any
	50, // 47: kiapi.common.commands.AddToSelection.header:type_name -> kiapi.common.types.ItemHeader
	49, // 48: kiapi.common.commands.AddToSelection.items:type_name -> kiapi.common.types.KIID
	50, // 49: kiapi.common.commands.RemoveFromSelection.header:type_name -> kiapi.common.types.ItemHeader
	49, // 50: kiapi.common.commands.RemoveFromSelection.items:type_name -> kiapi.common.types.KIID
	50, // 51: kiapi.common.commands.ClearSelection.header:type_name -> kiapi.common.types.ItemHeader
	50, // 52: kiapi.common.commands.HitTest.header:type_name -> kiapi.common.types.ItemHeader
	49, // 53: kiapi.common.commands.HitTest.id:type_name -> kiapi.common.types.KIID
	55, // 54: kiapi.common.commands.HitTest.position:type_name -> kiapi.common.types.Vector2
	5,  // 55: kiapi.common.commands.HitTestResponse.result:type_name -> kiapi.common.commands.HitTestResult
	48, // 56: kiapi.common.commands.GetTitleBlockInfo.document:type_name -> kiapi.common.types.DocumentSpecifier
	48, // 57: kiapi.common.commands.SaveDocumentToString.document:type_name -> kiapi.common.types.DocumentSpecifier
	48, // 58: kiapi.common.commands.SavedDocumentResponse.document:type_name -> kiapi.common.types.DocumentSpecifier
	49, // 59: kiapi.common.commands.SavedSelectionResponse.ids:type_name -> kiapi.common.types.KIID
	48, // 60: kiapi.common.commands.ParseAndCreateItemsFromString.document:type_name -> kiapi.common.types.DocumentSpecifier
	61, // [61:61] is the sub-list for method output_type
	61, // [61:61] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_common_commands_editor_commands_proto_init() }
func file_common_commands_editor_commands_proto_init() {
	if File_common_commands_editor_commands_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_commands_editor_commands_proto_rawDesc), len(file_common_commands_editor_commands_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_commands_editor_commands_proto_goTypes,
		DependencyIndexes: file_common_commands_editor_commands_proto_depIdxs,
		EnumInfos:         file_common_commands_editor_commands_proto_enumTypes,
		MessageInfos:      file_common_commands_editor_commands_proto_msgTypes,
	}.Build()
	File_common_commands_editor_commands_proto = out.File
	file_common_commands_editor_commands_proto_goTypes = nil
	file_common_commands_editor_commands_proto_depIdxs = nil
}
