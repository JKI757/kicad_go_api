//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

//
// base_types.proto
// Includes types used in many parts of the API

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/types/base_types.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandStatus int32

const (
	CommandStatus_CS_UNKNOWN CommandStatus = 0
	CommandStatus_CS_OK      CommandStatus = 1 // Command succeeded
	CommandStatus_CS_FAILED  CommandStatus = 2 // Command failed
)

// Enum value maps for CommandStatus.
var (
	CommandStatus_name = map[int32]string{
		0: "CS_UNKNOWN",
		1: "CS_OK",
		2: "CS_FAILED",
	}
	CommandStatus_value = map[string]int32{
		"CS_UNKNOWN": 0,
		"CS_OK":      1,
		"CS_FAILED":  2,
	}
)

func (x CommandStatus) Enum() *CommandStatus {
	p := new(CommandStatus)
	*p = x
	return p
}

func (x CommandStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[0].Descriptor()
}

func (CommandStatus) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[0]
}

func (x CommandStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStatus.Descriptor instead.
func (CommandStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{0}
}

// *
// Some commands are specific to a KiCad window (frame).  This list contains all addressable frames.
type FrameType int32

const (
	FrameType_FT_UNKNOWN              FrameType = 0
	FrameType_FT_PROJECT_MANAGER      FrameType = 1
	FrameType_FT_SCHEMATIC_EDITOR     FrameType = 2
	FrameType_FT_PCB_EDITOR           FrameType = 3
	FrameType_FT_SPICE_SIMULATOR      FrameType = 4
	FrameType_FT_SYMBOL_EDITOR        FrameType = 5
	FrameType_FT_FOOTPRINT_EDITOR     FrameType = 6
	FrameType_FT_DRAWING_SHEET_EDITOR FrameType = 7
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "FT_UNKNOWN",
		1: "FT_PROJECT_MANAGER",
		2: "FT_SCHEMATIC_EDITOR",
		3: "FT_PCB_EDITOR",
		4: "FT_SPICE_SIMULATOR",
		5: "FT_SYMBOL_EDITOR",
		6: "FT_FOOTPRINT_EDITOR",
		7: "FT_DRAWING_SHEET_EDITOR",
	}
	FrameType_value = map[string]int32{
		"FT_UNKNOWN":              0,
		"FT_PROJECT_MANAGER":      1,
		"FT_SCHEMATIC_EDITOR":     2,
		"FT_PCB_EDITOR":           3,
		"FT_SPICE_SIMULATOR":      4,
		"FT_SYMBOL_EDITOR":        5,
		"FT_FOOTPRINT_EDITOR":     6,
		"FT_DRAWING_SHEET_EDITOR": 7,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[1].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[1]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{1}
}

// *
// Identifier for the type of document being targeted by a request
type DocumentType int32

const (
	DocumentType_DOCTYPE_UNKNOWN       DocumentType = 0
	DocumentType_DOCTYPE_SCHEMATIC     DocumentType = 1
	DocumentType_DOCTYPE_SYMBOL        DocumentType = 2
	DocumentType_DOCTYPE_PCB           DocumentType = 3
	DocumentType_DOCTYPE_FOOTPRINT     DocumentType = 4
	DocumentType_DOCTYPE_DRAWING_SHEET DocumentType = 5
	DocumentType_DOCTYPE_PROJECT       DocumentType = 6
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0: "DOCTYPE_UNKNOWN",
		1: "DOCTYPE_SCHEMATIC",
		2: "DOCTYPE_SYMBOL",
		3: "DOCTYPE_PCB",
		4: "DOCTYPE_FOOTPRINT",
		5: "DOCTYPE_DRAWING_SHEET",
		6: "DOCTYPE_PROJECT",
	}
	DocumentType_value = map[string]int32{
		"DOCTYPE_UNKNOWN":       0,
		"DOCTYPE_SCHEMATIC":     1,
		"DOCTYPE_SYMBOL":        2,
		"DOCTYPE_PCB":           3,
		"DOCTYPE_FOOTPRINT":     4,
		"DOCTYPE_DRAWING_SHEET": 5,
		"DOCTYPE_PROJECT":       6,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[2].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[2]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{2}
}

// *
// Status of a request that included an ItemHeader
type ItemRequestStatus int32

const (
	ItemRequestStatus_IRS_UNKNOWN            ItemRequestStatus = 0
	ItemRequestStatus_IRS_OK                 ItemRequestStatus = 1
	ItemRequestStatus_IRS_DOCUMENT_NOT_FOUND ItemRequestStatus = 2 // The given document is not open in KiCad
	ItemRequestStatus_IRS_FIELD_MASK_INVALID ItemRequestStatus = 3 // The given field_mask contains invalid specifiers
)

// Enum value maps for ItemRequestStatus.
var (
	ItemRequestStatus_name = map[int32]string{
		0: "IRS_UNKNOWN",
		1: "IRS_OK",
		2: "IRS_DOCUMENT_NOT_FOUND",
		3: "IRS_FIELD_MASK_INVALID",
	}
	ItemRequestStatus_value = map[string]int32{
		"IRS_UNKNOWN":            0,
		"IRS_OK":                 1,
		"IRS_DOCUMENT_NOT_FOUND": 2,
		"IRS_FIELD_MASK_INVALID": 3,
	}
)

func (x ItemRequestStatus) Enum() *ItemRequestStatus {
	p := new(ItemRequestStatus)
	*p = x
	return p
}

func (x ItemRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[3].Descriptor()
}

func (ItemRequestStatus) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[3]
}

func (x ItemRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRequestStatus.Descriptor instead.
func (ItemRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{3}
}

// Describes whether or not an item is locked for editing or movement
type LockedState int32

const (
	LockedState_LS_UNKNOWN  LockedState = 0
	LockedState_LS_UNLOCKED LockedState = 1
	LockedState_LS_LOCKED   LockedState = 2
)

// Enum value maps for LockedState.
var (
	LockedState_name = map[int32]string{
		0: "LS_UNKNOWN",
		1: "LS_UNLOCKED",
		2: "LS_LOCKED",
	}
	LockedState_value = map[string]int32{
		"LS_UNKNOWN":  0,
		"LS_UNLOCKED": 1,
		"LS_LOCKED":   2,
	}
)

func (x LockedState) Enum() *LockedState {
	p := new(LockedState)
	*p = x
	return p
}

func (x LockedState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockedState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[4].Descriptor()
}

func (LockedState) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[4]
}

func (x LockedState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockedState.Descriptor instead.
func (LockedState) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{4}
}

type GraphicFillType int32

const (
	GraphicFillType_GFT_UNKNOWN  GraphicFillType = 0
	GraphicFillType_GFT_UNFILLED GraphicFillType = 1
	GraphicFillType_GFT_FILLED   GraphicFillType = 2
)

// Enum value maps for GraphicFillType.
var (
	GraphicFillType_name = map[int32]string{
		0: "GFT_UNKNOWN",
		1: "GFT_UNFILLED",
		2: "GFT_FILLED",
	}
	GraphicFillType_value = map[string]int32{
		"GFT_UNKNOWN":  0,
		"GFT_UNFILLED": 1,
		"GFT_FILLED":   2,
	}
)

func (x GraphicFillType) Enum() *GraphicFillType {
	p := new(GraphicFillType)
	*p = x
	return p
}

func (x GraphicFillType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GraphicFillType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[5].Descriptor()
}

func (GraphicFillType) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[5]
}

func (x GraphicFillType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GraphicFillType.Descriptor instead.
func (GraphicFillType) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{5}
}

type AxisAlignment int32

const (
	AxisAlignment_AA_UNKNOWN AxisAlignment = 0
	AxisAlignment_AA_X_AXIS  AxisAlignment = 1
	AxisAlignment_AA_Y_AXIS  AxisAlignment = 2
)

// Enum value maps for AxisAlignment.
var (
	AxisAlignment_name = map[int32]string{
		0: "AA_UNKNOWN",
		1: "AA_X_AXIS",
		2: "AA_Y_AXIS",
	}
	AxisAlignment_value = map[string]int32{
		"AA_UNKNOWN": 0,
		"AA_X_AXIS":  1,
		"AA_Y_AXIS":  2,
	}
)

func (x AxisAlignment) Enum() *AxisAlignment {
	p := new(AxisAlignment)
	*p = x
	return p
}

func (x AxisAlignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AxisAlignment) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[6].Descriptor()
}

func (AxisAlignment) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[6]
}

func (x AxisAlignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AxisAlignment.Descriptor instead.
func (AxisAlignment) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{6}
}

type MapMergeMode int32

const (
	MapMergeMode_MMM_UNKNOWN MapMergeMode = 0
	// The existing map will be merged with the incoming map; keys that are not present in the
	// incoming map will be preserved with their original values
	MapMergeMode_MMM_MERGE MapMergeMode = 1
	// The existing map will be cleared and replaced with the incoming map
	MapMergeMode_MMM_REPLACE MapMergeMode = 2
)

// Enum value maps for MapMergeMode.
var (
	MapMergeMode_name = map[int32]string{
		0: "MMM_UNKNOWN",
		1: "MMM_MERGE",
		2: "MMM_REPLACE",
	}
	MapMergeMode_value = map[string]int32{
		"MMM_UNKNOWN": 0,
		"MMM_MERGE":   1,
		"MMM_REPLACE": 2,
	}
)

func (x MapMergeMode) Enum() *MapMergeMode {
	p := new(MapMergeMode)
	*p = x
	return p
}

func (x MapMergeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapMergeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_types_base_types_proto_enumTypes[7].Descriptor()
}

func (MapMergeMode) Type() protoreflect.EnumType {
	return &file_common_types_base_types_proto_enumTypes[7]
}

func (x MapMergeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapMergeMode.Descriptor instead.
func (MapMergeMode) EnumDescriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{7}
}

type CommandStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        CommandStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=kiapi.common.types.CommandStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandStatusResponse) Reset() {
	*x = CommandStatusResponse{}
	mi := &file_common_types_base_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandStatusResponse) ProtoMessage() {}

func (x *CommandStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandStatusResponse.ProtoReflect.Descriptor instead.
func (*CommandStatusResponse) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{0}
}

func (x *CommandStatusResponse) GetStatus() CommandStatus {
	if x != nil {
		return x.Status
	}
	return CommandStatus_CS_UNKNOWN
}

// *
// Describes a particular version of KiCad
type KiCadVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Major uint32                 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor uint32                 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch uint32                 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	// Full identifier string, potentially containing git hashes, packager-added info, etc.
	FullVersion   string `protobuf:"bytes,4,opt,name=full_version,json=fullVersion,proto3" json:"full_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KiCadVersion) Reset() {
	*x = KiCadVersion{}
	mi := &file_common_types_base_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KiCadVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KiCadVersion) ProtoMessage() {}

func (x *KiCadVersion) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KiCadVersion.ProtoReflect.Descriptor instead.
func (*KiCadVersion) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{1}
}

func (x *KiCadVersion) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *KiCadVersion) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *KiCadVersion) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *KiCadVersion) GetFullVersion() string {
	if x != nil {
		return x.FullVersion
	}
	return ""
}

// *
// Describes a KIID, or UUID of an object in a KiCad editor model.
type KIID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The KIID's value in standard UUID format, stored as a string for easy portability
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KIID) Reset() {
	*x = KIID{}
	mi := &file_common_types_base_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KIID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KIID) ProtoMessage() {}

func (x *KIID) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KIID.ProtoReflect.Descriptor instead.
func (*KIID) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{2}
}

func (x *KIID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Describes a KiCad LIB_ID; a unique identifier for a loaded symbol or footprint
type LibraryIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The library portion of the LIB_ID
	LibraryNickname string `protobuf:"bytes,1,opt,name=library_nickname,json=libraryNickname,proto3" json:"library_nickname,omitempty"`
	// The symbol or footprint name
	EntryName     string `protobuf:"bytes,2,opt,name=entry_name,json=entryName,proto3" json:"entry_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LibraryIdentifier) Reset() {
	*x = LibraryIdentifier{}
	mi := &file_common_types_base_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LibraryIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryIdentifier) ProtoMessage() {}

func (x *LibraryIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryIdentifier.ProtoReflect.Descriptor instead.
func (*LibraryIdentifier) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{3}
}

func (x *LibraryIdentifier) GetLibraryNickname() string {
	if x != nil {
		return x.LibraryNickname
	}
	return ""
}

func (x *LibraryIdentifier) GetEntryName() string {
	if x != nil {
		return x.EntryName
	}
	return ""
}

// *
// Describes a unique sheet in a schematic
type SheetPath struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The canonical path to the sheet.  The first KIID will be the root sheet, etc.
	Path []*KIID `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	// The path converted to a human readable form such as "/", "/child", or "/child/grandchild"
	PathHumanReadable string `protobuf:"bytes,2,opt,name=path_human_readable,json=pathHumanReadable,proto3" json:"path_human_readable,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SheetPath) Reset() {
	*x = SheetPath{}
	mi := &file_common_types_base_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SheetPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetPath) ProtoMessage() {}

func (x *SheetPath) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetPath.ProtoReflect.Descriptor instead.
func (*SheetPath) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{4}
}

func (x *SheetPath) GetPath() []*KIID {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SheetPath) GetPathHumanReadable() string {
	if x != nil {
		return x.PathHumanReadable
	}
	return ""
}

// *
// Describes a KiCad project
type ProjectSpecifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the project (without the kicad_pro extension)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The path to the project directory
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectSpecifier) Reset() {
	*x = ProjectSpecifier{}
	mi := &file_common_types_base_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectSpecifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSpecifier) ProtoMessage() {}

func (x *ProjectSpecifier) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSpecifier.ProtoReflect.Descriptor instead.
func (*ProjectSpecifier) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectSpecifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectSpecifier) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// *
// Describes a document that will be the target of a request
type DocumentSpecifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  DocumentType           `protobuf:"varint,1,opt,name=type,proto3,enum=kiapi.common.types.DocumentType" json:"type,omitempty"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*DocumentSpecifier_LibId
	//	*DocumentSpecifier_SheetPath
	//	*DocumentSpecifier_BoardFilename
	Identifier    isDocumentSpecifier_Identifier `protobuf_oneof:"identifier"`
	Project       *ProjectSpecifier              `protobuf:"bytes,5,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentSpecifier) Reset() {
	*x = DocumentSpecifier{}
	mi := &file_common_types_base_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentSpecifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentSpecifier) ProtoMessage() {}

func (x *DocumentSpecifier) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentSpecifier.ProtoReflect.Descriptor instead.
func (*DocumentSpecifier) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{6}
}

func (x *DocumentSpecifier) GetType() DocumentType {
	if x != nil {
		return x.Type
	}
	return DocumentType_DOCTYPE_UNKNOWN
}

func (x *DocumentSpecifier) GetIdentifier() isDocumentSpecifier_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *DocumentSpecifier) GetLibId() *LibraryIdentifier {
	if x != nil {
		if x, ok := x.Identifier.(*DocumentSpecifier_LibId); ok {
			return x.LibId
		}
	}
	return nil
}

func (x *DocumentSpecifier) GetSheetPath() *SheetPath {
	if x != nil {
		if x, ok := x.Identifier.(*DocumentSpecifier_SheetPath); ok {
			return x.SheetPath
		}
	}
	return nil
}

func (x *DocumentSpecifier) GetBoardFilename() string {
	if x != nil {
		if x, ok := x.Identifier.(*DocumentSpecifier_BoardFilename); ok {
			return x.BoardFilename
		}
	}
	return ""
}

func (x *DocumentSpecifier) GetProject() *ProjectSpecifier {
	if x != nil {
		return x.Project
	}
	return nil
}

type isDocumentSpecifier_Identifier interface {
	isDocumentSpecifier_Identifier()
}

type DocumentSpecifier_LibId struct {
	// If type == DT_SYMBOL or DT_FOOTPRINT, identifies a certain library entry
	LibId *LibraryIdentifier `protobuf:"bytes,2,opt,name=lib_id,json=libId,proto3,oneof"`
}

type DocumentSpecifier_SheetPath struct {
	// If type == DT_SCHEMATIC, identifies a sheet with a given path
	SheetPath *SheetPath `protobuf:"bytes,3,opt,name=sheet_path,json=sheetPath,proto3,oneof"`
}

type DocumentSpecifier_BoardFilename struct {
	// If type == DT_PCB, identifies a PCB with a given filename, e.g. "board.kicad_pcb"
	BoardFilename string `protobuf:"bytes,4,opt,name=board_filename,json=boardFilename,proto3,oneof"`
}

func (*DocumentSpecifier_LibId) isDocumentSpecifier_Identifier() {}

func (*DocumentSpecifier_SheetPath) isDocumentSpecifier_Identifier() {}

func (*DocumentSpecifier_BoardFilename) isDocumentSpecifier_Identifier() {}

// *
// This header is included in requests and responses about item(s) in a document
type ItemHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Which document is this request targeting?
	Document *DocumentSpecifier `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	// Which container within the document is this request targeting?
	// If container is omitted or empty, the document is used as the container.
	Container *KIID `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	// Which fields on the item(s) are included with this request or response
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemHeader) Reset() {
	*x = ItemHeader{}
	mi := &file_common_types_base_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemHeader) ProtoMessage() {}

func (x *ItemHeader) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemHeader.ProtoReflect.Descriptor instead.
func (*ItemHeader) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{7}
}

func (x *ItemHeader) GetDocument() *DocumentSpecifier {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *ItemHeader) GetContainer() *KIID {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *ItemHeader) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Describes a point or distance in 2D space.  All coordinates are in nanometers.
type Vector2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XNm           int64                  `protobuf:"varint,1,opt,name=x_nm,json=xNm,proto3" json:"x_nm,omitempty"`
	YNm           int64                  `protobuf:"varint,2,opt,name=y_nm,json=yNm,proto3" json:"y_nm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector2) Reset() {
	*x = Vector2{}
	mi := &file_common_types_base_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2) ProtoMessage() {}

func (x *Vector2) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2.ProtoReflect.Descriptor instead.
func (*Vector2) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{8}
}

func (x *Vector2) GetXNm() int64 {
	if x != nil {
		return x.XNm
	}
	return 0
}

func (x *Vector2) GetYNm() int64 {
	if x != nil {
		return x.YNm
	}
	return 0
}

// Describes a point or distance in 3D space.  All coordinates are in nanometers.
type Vector3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XNm           int64                  `protobuf:"varint,1,opt,name=x_nm,json=xNm,proto3" json:"x_nm,omitempty"`
	YNm           int64                  `protobuf:"varint,2,opt,name=y_nm,json=yNm,proto3" json:"y_nm,omitempty"`
	ZNm           int64                  `protobuf:"varint,3,opt,name=z_nm,json=zNm,proto3" json:"z_nm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector3) Reset() {
	*x = Vector3{}
	mi := &file_common_types_base_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector3) ProtoMessage() {}

func (x *Vector3) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector3.ProtoReflect.Descriptor instead.
func (*Vector3) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{9}
}

func (x *Vector3) GetXNm() int64 {
	if x != nil {
		return x.XNm
	}
	return 0
}

func (x *Vector3) GetYNm() int64 {
	if x != nil {
		return x.YNm
	}
	return 0
}

func (x *Vector3) GetZNm() int64 {
	if x != nil {
		return x.ZNm
	}
	return 0
}

type Vector3D struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XNm           float64                `protobuf:"fixed64,1,opt,name=x_nm,json=xNm,proto3" json:"x_nm,omitempty"`
	YNm           float64                `protobuf:"fixed64,2,opt,name=y_nm,json=yNm,proto3" json:"y_nm,omitempty"`
	ZNm           float64                `protobuf:"fixed64,3,opt,name=z_nm,json=zNm,proto3" json:"z_nm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector3D) Reset() {
	*x = Vector3D{}
	mi := &file_common_types_base_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector3D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector3D) ProtoMessage() {}

func (x *Vector3D) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector3D.ProtoReflect.Descriptor instead.
func (*Vector3D) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{10}
}

func (x *Vector3D) GetXNm() float64 {
	if x != nil {
		return x.XNm
	}
	return 0
}

func (x *Vector3D) GetYNm() float64 {
	if x != nil {
		return x.YNm
	}
	return 0
}

func (x *Vector3D) GetZNm() float64 {
	if x != nil {
		return x.ZNm
	}
	return 0
}

type Box2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *Vector2               `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Size          *Vector2               `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Box2) Reset() {
	*x = Box2{}
	mi := &file_common_types_base_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Box2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box2) ProtoMessage() {}

func (x *Box2) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box2.ProtoReflect.Descriptor instead.
func (*Box2) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{11}
}

func (x *Box2) GetPosition() *Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Box2) GetSize() *Vector2 {
	if x != nil {
		return x.Size
	}
	return nil
}

// Describes a quantity of distance (size, length, etc).  All coordinates are in nanometers.
type Distance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValueNm       int64                  `protobuf:"varint,1,opt,name=value_nm,json=valueNm,proto3" json:"value_nm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Distance) Reset() {
	*x = Distance{}
	mi := &file_common_types_base_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Distance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distance) ProtoMessage() {}

func (x *Distance) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distance.ProtoReflect.Descriptor instead.
func (*Distance) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{12}
}

func (x *Distance) GetValueNm() int64 {
	if x != nil {
		return x.ValueNm
	}
	return 0
}

// Corresponds to EDA_ANGLE, where the underlying storage is degrees
type Angle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValueDegrees  float64                `protobuf:"fixed64,1,opt,name=value_degrees,json=valueDegrees,proto3" json:"value_degrees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Angle) Reset() {
	*x = Angle{}
	mi := &file_common_types_base_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Angle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Angle) ProtoMessage() {}

func (x *Angle) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Angle.ProtoReflect.Descriptor instead.
func (*Angle) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{13}
}

func (x *Angle) GetValueDegrees() float64 {
	if x != nil {
		return x.ValueDegrees
	}
	return 0
}

// Represents a value from 0.0 to 1.0
type Ratio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ratio) Reset() {
	*x = Ratio{}
	mi := &file_common_types_base_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ratio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ratio) ProtoMessage() {}

func (x *Ratio) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ratio.ProtoReflect.Descriptor instead.
func (*Ratio) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{14}
}

func (x *Ratio) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Corresponds to COLOR4D.  Each color channel is a double from 0.0 to 1.0.
type Color struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R             float64                `protobuf:"fixed64,1,opt,name=r,proto3" json:"r,omitempty"`
	G             float64                `protobuf:"fixed64,2,opt,name=g,proto3" json:"g,omitempty"`
	B             float64                `protobuf:"fixed64,3,opt,name=b,proto3" json:"b,omitempty"`
	A             float64                `protobuf:"fixed64,4,opt,name=a,proto3" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Color) Reset() {
	*x = Color{}
	mi := &file_common_types_base_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{15}
}

func (x *Color) GetR() float64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Color) GetG() float64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Color) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Color) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

// The formulation of arc that is used in KiCad core geometry code.
// Start, midpoint (on the arc) and end are stored.  Angle, center point, etc are calculated.
type ArcStartMidEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Vector2               `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Mid           *Vector2               `protobuf:"bytes,2,opt,name=mid,proto3" json:"mid,omitempty"`
	End           *Vector2               `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArcStartMidEnd) Reset() {
	*x = ArcStartMidEnd{}
	mi := &file_common_types_base_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArcStartMidEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArcStartMidEnd) ProtoMessage() {}

func (x *ArcStartMidEnd) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArcStartMidEnd.ProtoReflect.Descriptor instead.
func (*ArcStartMidEnd) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{16}
}

func (x *ArcStartMidEnd) GetStart() *Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ArcStartMidEnd) GetMid() *Vector2 {
	if x != nil {
		return x.Mid
	}
	return nil
}

func (x *ArcStartMidEnd) GetEnd() *Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

type PolyLineNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Geometry:
	//
	//	*PolyLineNode_Point
	//	*PolyLineNode_Arc
	Geometry      isPolyLineNode_Geometry `protobuf_oneof:"geometry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolyLineNode) Reset() {
	*x = PolyLineNode{}
	mi := &file_common_types_base_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolyLineNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolyLineNode) ProtoMessage() {}

func (x *PolyLineNode) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolyLineNode.ProtoReflect.Descriptor instead.
func (*PolyLineNode) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{17}
}

func (x *PolyLineNode) GetGeometry() isPolyLineNode_Geometry {
	if x != nil {
		return x.Geometry
	}
	return nil
}

func (x *PolyLineNode) GetPoint() *Vector2 {
	if x != nil {
		if x, ok := x.Geometry.(*PolyLineNode_Point); ok {
			return x.Point
		}
	}
	return nil
}

func (x *PolyLineNode) GetArc() *ArcStartMidEnd {
	if x != nil {
		if x, ok := x.Geometry.(*PolyLineNode_Arc); ok {
			return x.Arc
		}
	}
	return nil
}

type isPolyLineNode_Geometry interface {
	isPolyLineNode_Geometry()
}

type PolyLineNode_Point struct {
	Point *Vector2 `protobuf:"bytes,1,opt,name=point,proto3,oneof"`
}

type PolyLineNode_Arc struct {
	Arc *ArcStartMidEnd `protobuf:"bytes,2,opt,name=arc,proto3,oneof"`
}

func (*PolyLineNode_Point) isPolyLineNode_Geometry() {}

func (*PolyLineNode_Arc) isPolyLineNode_Geometry() {}

// Corresponds to class SHAPE_LINE_CHAIN: A closed or open polyline that can include arcs.
// For non-arc cases, each node is a point along the line.  An implicit line segment exists
// between the last and first node if closed is true.  When arcs are present, the arc start and
// end points are not duplicated by point nodes (meaning, for example, a rectangle with rounded
// corners could be represented with four arc nodes and no point nodes).
type PolyLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*PolyLineNode        `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Closed        bool                   `protobuf:"varint,2,opt,name=closed,proto3" json:"closed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolyLine) Reset() {
	*x = PolyLine{}
	mi := &file_common_types_base_types_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolyLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolyLine) ProtoMessage() {}

func (x *PolyLine) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolyLine.ProtoReflect.Descriptor instead.
func (*PolyLine) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{18}
}

func (x *PolyLine) GetNodes() []*PolyLineNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *PolyLine) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type PolygonWithHoles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outline       *PolyLine              `protobuf:"bytes,1,opt,name=outline,proto3" json:"outline,omitempty"`
	Holes         []*PolyLine            `protobuf:"bytes,2,rep,name=holes,proto3" json:"holes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolygonWithHoles) Reset() {
	*x = PolygonWithHoles{}
	mi := &file_common_types_base_types_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolygonWithHoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolygonWithHoles) ProtoMessage() {}

func (x *PolygonWithHoles) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolygonWithHoles.ProtoReflect.Descriptor instead.
func (*PolygonWithHoles) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{19}
}

func (x *PolygonWithHoles) GetOutline() *PolyLine {
	if x != nil {
		return x.Outline
	}
	return nil
}

func (x *PolygonWithHoles) GetHoles() []*PolyLine {
	if x != nil {
		return x.Holes
	}
	return nil
}

// Corresponds to SHAPE_POLY_SET: a set of polygons or polylines
type PolySet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Polygons      []*PolygonWithHoles    `protobuf:"bytes,1,rep,name=polygons,proto3" json:"polygons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolySet) Reset() {
	*x = PolySet{}
	mi := &file_common_types_base_types_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolySet) ProtoMessage() {}

func (x *PolySet) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolySet.ProtoReflect.Descriptor instead.
func (*PolySet) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{20}
}

func (x *PolySet) GetPolygons() []*PolygonWithHoles {
	if x != nil {
		return x.Polygons
	}
	return nil
}

type TextAttributes struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FontName            string                 `protobuf:"bytes,1,opt,name=font_name,json=fontName,proto3" json:"font_name,omitempty"`
	HorizontalAlignment HorizontalAlignment    `protobuf:"varint,2,opt,name=horizontal_alignment,json=horizontalAlignment,proto3,enum=kiapi.common.types.HorizontalAlignment" json:"horizontal_alignment,omitempty"`
	VerticalAlignment   VerticalAlignment      `protobuf:"varint,3,opt,name=vertical_alignment,json=verticalAlignment,proto3,enum=kiapi.common.types.VerticalAlignment" json:"vertical_alignment,omitempty"`
	Angle               *Angle                 `protobuf:"bytes,4,opt,name=angle,proto3" json:"angle,omitempty"`
	LineSpacing         float64                `protobuf:"fixed64,5,opt,name=line_spacing,json=lineSpacing,proto3" json:"line_spacing,omitempty"`
	StrokeWidth         *Distance              `protobuf:"bytes,6,opt,name=stroke_width,json=strokeWidth,proto3" json:"stroke_width,omitempty"`
	Italic              bool                   `protobuf:"varint,7,opt,name=italic,proto3" json:"italic,omitempty"`
	Bold                bool                   `protobuf:"varint,8,opt,name=bold,proto3" json:"bold,omitempty"`
	Underlined          bool                   `protobuf:"varint,9,opt,name=underlined,proto3" json:"underlined,omitempty"`
	// Deprecated since 9.0.1 (text items are now always visible, only Fields can be hidden)
	Visible       bool     `protobuf:"varint,10,opt,name=visible,proto3" json:"visible,omitempty"`
	Mirrored      bool     `protobuf:"varint,11,opt,name=mirrored,proto3" json:"mirrored,omitempty"`
	Multiline     bool     `protobuf:"varint,12,opt,name=multiline,proto3" json:"multiline,omitempty"`
	KeepUpright   bool     `protobuf:"varint,13,opt,name=keep_upright,json=keepUpright,proto3" json:"keep_upright,omitempty"`
	Size          *Vector2 `protobuf:"bytes,14,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextAttributes) Reset() {
	*x = TextAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextAttributes) ProtoMessage() {}

func (x *TextAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextAttributes.ProtoReflect.Descriptor instead.
func (*TextAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{21}
}

func (x *TextAttributes) GetFontName() string {
	if x != nil {
		return x.FontName
	}
	return ""
}

func (x *TextAttributes) GetHorizontalAlignment() HorizontalAlignment {
	if x != nil {
		return x.HorizontalAlignment
	}
	return HorizontalAlignment_HA_UNKNOWN
}

func (x *TextAttributes) GetVerticalAlignment() VerticalAlignment {
	if x != nil {
		return x.VerticalAlignment
	}
	return VerticalAlignment_VA_UNKNOWN
}

func (x *TextAttributes) GetAngle() *Angle {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *TextAttributes) GetLineSpacing() float64 {
	if x != nil {
		return x.LineSpacing
	}
	return 0
}

func (x *TextAttributes) GetStrokeWidth() *Distance {
	if x != nil {
		return x.StrokeWidth
	}
	return nil
}

func (x *TextAttributes) GetItalic() bool {
	if x != nil {
		return x.Italic
	}
	return false
}

func (x *TextAttributes) GetBold() bool {
	if x != nil {
		return x.Bold
	}
	return false
}

func (x *TextAttributes) GetUnderlined() bool {
	if x != nil {
		return x.Underlined
	}
	return false
}

func (x *TextAttributes) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *TextAttributes) GetMirrored() bool {
	if x != nil {
		return x.Mirrored
	}
	return false
}

func (x *TextAttributes) GetMultiline() bool {
	if x != nil {
		return x.Multiline
	}
	return false
}

func (x *TextAttributes) GetKeepUpright() bool {
	if x != nil {
		return x.KeepUpright
	}
	return false
}

func (x *TextAttributes) GetSize() *Vector2 {
	if x != nil {
		return x.Size
	}
	return nil
}

type Text struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reserved for future use; base text objects don't have IDs right now
	// kiapi.common.types.KIID           id         = 1;
	Position      *Vector2        `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Attributes    *TextAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Text          string          `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Hyperlink     string          `protobuf:"bytes,6,opt,name=hyperlink,proto3" json:"hyperlink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_common_types_base_types_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{22}
}

func (x *Text) GetPosition() *Vector2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Text) GetAttributes() *TextAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Text) GetHyperlink() string {
	if x != nil {
		return x.Hyperlink
	}
	return ""
}

type TextBox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopLeft       *Vector2               `protobuf:"bytes,2,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	BottomRight   *Vector2               `protobuf:"bytes,3,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
	Attributes    *TextAttributes        `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Text          string                 `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextBox) Reset() {
	*x = TextBox{}
	mi := &file_common_types_base_types_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextBox) ProtoMessage() {}

func (x *TextBox) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextBox.ProtoReflect.Descriptor instead.
func (*TextBox) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{23}
}

func (x *TextBox) GetTopLeft() *Vector2 {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *TextBox) GetBottomRight() *Vector2 {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *TextBox) GetAttributes() *TextAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TextBox) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type StrokeAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         *Distance              `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	Style         StrokeLineStyle        `protobuf:"varint,2,opt,name=style,proto3,enum=kiapi.common.types.StrokeLineStyle" json:"style,omitempty"`
	Color         *Color                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrokeAttributes) Reset() {
	*x = StrokeAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrokeAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrokeAttributes) ProtoMessage() {}

func (x *StrokeAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrokeAttributes.ProtoReflect.Descriptor instead.
func (*StrokeAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{24}
}

func (x *StrokeAttributes) GetWidth() *Distance {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *StrokeAttributes) GetStyle() StrokeLineStyle {
	if x != nil {
		return x.Style
	}
	return StrokeLineStyle_SLS_UNKNOWN
}

func (x *StrokeAttributes) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type GraphicFillAttributes struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FillType GraphicFillType        `protobuf:"varint,1,opt,name=fill_type,json=fillType,proto3,enum=kiapi.common.types.GraphicFillType" json:"fill_type,omitempty"`
	// Color of the fill (not used in board and footprints)
	Color         *Color `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicFillAttributes) Reset() {
	*x = GraphicFillAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicFillAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicFillAttributes) ProtoMessage() {}

func (x *GraphicFillAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicFillAttributes.ProtoReflect.Descriptor instead.
func (*GraphicFillAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{25}
}

func (x *GraphicFillAttributes) GetFillType() GraphicFillType {
	if x != nil {
		return x.FillType
	}
	return GraphicFillType_GFT_UNKNOWN
}

func (x *GraphicFillAttributes) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

type GraphicAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stroke        *StrokeAttributes      `protobuf:"bytes,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	Fill          *GraphicFillAttributes `protobuf:"bytes,2,opt,name=fill,proto3" json:"fill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicAttributes) Reset() {
	*x = GraphicAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicAttributes) ProtoMessage() {}

func (x *GraphicAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicAttributes.ProtoReflect.Descriptor instead.
func (*GraphicAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{26}
}

func (x *GraphicAttributes) GetStroke() *StrokeAttributes {
	if x != nil {
		return x.Stroke
	}
	return nil
}

func (x *GraphicAttributes) GetFill() *GraphicFillAttributes {
	if x != nil {
		return x.Fill
	}
	return nil
}

type GraphicSegmentAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Vector2               `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *Vector2               `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicSegmentAttributes) Reset() {
	*x = GraphicSegmentAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicSegmentAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicSegmentAttributes) ProtoMessage() {}

func (x *GraphicSegmentAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicSegmentAttributes.ProtoReflect.Descriptor instead.
func (*GraphicSegmentAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{27}
}

func (x *GraphicSegmentAttributes) GetStart() *Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GraphicSegmentAttributes) GetEnd() *Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

type GraphicRectangleAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopLeft       *Vector2               `protobuf:"bytes,1,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	BottomRight   *Vector2               `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicRectangleAttributes) Reset() {
	*x = GraphicRectangleAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicRectangleAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicRectangleAttributes) ProtoMessage() {}

func (x *GraphicRectangleAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicRectangleAttributes.ProtoReflect.Descriptor instead.
func (*GraphicRectangleAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{28}
}

func (x *GraphicRectangleAttributes) GetTopLeft() *Vector2 {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *GraphicRectangleAttributes) GetBottomRight() *Vector2 {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

type GraphicArcAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Vector2               `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Mid           *Vector2               `protobuf:"bytes,2,opt,name=mid,proto3" json:"mid,omitempty"`
	End           *Vector2               `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicArcAttributes) Reset() {
	*x = GraphicArcAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicArcAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicArcAttributes) ProtoMessage() {}

func (x *GraphicArcAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicArcAttributes.ProtoReflect.Descriptor instead.
func (*GraphicArcAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{29}
}

func (x *GraphicArcAttributes) GetStart() *Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GraphicArcAttributes) GetMid() *Vector2 {
	if x != nil {
		return x.Mid
	}
	return nil
}

func (x *GraphicArcAttributes) GetEnd() *Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

type GraphicCircleAttributes struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Center *Vector2               `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	// A point on the radius of the circle.  This is stored instead of just a radius so that the point
	// by which the user can adjust the circle radius is persisted.
	RadiusPoint   *Vector2 `protobuf:"bytes,2,opt,name=radius_point,json=radiusPoint,proto3" json:"radius_point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicCircleAttributes) Reset() {
	*x = GraphicCircleAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicCircleAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicCircleAttributes) ProtoMessage() {}

func (x *GraphicCircleAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicCircleAttributes.ProtoReflect.Descriptor instead.
func (*GraphicCircleAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{30}
}

func (x *GraphicCircleAttributes) GetCenter() *Vector2 {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *GraphicCircleAttributes) GetRadiusPoint() *Vector2 {
	if x != nil {
		return x.RadiusPoint
	}
	return nil
}

type GraphicBezierAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Vector2               `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Control1      *Vector2               `protobuf:"bytes,2,opt,name=control1,proto3" json:"control1,omitempty"`
	Control2      *Vector2               `protobuf:"bytes,3,opt,name=control2,proto3" json:"control2,omitempty"`
	End           *Vector2               `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicBezierAttributes) Reset() {
	*x = GraphicBezierAttributes{}
	mi := &file_common_types_base_types_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicBezierAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicBezierAttributes) ProtoMessage() {}

func (x *GraphicBezierAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicBezierAttributes.ProtoReflect.Descriptor instead.
func (*GraphicBezierAttributes) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{31}
}

func (x *GraphicBezierAttributes) GetStart() *Vector2 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GraphicBezierAttributes) GetControl1() *Vector2 {
	if x != nil {
		return x.Control1
	}
	return nil
}

func (x *GraphicBezierAttributes) GetControl2() *Vector2 {
	if x != nil {
		return x.Control2
	}
	return nil
}

func (x *GraphicBezierAttributes) GetEnd() *Vector2 {
	if x != nil {
		return x.End
	}
	return nil
}

type GraphicShape struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reserved for future use; base EDA_SHAPE doesn't have an ID or locked state right now
	// KIID              id         = 1;
	// LockedState       locked     = 2;
	Attributes *GraphicAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Types that are valid to be assigned to Geometry:
	//
	//	*GraphicShape_Segment
	//	*GraphicShape_Rectangle
	//	*GraphicShape_Arc
	//	*GraphicShape_Circle
	//	*GraphicShape_Polygon
	//	*GraphicShape_Bezier
	Geometry      isGraphicShape_Geometry `protobuf_oneof:"geometry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GraphicShape) Reset() {
	*x = GraphicShape{}
	mi := &file_common_types_base_types_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GraphicShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphicShape) ProtoMessage() {}

func (x *GraphicShape) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphicShape.ProtoReflect.Descriptor instead.
func (*GraphicShape) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{32}
}

func (x *GraphicShape) GetAttributes() *GraphicAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GraphicShape) GetGeometry() isGraphicShape_Geometry {
	if x != nil {
		return x.Geometry
	}
	return nil
}

func (x *GraphicShape) GetSegment() *GraphicSegmentAttributes {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Segment); ok {
			return x.Segment
		}
	}
	return nil
}

func (x *GraphicShape) GetRectangle() *GraphicRectangleAttributes {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Rectangle); ok {
			return x.Rectangle
		}
	}
	return nil
}

func (x *GraphicShape) GetArc() *GraphicArcAttributes {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Arc); ok {
			return x.Arc
		}
	}
	return nil
}

func (x *GraphicShape) GetCircle() *GraphicCircleAttributes {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Circle); ok {
			return x.Circle
		}
	}
	return nil
}

func (x *GraphicShape) GetPolygon() *PolySet {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Polygon); ok {
			return x.Polygon
		}
	}
	return nil
}

func (x *GraphicShape) GetBezier() *GraphicBezierAttributes {
	if x != nil {
		if x, ok := x.Geometry.(*GraphicShape_Bezier); ok {
			return x.Bezier
		}
	}
	return nil
}

type isGraphicShape_Geometry interface {
	isGraphicShape_Geometry()
}

type GraphicShape_Segment struct {
	Segment *GraphicSegmentAttributes `protobuf:"bytes,4,opt,name=segment,proto3,oneof"`
}

type GraphicShape_Rectangle struct {
	Rectangle *GraphicRectangleAttributes `protobuf:"bytes,5,opt,name=rectangle,proto3,oneof"`
}

type GraphicShape_Arc struct {
	Arc *GraphicArcAttributes `protobuf:"bytes,6,opt,name=arc,proto3,oneof"`
}

type GraphicShape_Circle struct {
	Circle *GraphicCircleAttributes `protobuf:"bytes,7,opt,name=circle,proto3,oneof"`
}

type GraphicShape_Polygon struct {
	Polygon *PolySet `protobuf:"bytes,8,opt,name=polygon,proto3,oneof"`
}

type GraphicShape_Bezier struct {
	Bezier *GraphicBezierAttributes `protobuf:"bytes,9,opt,name=bezier,proto3,oneof"`
}

func (*GraphicShape_Segment) isGraphicShape_Geometry() {}

func (*GraphicShape_Rectangle) isGraphicShape_Geometry() {}

func (*GraphicShape_Arc) isGraphicShape_Geometry() {}

func (*GraphicShape_Circle) isGraphicShape_Geometry() {}

func (*GraphicShape_Polygon) isGraphicShape_Geometry() {}

func (*GraphicShape_Bezier) isGraphicShape_Geometry() {}

// A SHAPE_COMPOUND in KiCad
type CompoundShape struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shapes        []*GraphicShape        `protobuf:"bytes,1,rep,name=shapes,proto3" json:"shapes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompoundShape) Reset() {
	*x = CompoundShape{}
	mi := &file_common_types_base_types_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompoundShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompoundShape) ProtoMessage() {}

func (x *CompoundShape) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompoundShape.ProtoReflect.Descriptor instead.
func (*CompoundShape) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{33}
}

func (x *CompoundShape) GetShapes() []*GraphicShape {
	if x != nil {
		return x.Shapes
	}
	return nil
}

// The text strings that can be set in a drawing sheet for the title block
type TitleBlockInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Revision      string                 `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	Company       string                 `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Comment1      string                 `protobuf:"bytes,5,opt,name=comment1,proto3" json:"comment1,omitempty"`
	Comment2      string                 `protobuf:"bytes,6,opt,name=comment2,proto3" json:"comment2,omitempty"`
	Comment3      string                 `protobuf:"bytes,7,opt,name=comment3,proto3" json:"comment3,omitempty"`
	Comment4      string                 `protobuf:"bytes,8,opt,name=comment4,proto3" json:"comment4,omitempty"`
	Comment5      string                 `protobuf:"bytes,9,opt,name=comment5,proto3" json:"comment5,omitempty"`
	Comment6      string                 `protobuf:"bytes,10,opt,name=comment6,proto3" json:"comment6,omitempty"`
	Comment7      string                 `protobuf:"bytes,11,opt,name=comment7,proto3" json:"comment7,omitempty"`
	Comment8      string                 `protobuf:"bytes,12,opt,name=comment8,proto3" json:"comment8,omitempty"`
	Comment9      string                 `protobuf:"bytes,13,opt,name=comment9,proto3" json:"comment9,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleBlockInfo) Reset() {
	*x = TitleBlockInfo{}
	mi := &file_common_types_base_types_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleBlockInfo) ProtoMessage() {}

func (x *TitleBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_types_base_types_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleBlockInfo.ProtoReflect.Descriptor instead.
func (*TitleBlockInfo) Descriptor() ([]byte, []int) {
	return file_common_types_base_types_proto_rawDescGZIP(), []int{34}
}

func (x *TitleBlockInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TitleBlockInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TitleBlockInfo) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *TitleBlockInfo) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *TitleBlockInfo) GetComment1() string {
	if x != nil {
		return x.Comment1
	}
	return ""
}

func (x *TitleBlockInfo) GetComment2() string {
	if x != nil {
		return x.Comment2
	}
	return ""
}

func (x *TitleBlockInfo) GetComment3() string {
	if x != nil {
		return x.Comment3
	}
	return ""
}

func (x *TitleBlockInfo) GetComment4() string {
	if x != nil {
		return x.Comment4
	}
	return ""
}

func (x *TitleBlockInfo) GetComment5() string {
	if x != nil {
		return x.Comment5
	}
	return ""
}

func (x *TitleBlockInfo) GetComment6() string {
	if x != nil {
		return x.Comment6
	}
	return ""
}

func (x *TitleBlockInfo) GetComment7() string {
	if x != nil {
		return x.Comment7
	}
	return ""
}

func (x *TitleBlockInfo) GetComment8() string {
	if x != nil {
		return x.Comment8
	}
	return ""
}

func (x *TitleBlockInfo) GetComment9() string {
	if x != nil {
		return x.Comment9
	}
	return ""
}

var File_common_types_base_types_proto protoreflect.FileDescriptor

const file_common_types_base_types_proto_rawDesc = "" +
	"\n" +
	"\x1dcommon/types/base_types.proto\x12\x12kiapi.common.types\x1a google/protobuf/field_mask.proto\x1a\x18common/types/enums.proto\"R\n" +
	"\x15CommandStatusResponse\x129\n" +
	"\x06status\x18\x01 \x01(\x0e2!.kiapi.common.types.CommandStatusR\x06status\"s\n" +
	"\fKiCadVersion\x12\x14\n" +
	"\x05major\x18\x01 \x01(\rR\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\rR\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\rR\x05patch\x12!\n" +
	"\ffull_version\x18\x04 \x01(\tR\vfullVersion\"\x1c\n" +
	"\x04KIID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"]\n" +
	"\x11LibraryIdentifier\x12)\n" +
	"\x10library_nickname\x18\x01 \x01(\tR\x0flibraryNickname\x12\x1d\n" +
	"\n" +
	"entry_name\x18\x02 \x01(\tR\tentryName\"i\n" +
	"\tSheetPath\x12,\n" +
	"\x04path\x18\x01 \x03(\v2\x18.kiapi.common.types.KIIDR\x04path\x12.\n" +
	"\x13path_human_readable\x18\x02 \x01(\tR\x11pathHumanReadable\":\n" +
	"\x10ProjectSpecifier\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"\xc0\x02\n" +
	"\x11DocumentSpecifier\x124\n" +
	"\x04type\x18\x01 \x01(\x0e2 .kiapi.common.types.DocumentTypeR\x04type\x12>\n" +
	"\x06lib_id\x18\x02 \x01(\v2%.kiapi.common.types.LibraryIdentifierH\x00R\x05libId\x12>\n" +
	"\n" +
	"sheet_path\x18\x03 \x01(\v2\x1d.kiapi.common.types.SheetPathH\x00R\tsheetPath\x12'\n" +
	"\x0eboard_filename\x18\x04 \x01(\tH\x00R\rboardFilename\x12>\n" +
	"\aproject\x18\x05 \x01(\v2$.kiapi.common.types.ProjectSpecifierR\aprojectB\f\n" +
	"\n" +
	"identifier\"\xc2\x01\n" +
	"\n" +
	"ItemHeader\x12A\n" +
	"\bdocument\x18\x01 \x01(\v2%.kiapi.common.types.DocumentSpecifierR\bdocument\x126\n" +
	"\tcontainer\x18\x02 \x01(\v2\x18.kiapi.common.types.KIIDR\tcontainer\x129\n" +
	"\n" +
	"field_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"/\n" +
	"\aVector2\x12\x11\n" +
	"\x04x_nm\x18\x01 \x01(\x03R\x03xNm\x12\x11\n" +
	"\x04y_nm\x18\x02 \x01(\x03R\x03yNm\"B\n" +
	"\aVector3\x12\x11\n" +
	"\x04x_nm\x18\x01 \x01(\x03R\x03xNm\x12\x11\n" +
	"\x04y_nm\x18\x02 \x01(\x03R\x03yNm\x12\x11\n" +
	"\x04z_nm\x18\x03 \x01(\x03R\x03zNm\"C\n" +
	"\bVector3D\x12\x11\n" +
	"\x04x_nm\x18\x01 \x01(\x01R\x03xNm\x12\x11\n" +
	"\x04y_nm\x18\x02 \x01(\x01R\x03yNm\x12\x11\n" +
	"\x04z_nm\x18\x03 \x01(\x01R\x03zNm\"p\n" +
	"\x04Box2\x127\n" +
	"\bposition\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x12/\n" +
	"\x04size\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x04size\"%\n" +
	"\bDistance\x12\x19\n" +
	"\bvalue_nm\x18\x01 \x01(\x03R\avalueNm\",\n" +
	"\x05Angle\x12#\n" +
	"\rvalue_degrees\x18\x01 \x01(\x01R\fvalueDegrees\"\x1d\n" +
	"\x05Ratio\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x01R\x05value\"?\n" +
	"\x05Color\x12\f\n" +
	"\x01r\x18\x01 \x01(\x01R\x01r\x12\f\n" +
	"\x01g\x18\x02 \x01(\x01R\x01g\x12\f\n" +
	"\x01b\x18\x03 \x01(\x01R\x01b\x12\f\n" +
	"\x01a\x18\x04 \x01(\x01R\x01a\"\xa1\x01\n" +
	"\x0eArcStartMidEnd\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03mid\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03mid\x12-\n" +
	"\x03end\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\"\x87\x01\n" +
	"\fPolyLineNode\x123\n" +
	"\x05point\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2H\x00R\x05point\x126\n" +
	"\x03arc\x18\x02 \x01(\v2\".kiapi.common.types.ArcStartMidEndH\x00R\x03arcB\n" +
	"\n" +
	"\bgeometry\"Z\n" +
	"\bPolyLine\x126\n" +
	"\x05nodes\x18\x01 \x03(\v2 .kiapi.common.types.PolyLineNodeR\x05nodes\x12\x16\n" +
	"\x06closed\x18\x02 \x01(\bR\x06closed\"~\n" +
	"\x10PolygonWithHoles\x126\n" +
	"\aoutline\x18\x01 \x01(\v2\x1c.kiapi.common.types.PolyLineR\aoutline\x122\n" +
	"\x05holes\x18\x02 \x03(\v2\x1c.kiapi.common.types.PolyLineR\x05holes\"K\n" +
	"\aPolySet\x12@\n" +
	"\bpolygons\x18\x01 \x03(\v2$.kiapi.common.types.PolygonWithHolesR\bpolygons\"\xe8\x04\n" +
	"\x0eTextAttributes\x12\x1b\n" +
	"\tfont_name\x18\x01 \x01(\tR\bfontName\x12Z\n" +
	"\x14horizontal_alignment\x18\x02 \x01(\x0e2'.kiapi.common.types.HorizontalAlignmentR\x13horizontalAlignment\x12T\n" +
	"\x12vertical_alignment\x18\x03 \x01(\x0e2%.kiapi.common.types.VerticalAlignmentR\x11verticalAlignment\x12/\n" +
	"\x05angle\x18\x04 \x01(\v2\x19.kiapi.common.types.AngleR\x05angle\x12!\n" +
	"\fline_spacing\x18\x05 \x01(\x01R\vlineSpacing\x12?\n" +
	"\fstroke_width\x18\x06 \x01(\v2\x1c.kiapi.common.types.DistanceR\vstrokeWidth\x12\x16\n" +
	"\x06italic\x18\a \x01(\bR\x06italic\x12\x12\n" +
	"\x04bold\x18\b \x01(\bR\x04bold\x12\x1e\n" +
	"\n" +
	"underlined\x18\t \x01(\bR\n" +
	"underlined\x12\x18\n" +
	"\avisible\x18\n" +
	" \x01(\bR\avisible\x12\x1a\n" +
	"\bmirrored\x18\v \x01(\bR\bmirrored\x12\x1c\n" +
	"\tmultiline\x18\f \x01(\bR\tmultiline\x12!\n" +
	"\fkeep_upright\x18\r \x01(\bR\vkeepUpright\x12/\n" +
	"\x04size\x18\x0e \x01(\v2\x1b.kiapi.common.types.Vector2R\x04size\"\xb5\x01\n" +
	"\x04Text\x127\n" +
	"\bposition\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\bposition\x12B\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2\".kiapi.common.types.TextAttributesR\n" +
	"attributes\x12\x12\n" +
	"\x04text\x18\x05 \x01(\tR\x04text\x12\x1c\n" +
	"\thyperlink\x18\x06 \x01(\tR\thyperlink\"\xd9\x01\n" +
	"\aTextBox\x126\n" +
	"\btop_left\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\atopLeft\x12>\n" +
	"\fbottom_right\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\vbottomRight\x12B\n" +
	"\n" +
	"attributes\x18\x04 \x01(\v2\".kiapi.common.types.TextAttributesR\n" +
	"attributes\x12\x12\n" +
	"\x04text\x18\x06 \x01(\tR\x04text\"\xb2\x01\n" +
	"\x10StrokeAttributes\x122\n" +
	"\x05width\x18\x01 \x01(\v2\x1c.kiapi.common.types.DistanceR\x05width\x129\n" +
	"\x05style\x18\x02 \x01(\x0e2#.kiapi.common.types.StrokeLineStyleR\x05style\x12/\n" +
	"\x05color\x18\x03 \x01(\v2\x19.kiapi.common.types.ColorR\x05color\"\x8a\x01\n" +
	"\x15GraphicFillAttributes\x12@\n" +
	"\tfill_type\x18\x01 \x01(\x0e2#.kiapi.common.types.GraphicFillTypeR\bfillType\x12/\n" +
	"\x05color\x18\x02 \x01(\v2\x19.kiapi.common.types.ColorR\x05color\"\x90\x01\n" +
	"\x11GraphicAttributes\x12<\n" +
	"\x06stroke\x18\x01 \x01(\v2$.kiapi.common.types.StrokeAttributesR\x06stroke\x12=\n" +
	"\x04fill\x18\x02 \x01(\v2).kiapi.common.types.GraphicFillAttributesR\x04fill\"|\n" +
	"\x18GraphicSegmentAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03end\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\"\x94\x01\n" +
	"\x1aGraphicRectangleAttributes\x126\n" +
	"\btop_left\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\atopLeft\x12>\n" +
	"\fbottom_right\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\vbottomRight\"\xa7\x01\n" +
	"\x14GraphicArcAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x12-\n" +
	"\x03mid\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03mid\x12-\n" +
	"\x03end\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\"\x8e\x01\n" +
	"\x17GraphicCircleAttributes\x123\n" +
	"\x06center\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x06center\x12>\n" +
	"\fradius_point\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\vradiusPoint\"\xed\x01\n" +
	"\x17GraphicBezierAttributes\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x1b.kiapi.common.types.Vector2R\x05start\x127\n" +
	"\bcontrol1\x18\x02 \x01(\v2\x1b.kiapi.common.types.Vector2R\bcontrol1\x127\n" +
	"\bcontrol2\x18\x03 \x01(\v2\x1b.kiapi.common.types.Vector2R\bcontrol2\x12-\n" +
	"\x03end\x18\x04 \x01(\v2\x1b.kiapi.common.types.Vector2R\x03end\"\x80\x04\n" +
	"\fGraphicShape\x12E\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2%.kiapi.common.types.GraphicAttributesR\n" +
	"attributes\x12H\n" +
	"\asegment\x18\x04 \x01(\v2,.kiapi.common.types.GraphicSegmentAttributesH\x00R\asegment\x12N\n" +
	"\trectangle\x18\x05 \x01(\v2..kiapi.common.types.GraphicRectangleAttributesH\x00R\trectangle\x12<\n" +
	"\x03arc\x18\x06 \x01(\v2(.kiapi.common.types.GraphicArcAttributesH\x00R\x03arc\x12E\n" +
	"\x06circle\x18\a \x01(\v2+.kiapi.common.types.GraphicCircleAttributesH\x00R\x06circle\x127\n" +
	"\apolygon\x18\b \x01(\v2\x1b.kiapi.common.types.PolySetH\x00R\apolygon\x12E\n" +
	"\x06bezier\x18\t \x01(\v2+.kiapi.common.types.GraphicBezierAttributesH\x00R\x06bezierB\n" +
	"\n" +
	"\bgeometry\"I\n" +
	"\rCompoundShape\x128\n" +
	"\x06shapes\x18\x01 \x03(\v2 .kiapi.common.types.GraphicShapeR\x06shapes\"\xec\x02\n" +
	"\x0eTitleBlockInfo\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x12\x1a\n" +
	"\brevision\x18\x03 \x01(\tR\brevision\x12\x18\n" +
	"\acompany\x18\x04 \x01(\tR\acompany\x12\x1a\n" +
	"\bcomment1\x18\x05 \x01(\tR\bcomment1\x12\x1a\n" +
	"\bcomment2\x18\x06 \x01(\tR\bcomment2\x12\x1a\n" +
	"\bcomment3\x18\a \x01(\tR\bcomment3\x12\x1a\n" +
	"\bcomment4\x18\b \x01(\tR\bcomment4\x12\x1a\n" +
	"\bcomment5\x18\t \x01(\tR\bcomment5\x12\x1a\n" +
	"\bcomment6\x18\n" +
	" \x01(\tR\bcomment6\x12\x1a\n" +
	"\bcomment7\x18\v \x01(\tR\bcomment7\x12\x1a\n" +
	"\bcomment8\x18\f \x01(\tR\bcomment8\x12\x1a\n" +
	"\bcomment9\x18\r \x01(\tR\bcomment9*9\n" +
	"\rCommandStatus\x12\x0e\n" +
	"\n" +
	"CS_UNKNOWN\x10\x00\x12\t\n" +
	"\x05CS_OK\x10\x01\x12\r\n" +
	"\tCS_FAILED\x10\x02*\xc3\x01\n" +
	"\tFrameType\x12\x0e\n" +
	"\n" +
	"FT_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12FT_PROJECT_MANAGER\x10\x01\x12\x17\n" +
	"\x13FT_SCHEMATIC_EDITOR\x10\x02\x12\x11\n" +
	"\rFT_PCB_EDITOR\x10\x03\x12\x16\n" +
	"\x12FT_SPICE_SIMULATOR\x10\x04\x12\x14\n" +
	"\x10FT_SYMBOL_EDITOR\x10\x05\x12\x17\n" +
	"\x13FT_FOOTPRINT_EDITOR\x10\x06\x12\x1b\n" +
	"\x17FT_DRAWING_SHEET_EDITOR\x10\a*\xa6\x01\n" +
	"\fDocumentType\x12\x13\n" +
	"\x0fDOCTYPE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11DOCTYPE_SCHEMATIC\x10\x01\x12\x12\n" +
	"\x0eDOCTYPE_SYMBOL\x10\x02\x12\x0f\n" +
	"\vDOCTYPE_PCB\x10\x03\x12\x15\n" +
	"\x11DOCTYPE_FOOTPRINT\x10\x04\x12\x19\n" +
	"\x15DOCTYPE_DRAWING_SHEET\x10\x05\x12\x13\n" +
	"\x0fDOCTYPE_PROJECT\x10\x06*h\n" +
	"\x11ItemRequestStatus\x12\x0f\n" +
	"\vIRS_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06IRS_OK\x10\x01\x12\x1a\n" +
	"\x16IRS_DOCUMENT_NOT_FOUND\x10\x02\x12\x1a\n" +
	"\x16IRS_FIELD_MASK_INVALID\x10\x03*=\n" +
	"\vLockedState\x12\x0e\n" +
	"\n" +
	"LS_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vLS_UNLOCKED\x10\x01\x12\r\n" +
	"\tLS_LOCKED\x10\x02*D\n" +
	"\x0fGraphicFillType\x12\x0f\n" +
	"\vGFT_UNKNOWN\x10\x00\x12\x10\n" +
	"\fGFT_UNFILLED\x10\x01\x12\x0e\n" +
	"\n" +
	"GFT_FILLED\x10\x02*=\n" +
	"\rAxisAlignment\x12\x0e\n" +
	"\n" +
	"AA_UNKNOWN\x10\x00\x12\r\n" +
	"\tAA_X_AXIS\x10\x01\x12\r\n" +
	"\tAA_Y_AXIS\x10\x02*?\n" +
	"\fMapMergeMode\x12\x0f\n" +
	"\vMMM_UNKNOWN\x10\x00\x12\r\n" +
	"\tMMM_MERGE\x10\x01\x12\x0f\n" +
	"\vMMM_REPLACE\x10\x02B%Z#github.com/kicad/proto/common/typesb\x06proto3"

var (
	file_common_types_base_types_proto_rawDescOnce sync.Once
	file_common_types_base_types_proto_rawDescData []byte
)

func file_common_types_base_types_proto_rawDescGZIP() []byte {
	file_common_types_base_types_proto_rawDescOnce.Do(func() {
		file_common_types_base_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_types_base_types_proto_rawDesc), len(file_common_types_base_types_proto_rawDesc)))
	})
	return file_common_types_base_types_proto_rawDescData
}

var file_common_types_base_types_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_types_base_types_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_common_types_base_types_proto_goTypes = []any{
	(CommandStatus)(0),                 // 0: kiapi.common.types.CommandStatus
	(FrameType)(0),                     // 1: kiapi.common.types.FrameType
	(DocumentType)(0),                  // 2: kiapi.common.types.DocumentType
	(ItemRequestStatus)(0),             // 3: kiapi.common.types.ItemRequestStatus
	(LockedState)(0),                   // 4: kiapi.common.types.LockedState
	(GraphicFillType)(0),               // 5: kiapi.common.types.GraphicFillType
	(AxisAlignment)(0),                 // 6: kiapi.common.types.AxisAlignment
	(MapMergeMode)(0),                  // 7: kiapi.common.types.MapMergeMode
	(*CommandStatusResponse)(nil),      // 8: kiapi.common.types.CommandStatusResponse
	(*KiCadVersion)(nil),               // 9: kiapi.common.types.KiCadVersion
	(*KIID)(nil),                       // 10: kiapi.common.types.KIID
	(*LibraryIdentifier)(nil),          // 11: kiapi.common.types.LibraryIdentifier
	(*SheetPath)(nil),                  // 12: kiapi.common.types.SheetPath
	(*ProjectSpecifier)(nil),           // 13: kiapi.common.types.ProjectSpecifier
	(*DocumentSpecifier)(nil),          // 14: kiapi.common.types.DocumentSpecifier
	(*ItemHeader)(nil),                 // 15: kiapi.common.types.ItemHeader
	(*Vector2)(nil),                    // 16: kiapi.common.types.Vector2
	(*Vector3)(nil),                    // 17: kiapi.common.types.Vector3
	(*Vector3D)(nil),                   // 18: kiapi.common.types.Vector3D
	(*Box2)(nil),                       // 19: kiapi.common.types.Box2
	(*Distance)(nil),                   // 20: kiapi.common.types.Distance
	(*Angle)(nil),                      // 21: kiapi.common.types.Angle
	(*Ratio)(nil),                      // 22: kiapi.common.types.Ratio
	(*Color)(nil),                      // 23: kiapi.common.types.Color
	(*ArcStartMidEnd)(nil),             // 24: kiapi.common.types.ArcStartMidEnd
	(*PolyLineNode)(nil),               // 25: kiapi.common.types.PolyLineNode
	(*PolyLine)(nil),                   // 26: kiapi.common.types.PolyLine
	(*PolygonWithHoles)(nil),           // 27: kiapi.common.types.PolygonWithHoles
	(*PolySet)(nil),                    // 28: kiapi.common.types.PolySet
	(*TextAttributes)(nil),             // 29: kiapi.common.types.TextAttributes
	(*Text)(nil),                       // 30: kiapi.common.types.Text
	(*TextBox)(nil),                    // 31: kiapi.common.types.TextBox
	(*StrokeAttributes)(nil),           // 32: kiapi.common.types.StrokeAttributes
	(*GraphicFillAttributes)(nil),      // 33: kiapi.common.types.GraphicFillAttributes
	(*GraphicAttributes)(nil),          // 34: kiapi.common.types.GraphicAttributes
	(*GraphicSegmentAttributes)(nil),   // 35: kiapi.common.types.GraphicSegmentAttributes
	(*GraphicRectangleAttributes)(nil), // 36: kiapi.common.types.GraphicRectangleAttributes
	(*GraphicArcAttributes)(nil),       // 37: kiapi.common.types.GraphicArcAttributes
	(*GraphicCircleAttributes)(nil),    // 38: kiapi.common.types.GraphicCircleAttributes
	(*GraphicBezierAttributes)(nil),    // 39: kiapi.common.types.GraphicBezierAttributes
	(*GraphicShape)(nil),               // 40: kiapi.common.types.GraphicShape
	(*CompoundShape)(nil),              // 41: kiapi.common.types.CompoundShape
	(*TitleBlockInfo)(nil),             // 42: kiapi.common.types.TitleBlockInfo
	(*fieldmaskpb.FieldMask)(nil),      // 43: google.protobuf.FieldMask
	(HorizontalAlignment)(0),           // 44: kiapi.common.types.HorizontalAlignment
	(VerticalAlignment)(0),             // 45: kiapi.common.types.VerticalAlignment
	(StrokeLineStyle)(0),               // 46: kiapi.common.types.StrokeLineStyle
}
var file_common_types_base_types_proto_depIdxs = []int32{
	0,  // 0: kiapi.common.types.CommandStatusResponse.status:type_name -> kiapi.common.types.CommandStatus
	10, // 1: kiapi.common.types.SheetPath.path:type_name -> kiapi.common.types.KIID
	2,  // 2: kiapi.common.types.DocumentSpecifier.type:type_name -> kiapi.common.types.DocumentType
	11, // 3: kiapi.common.types.DocumentSpecifier.lib_id:type_name -> kiapi.common.types.LibraryIdentifier
	12, // 4: kiapi.common.types.DocumentSpecifier.sheet_path:type_name -> kiapi.common.types.SheetPath
	13, // 5: kiapi.common.types.DocumentSpecifier.project:type_name -> kiapi.common.types.ProjectSpecifier
	14, // 6: kiapi.common.types.ItemHeader.document:type_name -> kiapi.common.types.DocumentSpecifier
	10, // 7: kiapi.common.types.ItemHeader.container:type_name -> kiapi.common.types.KIID
	43, // 8: kiapi.common.types.ItemHeader.field_mask:type_name -> google.protobuf.FieldMask
	16, // 9: kiapi.common.types.Box2.position:type_name -> kiapi.common.types.Vector2
	16, // 10: kiapi.common.types.Box2.size:type_name -> kiapi.common.types.Vector2
	16, // 11: kiapi.common.types.ArcStartMidEnd.start:type_name -> kiapi.common.types.Vector2
	16, // 12: kiapi.common.types.ArcStartMidEnd.mid:type_name -> kiapi.common.types.Vector2
	16, // 13: kiapi.common.types.ArcStartMidEnd.end:type_name -> kiapi.common.types.Vector2
	16, // 14: kiapi.common.types.PolyLineNode.point:type_name -> kiapi.common.types.Vector2
	24, // 15: kiapi.common.types.PolyLineNode.arc:type_name -> kiapi.common.types.ArcStartMidEnd
	25, // 16: kiapi.common.types.PolyLine.nodes:type_name -> kiapi.common.types.PolyLineNode
	26, // 17: kiapi.common.types.PolygonWithHoles.outline:type_name -> kiapi.common.types.PolyLine
	26, // 18: kiapi.common.types.PolygonWithHoles.holes:type_name -> kiapi.common.types.PolyLine
	27, // 19: kiapi.common.types.PolySet.polygons:type_name -> kiapi.common.types.PolygonWithHoles
	44, // 20: kiapi.common.types.TextAttributes.horizontal_alignment:type_name -> kiapi.common.types.HorizontalAlignment
	45, // 21: kiapi.common.types.TextAttributes.vertical_alignment:type_name -> kiapi.common.types.VerticalAlignment
	21, // 22: kiapi.common.types.TextAttributes.angle:type_name -> kiapi.common.types.Angle
	20, // 23: kiapi.common.types.TextAttributes.stroke_width:type_name -> kiapi.common.types.Distance
	16, // 24: kiapi.common.types.TextAttributes.size:type_name -> kiapi.common.types.Vector2
	16, // 25: kiapi.common.types.Text.position:type_name -> kiapi.common.types.Vector2
	29, // 26: kiapi.common.types.Text.attributes:type_name -> kiapi.common.types.TextAttributes
	16, // 27: kiapi.common.types.TextBox.top_left:type_name -> kiapi.common.types.Vector2
	16, // 28: kiapi.common.types.TextBox.bottom_right:type_name -> kiapi.common.types.Vector2
	29, // 29: kiapi.common.types.TextBox.attributes:type_name -> kiapi.common.types.TextAttributes
	20, // 30: kiapi.common.types.StrokeAttributes.width:type_name -> kiapi.common.types.Distance
	46, // 31: kiapi.common.types.StrokeAttributes.style:type_name -> kiapi.common.types.StrokeLineStyle
	23, // 32: kiapi.common.types.StrokeAttributes.color:type_name -> kiapi.common.types.Color
	5,  // 33: kiapi.common.types.GraphicFillAttributes.fill_type:type_name -> kiapi.common.types.GraphicFillType
	23, // 34: kiapi.common.types.GraphicFillAttributes.color:type_name -> kiapi.common.types.Color
	32, // 35: kiapi.common.types.GraphicAttributes.stroke:type_name -> kiapi.common.types.StrokeAttributes
	33, // 36: kiapi.common.types.GraphicAttributes.fill:type_name -> kiapi.common.types.GraphicFillAttributes
	16, // 37: kiapi.common.types.GraphicSegmentAttributes.start:type_name -> kiapi.common.types.Vector2
	16, // 38: kiapi.common.types.GraphicSegmentAttributes.end:type_name -> kiapi.common.types.Vector2
	16, // 39: kiapi.common.types.GraphicRectangleAttributes.top_left:type_name -> kiapi.common.types.Vector2
	16, // 40: kiapi.common.types.GraphicRectangleAttributes.bottom_right:type_name -> kiapi.common.types.Vector2
	16, // 41: kiapi.common.types.GraphicArcAttributes.start:type_name -> kiapi.common.types.Vector2
	16, // 42: kiapi.common.types.GraphicArcAttributes.mid:type_name -> kiapi.common.types.Vector2
	16, // 43: kiapi.common.types.GraphicArcAttributes.end:type_name -> kiapi.common.types.Vector2
	16, // 44: kiapi.common.types.GraphicCircleAttributes.center:type_name -> kiapi.common.types.Vector2
	16, // 45: kiapi.common.types.GraphicCircleAttributes.radius_point:type_name -> kiapi.common.types.Vector2
	16, // 46: kiapi.common.types.GraphicBezierAttributes.start:type_name -> kiapi.common.types.Vector2
	16, // 47: kiapi.common.types.GraphicBezierAttributes.control1:type_name -> kiapi.common.types.Vector2
	16, // 48: kiapi.common.types.GraphicBezierAttributes.control2:type_name -> kiapi.common.types.Vector2
	16, // 49: kiapi.common.types.GraphicBezierAttributes.end:type_name -> kiapi.common.types.Vector2
	34, // 50: kiapi.common.types.GraphicShape.attributes:type_name -> kiapi.common.types.GraphicAttributes
	35, // 51: kiapi.common.types.GraphicShape.segment:type_name -> kiapi.common.types.GraphicSegmentAttributes
	36, // 52: kiapi.common.types.GraphicShape.rectangle:type_name -> kiapi.common.types.GraphicRectangleAttributes
	37, // 53: kiapi.common.types.GraphicShape.arc:type_name -> kiapi.common.types.GraphicArcAttributes
	38, // 54: kiapi.common.types.GraphicShape.circle:type_name -> kiapi.common.types.GraphicCircleAttributes
	28, // 55: kiapi.common.types.GraphicShape.polygon:type_name -> kiapi.common.types.PolySet
	39, // 56: kiapi.common.types.GraphicShape.bezier:type_name -> kiapi.common.types.GraphicBezierAttributes
	40, // 57: kiapi.common.types.CompoundShape.shapes:type_name -> kiapi.common.types.GraphicShape
	58, // [58:58] is the sub-list for method output_type
	58, // [58:58] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_common_types_base_types_proto_init() }
func file_common_types_base_types_proto_init() {
	if File_common_types_base_types_proto != nil {
		return
	}
	file_common_types_enums_proto_init()
	file_common_types_base_types_proto_msgTypes[6].OneofWrappers = []any{
		(*DocumentSpecifier_LibId)(nil),
		(*DocumentSpecifier_SheetPath)(nil),
		(*DocumentSpecifier_BoardFilename)(nil),
	}
	file_common_types_base_types_proto_msgTypes[17].OneofWrappers = []any{
		(*PolyLineNode_Point)(nil),
		(*PolyLineNode_Arc)(nil),
	}
	file_common_types_base_types_proto_msgTypes[32].OneofWrappers = []any{
		(*GraphicShape_Segment)(nil),
		(*GraphicShape_Rectangle)(nil),
		(*GraphicShape_Arc)(nil),
		(*GraphicShape_Circle)(nil),
		(*GraphicShape_Polygon)(nil),
		(*GraphicShape_Bezier)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_types_base_types_proto_rawDesc), len(file_common_types_base_types_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_types_base_types_proto_goTypes,
		DependencyIndexes: file_common_types_base_types_proto_depIdxs,
		EnumInfos:         file_common_types_base_types_proto_enumTypes,
		MessageInfos:      file_common_types_base_types_proto_msgTypes,
	}.Build()
	File_common_types_base_types_proto = out.File
	file_common_types_base_types_proto_goTypes = nil
	file_common_types_base_types_proto_depIdxs = nil
}
