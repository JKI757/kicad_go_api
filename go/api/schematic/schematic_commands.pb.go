//
// This program source code file is part of KiCad, a free EDA CAD application.
//
// Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: schematic/schematic_commands.proto

package schematic

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_schematic_schematic_commands_proto protoreflect.FileDescriptor

const file_schematic_schematic_commands_proto_rawDesc = "" +
	"\n" +
	"\"schematic/schematic_commands.proto\x12\x15kiapi.schematic.typesB\"Z github.com/kicad/proto/schematicb\x06proto3"

var file_schematic_schematic_commands_proto_goTypes = []any{}
var file_schematic_schematic_commands_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_schematic_schematic_commands_proto_init() }
func file_schematic_schematic_commands_proto_init() {
	if File_schematic_schematic_commands_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schematic_schematic_commands_proto_rawDesc), len(file_schematic_schematic_commands_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schematic_schematic_commands_proto_goTypes,
		DependencyIndexes: file_schematic_schematic_commands_proto_depIdxs,
	}.Build()
	File_schematic_schematic_commands_proto = out.File
	file_schematic_schematic_commands_proto_goTypes = nil
	file_schematic_schematic_commands_proto_depIdxs = nil
}
